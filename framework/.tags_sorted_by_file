__MAGFRAMEWORK_H__	Targets\arm-android-linux\Debug\include\MagFramework.h	2;"	d
AGILE_LOG	Targets\arm-android-linux\Debug\include\Mag_agilelog.h	72;"	d
AGILE_LOGD	Targets\arm-android-linux\Debug\include\Mag_agilelog.h	52;"	d
AGILE_LOGE	Targets\arm-android-linux\Debug\include\Mag_agilelog.h	64;"	d
AGILE_LOGI	Targets\arm-android-linux\Debug\include\Mag_agilelog.h	56;"	d
AGILE_LOGV	Targets\arm-android-linux\Debug\include\Mag_agilelog.h	48;"	d
AGILE_LOGW	Targets\arm-android-linux\Debug\include\Mag_agilelog.h	60;"	d
AGILE_LOG_FATAL	Targets\arm-android-linux\Debug\include\Mag_agilelog.h	68;"	d
MODULE_TAG	Targets\arm-android-linux\Debug\include\Mag_agilelog.h	10;"	d
__FUNCTION_NAME__	Targets\arm-android-linux\Debug\include\Mag_agilelog.h	34;"	d
__FUNCTION_NAME__	Targets\arm-android-linux\Debug\include\Mag_agilelog.h	35;"	d
__FUNCTION_NAME__	Targets\arm-android-linux\Debug\include\Mag_agilelog.h	43;"	d
__FUNCTION_NAME__	Targets\arm-android-linux\Debug\include\Mag_agilelog.h	44;"	d
__MAG_AGILE_LOG_H__	Targets\arm-android-linux\Debug\include\Mag_agilelog.h	2;"	d
ConfigTable_t	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^}ConfigTable_t;$/;"	t	namespace:MAGAGILELOG	typeref:struct:MAGAGILELOG::__anon14
DEBUG_LEVEL_DEBUG	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    DEBUG_LEVEL_DEBUG   = 3,$/;"	e	enum:MAGAGILELOG::__anon10
DEBUG_LEVEL_ERROR	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    DEBUG_LEVEL_ERROR   = 6,$/;"	e	enum:MAGAGILELOG::__anon10
DEBUG_LEVEL_FATAL	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    DEBUG_LEVEL_FATAL   = 7,$/;"	e	enum:MAGAGILELOG::__anon10
DEBUG_LEVEL_INFO	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    DEBUG_LEVEL_INFO    = 4,$/;"	e	enum:MAGAGILELOG::__anon10
DEBUG_LEVEL_VERBOSE	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    DEBUG_LEVEL_VERBOSE = 2$/;"	e	enum:MAGAGILELOG::__anon10
DEBUG_LEVEL_WARNING	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    DEBUG_LEVEL_WARNING = 5,$/;"	e	enum:MAGAGILELOG::__anon10
DebugLevel_t	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^}DebugLevel_t;$/;"	t	namespace:MAGAGILELOG	typeref:enum:MAGAGILELOG::__anon10
Error_t	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^}Error_t;$/;"	t	namespace:MAGAGILELOG	typeref:enum:MAGAGILELOG::__anon8
FAILURE	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    FAILURE  = 1,$/;"	e	enum:MAGAGILELOG::__anon8
INVALID_OUTPUT	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    INVALID_OUTPUT = 2,$/;"	e	enum:MAGAGILELOG::__anon8
LogConfigFile_t	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^}LogConfigFile_t;$/;"	t	namespace:MAGAGILELOG	typeref:struct:MAGAGILELOG::__anon11
MAGAGILELOG	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^namespace MAGAGILELOG {$/;"	n
MagAgileLog	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^class MagAgileLog{$/;"	c	namespace:MAGAGILELOG
ModuleConfig_t	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^}ModuleConfig_t;$/;"	t	namespace:MAGAGILELOG	typeref:struct:MAGAGILELOG::__anon13
NO_ERROR	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    NO_ERROR = 0,$/;"	e	enum:MAGAGILELOG::__anon8
NO_MODULE	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    NO_MODULE = 4,$/;"	e	enum:MAGAGILELOG::__anon8
OUTPUT_FILE	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    OUTPUT_FILE    = 0x01,$/;"	e	enum:MAGAGILELOG::__anon9
OUTPUT_INVALID	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    OUTPUT_INVALID = 0x08$/;"	e	enum:MAGAGILELOG::__anon9
OUTPUT_LOGCAT	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    OUTPUT_LOGCAT  = 0x00,$/;"	e	enum:MAGAGILELOG::__anon9
OUTPUT_SOCKET	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    OUTPUT_SOCKET  = 0x04,$/;"	e	enum:MAGAGILELOG::__anon9
OUTPUT_STDOUT	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    OUTPUT_STDOUT  = 0x02,$/;"	e	enum:MAGAGILELOG::__anon9
OutputType_t	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^}OutputType_t;$/;"	t	namespace:MAGAGILELOG	typeref:enum:MAGAGILELOG::__anon9
Output_t	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^}Output_t;$/;"	t	namespace:MAGAGILELOG	typeref:struct:MAGAGILELOG::__anon12
USE_DEFAULT_CONFIG	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    USE_DEFAULT_CONFIG = 3,$/;"	e	enum:MAGAGILELOG::__anon8
__MAG_AGILE_LOG_IMPL_H__	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	2;"	d
config_debug_level	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    DebugLevel_t config_debug_level;$/;"	m	struct:MAGAGILELOG::__anon14
config_output	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    Output_t     config_output;$/;"	m	struct:MAGAGILELOG::__anon14
config_timestamp_on	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    bool         config_timestamp_on;$/;"	m	struct:MAGAGILELOG::__anon14
debugLevel	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    DebugLevel_t  debugLevel;$/;"	m	struct:MAGAGILELOG::__anon13
debugOn	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    bool          debugOn;$/;"	m	struct:MAGAGILELOG::__anon13
exists	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    int exists;$/;"	m	struct:MAGAGILELOG::__anon11
filePath	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    char filePath[16];$/;"	m	struct:MAGAGILELOG::__anon12
fnWriteToLog	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^typedef void (*fnWriteToLog)(int prio, const char *module, const char *buffer);$/;"	t	namespace:MAGAGILELOG
laseModifyTime	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    time_t laseModifyTime;$/;"	m	struct:MAGAGILELOG::__anon11
mConfigFile	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    LogConfigFile_t mConfigFile;$/;"	m	class:MAGAGILELOG::MagAgileLog
mConfigValue	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    ConfigTable_t mConfigValue;$/;"	m	class:MAGAGILELOG::MagAgileLog
mMutex	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    static pthread_mutex_t mMutex;$/;"	m	class:MAGAGILELOG::MagAgileLog
mWriteToLogFunc	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    fnWriteToLog mWriteToLogFunc;$/;"	m	class:MAGAGILELOG::MagAgileLog
mXMLParsedDoc	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    XMLDocument mXMLParsedDoc;$/;"	m	class:MAGAGILELOG::MagAgileLog
moduleName	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    char          moduleName[64];$/;"	m	struct:MAGAGILELOG::__anon13
moduleNum	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    int            moduleNum;$/;"	m	struct:MAGAGILELOG::__anon14
mpModuleHashT	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    HashTableHandle mpModuleHashT;$/;"	m	class:MAGAGILELOG::MagAgileLog
name	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    char name[256];$/;"	m	struct:MAGAGILELOG::__anon11
pModules	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    ModuleConfig_t *pModules;$/;"	m	struct:MAGAGILELOG::__anon14
port	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    int  port;$/;"	m	struct:MAGAGILELOG::__anon12
sInstance	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    static MagAgileLog *sInstance;$/;"	m	class:MAGAGILELOG::MagAgileLog
type	Targets\arm-android-linux\Debug\include\Mag_agilelogImpl.h	/^    OutputType_t type;$/;"	m	struct:MAGAGILELOG::__anon12
AGILE_LOG_DEBUG	Targets\arm-android-linux\Debug\include\Mag_agilelogInt.h	/^    AGILE_LOG_DEBUG   = 3,$/;"	e	enum:agilelog_LogPriority
AGILE_LOG_DEFAULT	Targets\arm-android-linux\Debug\include\Mag_agilelogInt.h	/^    AGILE_LOG_DEFAULT = 1,$/;"	e	enum:agilelog_LogPriority
AGILE_LOG_ERROR	Targets\arm-android-linux\Debug\include\Mag_agilelogInt.h	/^    AGILE_LOG_ERROR   = 6,$/;"	e	enum:agilelog_LogPriority
AGILE_LOG_FATAL	Targets\arm-android-linux\Debug\include\Mag_agilelogInt.h	/^    AGILE_LOG_FATAL   = 7,$/;"	e	enum:agilelog_LogPriority
AGILE_LOG_INFO	Targets\arm-android-linux\Debug\include\Mag_agilelogInt.h	/^    AGILE_LOG_INFO    = 4,$/;"	e	enum:agilelog_LogPriority
AGILE_LOG_UNKNOWN	Targets\arm-android-linux\Debug\include\Mag_agilelogInt.h	/^    AGILE_LOG_UNKNOWN = 0,$/;"	e	enum:agilelog_LogPriority
AGILE_LOG_VERBOSE	Targets\arm-android-linux\Debug\include\Mag_agilelogInt.h	/^    AGILE_LOG_VERBOSE = 2,$/;"	e	enum:agilelog_LogPriority
AGILE_LOG_WARN	Targets\arm-android-linux\Debug\include\Mag_agilelogInt.h	/^    AGILE_LOG_WARN    = 5,$/;"	e	enum:agilelog_LogPriority
__MAG_AGILE_LOG_INTERFACE_H__	Targets\arm-android-linux\Debug\include\Mag_agilelogInt.h	2;"	d
agilelog_LogPriority	Targets\arm-android-linux\Debug\include\Mag_agilelogInt.h	/^typedef enum agilelog_LogPriority {$/;"	g
agilelog_LogPriority	Targets\arm-android-linux\Debug\include\Mag_agilelogInt.h	/^}agilelog_LogPriority;$/;"	t	typeref:enum:agilelog_LogPriority
EventGroupHead	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    List_t EventGroupHead;$/;"	m	struct:mag_event_group_obj
MAG_EG_AND	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    MAG_EG_AND,$/;"	e	enum:__anon21
MAG_EG_OR	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    MAG_EG_OR$/;"	e	enum:__anon21
MAG_EVENT_GROUP_OP_t	Targets\arm-android-linux\Debug\include\Mag_event.h	/^}MAG_EVENT_GROUP_OP_t;$/;"	t	typeref:enum:__anon21
MAG_EVENT_PRIO_t	Targets\arm-android-linux\Debug\include\Mag_event.h	/^}MAG_EVENT_PRIO_t;$/;"	t	typeref:enum:__anon22
MAG_EVT_PRIO_DEFAULT	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    MAG_EVT_PRIO_DEFAULT = 0, \/*most of events should be in this list*\/$/;"	e	enum:__anon22
MAG_EVT_PRIO_HIGH	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    MAG_EVT_PRIO_HIGH = 2,$/;"	e	enum:__anon22
MAG_EVT_PRIO_LOW	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    MAG_EVT_PRIO_LOW = 1,$/;"	e	enum:__anon22
MAG_EVT_PRIO_MAX	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    MAG_EVT_PRIO_MAX = 3,$/;"	e	enum:__anon22
MAG_EVT_SCHED_NORMAL	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    MAG_EVT_SCHED_NORMAL = 0, \/*default is event retrigger while several events occur at the same time*\/$/;"	e	enum:__anon23
MAG_EVT_SCHED_NO_RETRIGGER	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    MAG_EVT_SCHED_NO_RETRIGGER, $/;"	e	enum:__anon23
MAX_EVENTS_EG	Targets\arm-android-linux\Debug\include\Mag_event.h	17;"	d
MagEventCallbackHandle	Targets\arm-android-linux\Debug\include\Mag_event.h	/^typedef MagEventCallbackObj_t *MagEventCallbackHandle;$/;"	t
MagEventCallbackObj_t	Targets\arm-android-linux\Debug\include\Mag_event.h	/^}MagEventCallbackObj_t;$/;"	t	typeref:struct:mag_event_callback_obj
MagEventGroupHandle	Targets\arm-android-linux\Debug\include\Mag_event.h	/^typedef MagEventGroupObj_t    *MagEventGroupHandle;$/;"	t
MagEventGroupObj_t	Targets\arm-android-linux\Debug\include\Mag_event.h	/^}MagEventGroupObj_t;$/;"	t	typeref:struct:mag_event_group_obj
MagEventHandle	Targets\arm-android-linux\Debug\include\Mag_event.h	/^typedef MagEvent_t            *MagEventHandle;$/;"	t
MagEventSchedulerHandle	Targets\arm-android-linux\Debug\include\Mag_event.h	/^typedef Mag_EventScheduler_t *MagEventSchedulerHandle;$/;"	t
MagEvent_t	Targets\arm-android-linux\Debug\include\Mag_event.h	/^}MagEvent_t;$/;"	t	typeref:struct:mag_event
MagEvtSchedPolicy_t	Targets\arm-android-linux\Debug\include\Mag_event.h	/^}MagEvtSchedPolicy_t;$/;"	t	typeref:enum:__anon23
Mag_EventCallback_t	Targets\arm-android-linux\Debug\include\Mag_event.h	/^}Mag_EventCallback_t;$/;"	t	typeref:struct:mag_event_callback_t
Mag_EventCommon_t	Targets\arm-android-linux\Debug\include\Mag_event.h	/^}Mag_EventCommon_t;$/;"	t	typeref:struct:mag_event_common_obj
Mag_EventScheduler_t	Targets\arm-android-linux\Debug\include\Mag_event.h	/^}Mag_EventScheduler_t;$/;"	t	typeref:struct:mag_event_scheduler_obj
Mag_EvtCbTimeStamp_t	Targets\arm-android-linux\Debug\include\Mag_event.h	/^}Mag_EvtCbTimeStamp_t;$/;"	t	typeref:struct:mag_evt_cb_ts_obj
_MAG_EVENT_H__	Targets\arm-android-linux\Debug\include\Mag_event.h	2;"	d
armed	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    unsigned int            armed;          \/* >0: the event callback is armed. =0: not armed*\/$/;"	m	struct:mag_event_callback_t
cbBody	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    MagEventCallbackHandle cbBody;$/;"	m	struct:mag_evt_cb_ts_obj
cbTimeStampFreeListH	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    List_t              cbTimeStampFreeListH;$/;"	m	struct:mag_event_scheduler_obj
cbTimeStampListH	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    List_t              cbTimeStampListH;$/;"	m	struct:mag_event_scheduler_obj
cond	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    pthread_cond_t      cond;$/;"	m	struct:mag_event_scheduler_obj
cond	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    pthread_cond_t  cond;            \/* condition to wake up from event set*\/$/;"	m	struct:mag_event_group_obj
entry	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    List_t                  entry;$/;"	m	struct:mag_event_callback_t
entry	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    List_t              entry;$/;"	m	struct:mag_event_common_obj
entry	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    List_t              entry;$/;"	m	struct:mag_event_scheduler_obj
eventNum	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    ui32    eventNum;        \/* the number of the events*\/$/;"	m	struct:mag_event_group_obj
exeEntry	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    List_t          exeEntry;$/;"	m	struct:mag_event_callback_obj
exeNum	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    ui32            exeNum;$/;"	m	struct:mag_event_callback_obj
hCallback	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    MagEventCallbackHandle  hCallback;$/;"	m	struct:mag_event_callback_t
hEventGroup	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    MagEventGroupHandle hEventGroup;$/;"	m	struct:mag_event_common_obj
hEvtScheduler	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    MagEventSchedulerHandle hEvtScheduler;$/;"	m	struct:mag_event_callback_t
listHead	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    List_t              listHead[MAG_EVT_PRIO_MAX];$/;"	m	struct:mag_event_scheduler_obj
lock	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    pthread_mutex_t         lock;            \/* mutex for protecting the object handling *\/$/;"	m	struct:mag_event_callback_t
lock	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    pthread_mutex_t     lock;            \/* mutex for protecting signal and conditional variables *\/$/;"	m	struct:mag_event_common_obj
lock	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    pthread_mutex_t     lock;$/;"	m	struct:mag_event_scheduler_obj
lock	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    pthread_mutex_t lock;            \/* mutex for protecting signal and conditional variables *\/$/;"	m	struct:mag_event_group_obj
lock	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    pthread_mutex_t lock;$/;"	m	struct:mag_event_callback_obj
mag_event	Targets\arm-android-linux\Debug\include\Mag_event.h	/^typedef struct mag_event{$/;"	s
mag_event_callback_obj	Targets\arm-android-linux\Debug\include\Mag_event.h	/^typedef struct mag_event_callback_obj{$/;"	s
mag_event_callback_t	Targets\arm-android-linux\Debug\include\Mag_event.h	/^typedef struct mag_event_callback_t{$/;"	s
mag_event_common_obj	Targets\arm-android-linux\Debug\include\Mag_event.h	/^typedef struct mag_event_common_obj{$/;"	s
mag_event_group_obj	Targets\arm-android-linux\Debug\include\Mag_event.h	/^typedef struct mag_event_group_obj{$/;"	s
mag_event_scheduler_obj	Targets\arm-android-linux\Debug\include\Mag_event.h	/^typedef struct mag_event_scheduler_obj{$/;"	s
mag_evt_cb_ts_obj	Targets\arm-android-linux\Debug\include\Mag_event.h	/^typedef struct mag_evt_cb_ts_obj{$/;"	s
option	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    MagEvtSchedPolicy_t option;$/;"	m	struct:mag_event_scheduler_obj
pCallback	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    void (*pCallback)(void *);$/;"	m	struct:mag_event_callback_obj
pContext	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    void *pContext;$/;"	m	struct:mag_event_callback_obj
pEvtCallBack	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    Mag_EventCallback_t *pEvtCallBack;$/;"	m	struct:mag_event
pEvtCommon	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    Mag_EventCommon_t   *pEvtCommon; \/\/Must be the first element$/;"	m	struct:mag_event
priority	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    MAG_EVENT_PRIO_t        priority;$/;"	m	struct:mag_event_callback_t
sTExited	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    MAG_BOOL_t          sTExited;$/;"	m	struct:mag_event_scheduler_obj
schedThread	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    pthread_t           schedThread;$/;"	m	struct:mag_event_scheduler_obj
signal	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    MAG_BOOL_t          signal;          \/* >0: the event is really triggered. =0: not triggered*\/$/;"	m	struct:mag_event_common_obj
timeDiff	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    i32             timeDiff; \/*the time difference between 2 continuous incoming events*\/$/;"	m	struct:mag_evt_cb_ts_obj
timeStamp	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    struct timespec timeStamp;$/;"	m	struct:mag_evt_cb_ts_obj	typeref:struct:mag_evt_cb_ts_obj::timespec
tsListNode	Targets\arm-android-linux\Debug\include\Mag_event.h	/^    List_t          tsListNode;$/;"	m	struct:mag_evt_cb_ts_obj
HAVE_POSIX_CLOCKS	Targets\arm-android-linux\Debug\include\Mag_hal.h	9;"	d
MAG_ASSERT	Targets\arm-android-linux\Debug\include\Mag_hal.h	28;"	d
MAG_MutexObj	Targets\arm-android-linux\Debug\include\Mag_hal.h	/^struct MAG_MutexObj{$/;"	s
MAG_STATIC_MUTEX_Acquire	Targets\arm-android-linux\Debug\include\Mag_hal.h	44;"	d
MAG_STATIC_MUTEX_INITIALIZER	Targets\arm-android-linux\Debug\include\Mag_hal.h	41;"	d
MAG_STATIC_MUTEX_Release	Targets\arm-android-linux\Debug\include\Mag_hal.h	47;"	d
MAG_SYSTEM_TIME_BOOTTIME	Targets\arm-android-linux\Debug\include\Mag_hal.h	/^    MAG_SYSTEM_TIME_BOOTTIME = 4   \/\/ same as SYSTEM_TIME_MONOTONIC, but including CPU suspend time$/;"	e	enum:__anon1
MAG_SYSTEM_TIME_MONOTONIC	Targets\arm-android-linux\Debug\include\Mag_hal.h	/^    MAG_SYSTEM_TIME_MONOTONIC = 1, \/\/ monotonic time since unspecified starting point$/;"	e	enum:__anon1
MAG_SYSTEM_TIME_PROCESS	Targets\arm-android-linux\Debug\include\Mag_hal.h	/^    MAG_SYSTEM_TIME_PROCESS = 2,   \/\/ high-resolution per-process clock$/;"	e	enum:__anon1
MAG_SYSTEM_TIME_REALTIME	Targets\arm-android-linux\Debug\include\Mag_hal.h	/^    MAG_SYSTEM_TIME_REALTIME = 0,  \/\/ system-wide realtime clock$/;"	e	enum:__anon1
MAG_SYSTEM_TIME_THREAD	Targets\arm-android-linux\Debug\include\Mag_hal.h	/^    MAG_SYSTEM_TIME_THREAD = 3,    \/\/ high-resolution per-thread clock$/;"	e	enum:__anon1
MagMutexHandle	Targets\arm-android-linux\Debug\include\Mag_hal.h	/^typedef struct MAG_MutexObj *MagMutexHandle;$/;"	t	typeref:struct:MAG_MutexObj
MagStaticMutex	Targets\arm-android-linux\Debug\include\Mag_hal.h	/^typedef pthread_mutex_t MagStaticMutex;$/;"	t
_MAG_BASE_H__	Targets\arm-android-linux\Debug\include\Mag_hal.h	2;"	d
mutex	Targets\arm-android-linux\Debug\include\Mag_hal.h	/^    pthread_mutex_t mutex;$/;"	m	struct:MAG_MutexObj
HashTableHandle	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^typedef StrHashTable_t* HashTableHandle;$/;"	t
HashTable_t	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^}HashTable_t;$/;"	t	typeref:struct:hash_table
INIT_HLIST_NODE	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^static inline void INIT_HLIST_NODE(struct hlist_node *h)$/;"	f
LinkedKeyNode_t	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^}LinkedKeyNode_t;$/;"	t	typeref:struct:linked_key_node
StrHashTable_t	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^}StrHashTable_t;$/;"	t	typeref:struct:str_hash_table
_HASHTABLE_H__	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	2;"	d
addItem	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^    void  (*addItem)(struct str_hash_table *ht, void *item, const char *str);$/;"	m	struct:str_hash_table
calcDJBHashValue	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^static inline unsigned int calcDJBHashValue(const char* str, unsigned int len)$/;"	f
delItem	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^    void  (*delItem)(struct str_hash_table *ht, const char *str);$/;"	m	struct:str_hash_table
first	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^	struct hlist_node *first;$/;"	m	struct:hlist_head	typeref:struct:hlist_head::hlist_node
getItem	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^    void* (*getItem)(struct str_hash_table *ht, const char *str);$/;"	m	struct:str_hash_table
hash_table	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^typedef struct hash_table{$/;"	s
head	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^    struct hlist_head head;$/;"	m	struct:hash_table	typeref:struct:hash_table::hlist_head
hlist_add_head	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^static inline void hlist_add_head(struct hlist_node *n, struct hlist_head *h) $/;"	f
hlist_container_of	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	15;"	d
hlist_del	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^static inline void hlist_del(struct hlist_node *n)$/;"	f
hlist_entry	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	19;"	d
hlist_for_each_entry	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	28;"	d
hlist_for_each_entry_to_tail	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	34;"	d
hlist_head	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^struct hlist_head {$/;"	s
hlist_node	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^struct hlist_node {$/;"	s
ht_offsetof	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	13;"	d
linked_key_node	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^typedef struct linked_key_node{$/;"	s
mTableSize	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^    int mTableSize;$/;"	m	struct:str_hash_table
mpTable	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^    HashTable_t *mpTable;$/;"	m	struct:str_hash_table
next	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^	struct hlist_node *next, **pprev;$/;"	m	struct:hlist_node	typeref:struct:hlist_node::hlist_node
node	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^    struct hlist_node node;$/;"	m	struct:linked_key_node	typeref:struct:linked_key_node::hlist_node
nodeStr	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^    char nodeStr[64]; \/\/the length of the key should be less than 64$/;"	m	struct:linked_key_node
nodeValue	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^    void *nodeValue;$/;"	m	struct:linked_key_node
pprev	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^	struct hlist_node *next, **pprev;$/;"	m	struct:hlist_node	typeref:struct:hlist_node::
print	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^    void  (*print)(struct str_hash_table *ht);$/;"	m	struct:str_hash_table
str_hash_table	Targets\arm-android-linux\Debug\include\Mag_hashTable.h	/^typedef struct str_hash_table{$/;"	s
INIT_LIST	Targets\arm-android-linux\Debug\include\Mag_list.h	/^static inline void INIT_LIST(List_t *head){$/;"	f
List_t	Targets\arm-android-linux\Debug\include\Mag_list.h	/^}List_t;$/;"	t	typeref:struct:list_t
_MAG_LIST_H__	Targets\arm-android-linux\Debug\include\Mag_list.h	2;"	d
container_of	Targets\arm-android-linux\Debug\include\Mag_list.h	14;"	d
is_added_list	Targets\arm-android-linux\Debug\include\Mag_list.h	/^static inline int is_added_list(List_t *node){$/;"	f
list_add	Targets\arm-android-linux\Debug\include\Mag_list.h	/^static inline void list_add(List_t *pnew, List_t *head){$/;"	f
list_add_tail	Targets\arm-android-linux\Debug\include\Mag_list.h	/^static inline void list_add_tail(List_t *pnew, List_t *head){$/;"	f
list_del	Targets\arm-android-linux\Debug\include\Mag_list.h	/^static inline void list_del(List_t *node){$/;"	f
list_entry	Targets\arm-android-linux\Debug\include\Mag_list.h	18;"	d
list_offsetof	Targets\arm-android-linux\Debug\include\Mag_list.h	12;"	d
list_t	Targets\arm-android-linux\Debug\include\Mag_list.h	/^typedef struct list_t{$/;"	s
next	Targets\arm-android-linux\Debug\include\Mag_list.h	/^    struct list_t *next;$/;"	m	struct:list_t	typeref:struct:list_t::list_t
prev	Targets\arm-android-linux\Debug\include\Mag_list.h	/^    struct list_t *prev; $/;"	m	struct:list_t	typeref:struct:list_t::list_t
Event	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^typedef struct Event {$/;"	s
MAX_MSG_PAYLOAD_NUM	Targets\arm-android-linux\Debug\include\Mag_looper.h	21;"	d
MagHandler	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^typedef struct MagHandler{$/;"	s
MagHandlerHandle	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^typedef MagHandler_t* MagHandlerHandle;$/;"	t
MagHandler_t	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^}MagHandler_t;$/;"	t	typeref:struct:MagHandler
MagItem_t	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^}MagItem_t;$/;"	t	typeref:struct:mag_item
MagLooper	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^typedef struct MagLooper{$/;"	s
MagLooperEvent_t	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^}MagLooperEvent_t;$/;"	t	typeref:struct:Event
MagLooperHandle	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^typedef MagLooper_t* MagLooperHandle;$/;"	t
MagLooper_t	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^}MagLooper_t;$/;"	t	typeref:struct:MagLooper
MagMessageHandle	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^typedef MagMessage_t* MagMessageHandle;$/;"	t
MagMessage_t	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^}MagMessage_t;$/;"	t	typeref:struct:mag_message
MsgPayloadType	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^enum MsgPayloadType {$/;"	g
NUM_PRE_ALLOCATED_EVENTS	Targets\arm-android-linux\Debug\include\Mag_looper.h	99;"	d
TypeDouble	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    TypeDouble,$/;"	e	enum:MsgPayloadType
TypeFloat	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    TypeFloat,$/;"	e	enum:MsgPayloadType
TypeInt32	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    TypeInt32,$/;"	e	enum:MsgPayloadType
TypeInt64	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    TypeInt64,$/;"	e	enum:MsgPayloadType
TypeMessage	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    TypeMessage,$/;"	e	enum:MsgPayloadType
TypePointer	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    TypePointer,$/;"	e	enum:MsgPayloadType
TypeSize	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    TypeSize,$/;"	e	enum:MsgPayloadType
TypeString	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    TypeString,$/;"	e	enum:MsgPayloadType
__MAG_LOOPER_H__	Targets\arm-android-linux\Debug\include\Mag_looper.h	2;"	d
clear	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    void      (*clear)(struct MagLooper *self);$/;"	m	struct:MagLooper
doubleValue	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^        fp64    doubleValue;$/;"	m	union:mag_item::__anon24
findDouble	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    boolean (*findDouble)(struct mag_message *msg, const char *name, fp64 *value);$/;"	m	struct:mag_message
findFloat	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    boolean (*findFloat)(struct mag_message *msg, const char *name, fp32 *value);$/;"	m	struct:mag_message
findInt32	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    boolean (*findInt32)(struct mag_message *msg, const char *name, i32 *value);$/;"	m	struct:mag_message
findInt64	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    boolean (*findInt64)(struct mag_message *msg, const char *name, i64 *value);$/;"	m	struct:mag_message
findMessage	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    boolean (*findMessage)(struct mag_message *msg, const char *name, struct mag_message **message);$/;"	m	struct:mag_message
findPointer	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    boolean (*findPointer)(struct mag_message *msg, const char *name, void **value);$/;"	m	struct:mag_message
findString	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    boolean (*findString)(struct mag_message *msg, const char *name, char **s);$/;"	m	struct:mag_message
findUInt32	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    boolean (*findUInt32)(struct mag_message *msg, const char *name, ui32 *value);$/;"	m	struct:mag_message
floatValue	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^        fp32    floatValue;$/;"	m	union:mag_item::__anon24
fnOnMessageReceived	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^typedef void (*fnOnMessageReceived)(const MagMessageHandle msg, void *priv);$/;"	t
getHandlerID	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    ui32 (*getHandlerID)(struct MagLooper *self);$/;"	m	struct:MagLooper
id	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    ui32 (*id)(struct MagHandler *h);$/;"	m	struct:MagHandler
int32Value	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^        i32     int32Value;$/;"	m	union:mag_item::__anon24
int64Value	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^        i64     int64Value;$/;"	m	union:mag_item::__anon24
mDelayEvtTreeRoot	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    RBTreeNodeHandle mDelayEvtTreeRoot;$/;"	m	struct:MagLooper
mDelayEvtWhenMS	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    i64 mDelayEvtWhenMS;$/;"	m	struct:MagLooper
mFreeEvtQueue	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    List_t mFreeEvtQueue;$/;"	m	struct:MagLooper
mFreeNodeNum	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    i32 mFreeNodeNum;$/;"	m	struct:MagLooper
mHandlerID	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    ui32 mHandlerID;$/;"	m	struct:MagLooper
mHandlerTreeRoot	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    RBTreeNodeHandle mHandlerTreeRoot;$/;"	m	struct:MagLooper
mItems	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    MagItem_t mItems[MAX_MSG_PAYLOAD_NUM];$/;"	m	struct:mag_message
mLock	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    MagMutexHandle mLock;$/;"	m	struct:MagLooper
mLooper	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    struct MagLooper *mLooper;$/;"	m	struct:mag_message	typeref:struct:mag_message::MagLooper
mLooperID	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    ui32 mLooperID;$/;"	m	struct:MagLooper
mLooperThread	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    MagThreadHandle mLooperThread;$/;"	m	struct:MagLooper
mMQEmptyPushEvt	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    MagEventHandle      mMQEmptyPushEvt;$/;"	m	struct:MagLooper
mMQPushEvtGroup	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    MagEventGroupHandle mMQPushEvtGroup;$/;"	m	struct:MagLooper
mMessage	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    struct mag_message *mMessage;$/;"	m	struct:Event	typeref:struct:Event::mag_message
mMsgProcessor	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    fnOnMessageReceived mMsgProcessor;$/;"	m	struct:MagHandler
mName	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    const char *mName;$/;"	m	struct:mag_item
mNoDelayEvtQueue	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    List_t mNoDelayEvtQueue;$/;"	m	struct:MagLooper
mNumItems	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    ui32 mNumItems;$/;"	m	struct:mag_message
mOwnedByMsg	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    boolean mOwnedByMsg;$/;"	m	struct:mag_item
mTarget	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    ui32 mTarget;$/;"	m	struct:mag_message
mType	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    enum MsgPayloadType mType;$/;"	m	struct:mag_item	typeref:enum:mag_item::MsgPayloadType
mWhat	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    ui32 mWhat;$/;"	m	struct:mag_message
mWhenMs	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    i64 mWhenMs;$/;"	m	struct:Event
mag_item	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^typedef struct mag_item{$/;"	s
mag_message	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^typedef struct mag_message{$/;"	s
messageValue	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^        struct mag_message *messageValue;$/;"	m	union:mag_item::__anon24	typeref:struct:mag_item::__anon24::mag_message
mpName	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    ui8 *mpName;$/;"	m	struct:MagLooper
node	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    List_t node;$/;"	m	struct:Event
postMessage	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    boolean (*postMessage)(struct mag_message *msg, i64 delayMs);$/;"	m	struct:mag_message
postMessage	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    void (*postMessage)(struct MagLooper *self, MagMessage_t *msg, i64 delayUs);$/;"	m	struct:MagLooper
priv	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    void *priv; \/*the pointer to the concrete handler object*\/$/;"	m	struct:MagHandler
ptrValue	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^        void    *ptrValue;$/;"	m	union:mag_item::__anon24
registerHandler	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    void (*registerHandler)(struct MagLooper *self, const MagHandler_t *handler);$/;"	m	struct:MagLooper
setDouble	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    void (*setDouble)(struct mag_message *msg, const char *name, fp64 value);$/;"	m	struct:mag_message
setFloat	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    void (*setFloat)(struct mag_message *msg, const char *name, fp32 value);$/;"	m	struct:mag_message
setInt32	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    void (*setInt32)(struct mag_message *msg, const char *name, i32 value);$/;"	m	struct:mag_message
setInt64	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    void (*setInt64)(struct mag_message *msg, const char *name, i64 value);$/;"	m	struct:mag_message
setMessage	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    void (*setMessage)(struct mag_message *msg, const char *name, struct mag_message *message, boolean owndedByMsg);$/;"	m	struct:mag_message
setPointer	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    void (*setPointer)(struct mag_message *msg, const char *name, void *value, boolean owndedByMsg);$/;"	m	struct:mag_message
setString	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    void (*setString)(struct mag_message *msg, const char *name, const char *s);$/;"	m	struct:mag_message
setUInt32	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    void (*setUInt32)(struct mag_message *msg, const char *name, ui32 value);$/;"	m	struct:mag_message
start	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    _status_t (*start)(struct MagLooper *self);$/;"	m	struct:MagLooper
stop	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    _status_t (*stop)(struct MagLooper *self);$/;"	m	struct:MagLooper
stringValue	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^        char    *stringValue;$/;"	m	union:mag_item::__anon24
u	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    } u;$/;"	m	struct:mag_item	typeref:union:mag_item::__anon24
ui32Value	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^        ui32    ui32Value;$/;"	m	union:mag_item::__anon24
uiID	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    ui32 uiID;$/;"	m	struct:MagHandler
unregisterHandler	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    _status_t (*unregisterHandler)(struct MagLooper *self, i32 handlerID);$/;"	m	struct:MagLooper
waitOnAllDone	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    _status_t (*waitOnAllDone)(struct MagLooper *self);$/;"	m	struct:MagLooper
what	Targets\arm-android-linux\Debug\include\Mag_looper.h	/^    ui32 (*what)(struct mag_message *msg);$/;"	m	struct:mag_message
MAG_GCC_VERSION_AT_LEAST	Targets\arm-android-linux\Debug\include\Mag_mem.h	13;"	d
MAG_GCC_VERSION_AT_LEAST	Targets\arm-android-linux\Debug\include\Mag_mem.h	15;"	d
__MAG_MEM_H__	Targets\arm-android-linux\Debug\include\Mag_mem.h	2;"	d
mag_alloc_size	Targets\arm-android-linux\Debug\include\Mag_mem.h	26;"	d
mag_alloc_size	Targets\arm-android-linux\Debug\include\Mag_mem.h	28;"	d
mag_malloc_attrib	Targets\arm-android-linux\Debug\include\Mag_mem.h	20;"	d
mag_malloc_attrib	Targets\arm-android-linux\Debug\include\Mag_mem.h	22;"	d
BUF_ALIGN	Targets\arm-android-linux\Debug\include\Mag_mempool.h	14;"	d
MemPoolTotal	Targets\arm-android-linux\Debug\include\Mag_mempool.h	/^    unsigned int MemPoolTotal;  \/* the total number of the mempools *\/$/;"	m	struct:__anon2
__MAG_MEM_POOL_H__	Targets\arm-android-linux\Debug\include\Mag_mempool.h	2;"	d
activeMBNode	Targets\arm-android-linux\Debug\include\Mag_mempool.h	/^    List_t *activeMBNode;       \/*point to the MB that hit the allocation in the nearest time*\/$/;"	m	struct:magMempoolInternal_t
allocatedMBListHead	Targets\arm-android-linux\Debug\include\Mag_mempool.h	/^    List_t allocatedMBListHead; \/*organized as FIFO*\/$/;"	m	struct:__anon2
end	Targets\arm-android-linux\Debug\include\Mag_mempool.h	/^    unsigned int end;$/;"	m	struct:__anon3
freeMBListHead	Targets\arm-android-linux\Debug\include\Mag_mempool.h	/^    List_t freeMBListHead;      \/*the free MB nearest to the Mem Pool is always the first node in the list*\/   $/;"	m	struct:magMempoolInternal_t
index	Targets\arm-android-linux\Debug\include\Mag_mempool.h	/^    unsigned int index;         \/* the index of the mempool in terms of the creation time*\/$/;"	m	struct:magMempoolInternal_t
magMemBlock_t	Targets\arm-android-linux\Debug\include\Mag_mempool.h	/^}magMemBlock_t;$/;"	t	typeref:struct:__anon3
magMemPoolMgr_t	Targets\arm-android-linux\Debug\include\Mag_mempool.h	/^}magMemPoolMgr_t;$/;"	t	typeref:struct:__anon2
magMempoolHandle	Targets\arm-android-linux\Debug\include\Mag_mempool.h	/^typedef magMemPoolMgr_t* magMempoolHandle;$/;"	t
magMempoolInternal_t	Targets\arm-android-linux\Debug\include\Mag_mempool.h	/^typedef struct magMempoolInternal_t{$/;"	s
magMempoolInternal_t	Targets\arm-android-linux\Debug\include\Mag_mempool.h	/^}magMempoolInternal_t;$/;"	t	typeref:struct:magMempoolInternal_t
memPoolListHead	Targets\arm-android-linux\Debug\include\Mag_mempool.h	/^    List_t memPoolListHead;     \/*link the magMempoolInternal_t nodes*\/$/;"	m	struct:__anon2
memPoolSize	Targets\arm-android-linux\Debug\include\Mag_mempool.h	/^    unsigned int memPoolSize;$/;"	m	struct:magMempoolInternal_t
mutex	Targets\arm-android-linux\Debug\include\Mag_mempool.h	/^    pthread_mutex_t mutex;$/;"	m	struct:__anon2
node	Targets\arm-android-linux\Debug\include\Mag_mempool.h	/^    List_t node;$/;"	m	struct:__anon3
node	Targets\arm-android-linux\Debug\include\Mag_mempool.h	/^    List_t node;$/;"	m	struct:magMempoolInternal_t
pBuf	Targets\arm-android-linux\Debug\include\Mag_mempool.h	/^    unsigned char *pBuf;$/;"	m	struct:__anon3
pMemPool	Targets\arm-android-linux\Debug\include\Mag_mempool.h	/^    magMempoolInternal_t *pMemPool;$/;"	m	struct:__anon3
pMemPoolBuf	Targets\arm-android-linux\Debug\include\Mag_mempool.h	/^    unsigned char *pMemPoolBuf;$/;"	m	struct:magMempoolInternal_t
start	Targets\arm-android-linux\Debug\include\Mag_mempool.h	/^    unsigned int start;$/;"	m	struct:__anon3
unusedMBListHead	Targets\arm-android-linux\Debug\include\Mag_mempool.h	/^    List_t unusedMBListHead;    \/*no order. used to list the unused magMemBlock_t for later using*\/$/;"	m	struct:__anon2
MagMiniDBHandle	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^typedef MagMiniDB_t* MagMiniDBHandle;$/;"	t
MagMiniDBItemHandle	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^typedef MagMiniDBItem_t* MagMiniDBItemHandle;$/;"	t
MagMiniDBItemType	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^enum MagMiniDBItemType {$/;"	g
MagMiniDBItem_t	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^}MagMiniDBItem_t;$/;"	t	typeref:struct:mag_minidb_item
MagMiniDB_TypeDouble	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    MagMiniDB_TypeDouble,$/;"	e	enum:MagMiniDBItemType
MagMiniDB_TypeFloat	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    MagMiniDB_TypeFloat,$/;"	e	enum:MagMiniDBItemType
MagMiniDB_TypeInt32	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    MagMiniDB_TypeInt32,$/;"	e	enum:MagMiniDBItemType
MagMiniDB_TypeInt64	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    MagMiniDB_TypeInt64,$/;"	e	enum:MagMiniDBItemType
MagMiniDB_TypePointer	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    MagMiniDB_TypePointer,$/;"	e	enum:MagMiniDBItemType
MagMiniDB_TypeString	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    MagMiniDB_TypeString,$/;"	e	enum:MagMiniDBItemType
MagMiniDB_TypeUInt32	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    MagMiniDB_TypeUInt32,$/;"	e	enum:MagMiniDBItemType
MagMiniDB_t	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^}MagMiniDB_t;$/;"	t	typeref:struct:mag_minidb
__MAG_MINIDB_H__	Targets\arm-android-linux\Debug\include\Mag_minidb.h	2;"	d
deleteItem	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    void    (*deleteItem)(struct mag_minidb *db, const char *name);$/;"	m	struct:mag_minidb
derefItem	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    void    (*derefItem)(struct mag_minidb *db, const char *name);$/;"	m	struct:mag_minidb
doubleValue	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^        fp64    doubleValue;$/;"	m	union:mag_minidb_item::__anon6
findDouble	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    boolean (*findDouble)(struct mag_minidb *db, const char *name, fp64 *value);$/;"	m	struct:mag_minidb
findFloat	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    boolean (*findFloat)(struct mag_minidb *db, const char *name, fp32 *value);$/;"	m	struct:mag_minidb
findInt32	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    boolean (*findInt32)(struct mag_minidb *db, const char *name, i32 *value);$/;"	m	struct:mag_minidb
findInt64	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    boolean (*findInt64)(struct mag_minidb *db, const char *name, i64 *value);$/;"	m	struct:mag_minidb
findPointer	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    boolean (*findPointer)(struct mag_minidb *db, const char *name, void **value);$/;"	m	struct:mag_minidb
findString	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    boolean (*findString)(struct mag_minidb *db, const char *name, char **s);$/;"	m	struct:mag_minidb
findUInt32	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    boolean (*findUInt32)(struct mag_minidb *db, const char *name, ui32 *value);$/;"	m	struct:mag_minidb
floatValue	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^        fp32    floatValue;$/;"	m	union:mag_minidb_item::__anon6
int32Value	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^        i32     int32Value;$/;"	m	union:mag_minidb_item::__anon6
int64Value	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^        i64     int64Value;$/;"	m	union:mag_minidb_item::__anon6
mItemListHead	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    List_t mItemListHead;$/;"	m	struct:mag_minidb
mItemNum	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    ui32 mItemNum;$/;"	m	struct:mag_minidb
mLock	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    MagMutexHandle mLock;$/;"	m	struct:mag_minidb
mName	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    char *mName;$/;"	m	struct:mag_minidb_item
mType	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    enum MagMiniDBItemType mType;$/;"	m	struct:mag_minidb_item	typeref:enum:mag_minidb_item::MagMiniDBItemType
mag_minidb	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^typedef struct mag_minidb{$/;"	s
mag_minidb_item	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^typedef struct mag_minidb_item{$/;"	s
mhHashTable	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    HashTableHandle mhHashTable;$/;"	m	struct:mag_minidb
node	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    List_t node;$/;"	m	struct:mag_minidb_item
ptrValue	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^        void    *ptrValue;$/;"	m	union:mag_minidb_item::__anon6
setDouble	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    void (*setDouble)(struct mag_minidb *db, const char *name, fp64 value);$/;"	m	struct:mag_minidb
setFloat	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    void (*setFloat)(struct mag_minidb *db, const char *name, fp32 value);$/;"	m	struct:mag_minidb
setInt32	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    void (*setInt32)(struct mag_minidb *db, const char *name, i32 value);$/;"	m	struct:mag_minidb
setInt64	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    void (*setInt64)(struct mag_minidb *db, const char *name, i64 value);$/;"	m	struct:mag_minidb
setPointer	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    void (*setPointer)(struct mag_minidb *db, const char *name, void *value);$/;"	m	struct:mag_minidb
setString	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    void (*setString)(struct mag_minidb *db, const char *name, const char *s);$/;"	m	struct:mag_minidb
setUInt32	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    void (*setUInt32)(struct mag_minidb *db, const char *name, ui32 value);$/;"	m	struct:mag_minidb
stringValue	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^        char    *stringValue;$/;"	m	union:mag_minidb_item::__anon6
u	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^    } u;$/;"	m	struct:mag_minidb_item	typeref:union:mag_minidb_item::__anon6
uint32Value	Targets\arm-android-linux\Debug\include\Mag_minidb.h	/^        ui32    uint32Value;$/;"	m	union:mag_minidb_item::__anon6
MSG_CTRL_RUN	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^    MSG_CTRL_RUN,$/;"	e	enum:__anon5
MSG_CTRL_STOP	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^    MSG_CTRL_STOP = 0,$/;"	e	enum:__anon5
MSG_DISCARD	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^    MSG_DISCARD = 0,  \/*discard all messages and stop immediately*\/$/;"	e	enum:__anon4
MSG_FLUSH	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^    MSG_FLUSH,        \/*finish all messages before stopping*\/$/;"	e	enum:__anon4
MagMsgChannelHandle	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^typedef Mag_MsgChannel_t* MagMsgChannelHandle;$/;"	t
Mag_Message_t	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^}Mag_Message_t;$/;"	t	typeref:struct:mag_msg_obj
Mag_MsgChannel_t	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^}Mag_MsgChannel_t;$/;"	t	typeref:struct:mag_msg_channel_obj
Mag_MsgCtrlType_t	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^}Mag_MsgCtrlType_t;$/;"	t	typeref:enum:__anon5
Mag_MsgDetachFlag_t	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^}Mag_MsgDetachFlag_t;$/;"	t	typeref:enum:__anon4
ReceiverThread	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^    pthread_t ReceiverThread;$/;"	m	struct:mag_msg_channel_obj
_MAG_MESSAGE_H__	Targets\arm-android-linux\Debug\include\Mag_msg.h	2;"	d
ctrlType	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^    Mag_MsgCtrlType_t ctrlType;   $/;"	m	struct:mag_msg_obj
event	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^    MagEventHandle      event;$/;"	m	struct:mag_msg_channel_obj
evtGrp	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^    MagEventGroupHandle evtGrp;$/;"	m	struct:mag_msg_channel_obj
fnMsgChanReceiver	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^typedef void (*fnMsgChanReceiver)(void *msg, void *priv);$/;"	t
freeMsgListHead	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^    List_t freeMsgListHead;$/;"	m	struct:mag_msg_channel_obj
lock	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^    pthread_mutex_t lock;$/;"	m	struct:mag_msg_channel_obj
mag_msg_channel_obj	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^typedef struct mag_msg_channel_obj{$/;"	s
mag_msg_obj	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^typedef struct mag_msg_obj{$/;"	s
msgBody	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^    unsigned char *msgBody;$/;"	m	struct:mag_msg_obj
msgLen	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^    unsigned int  msgLen;$/;"	m	struct:mag_msg_obj
msgQueueHead	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^    List_t msgQueueHead;$/;"	m	struct:mag_msg_channel_obj
node	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^    List_t node;$/;"	m	struct:mag_msg_obj
privData	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^    void *privData;$/;"	m	struct:mag_msg_channel_obj
receiverFunc	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^    fnMsgChanReceiver receiverFunc;$/;"	m	struct:mag_msg_channel_obj
stopped	Targets\arm-android-linux\Debug\include\Mag_msg.h	/^    MAG_BOOL_t stopped;$/;"	m	struct:mag_msg_channel_obj
MAG_MQ_REALLOCATED_NODES	Targets\arm-android-linux\Debug\include\Mag_msgQueue.h	10;"	d
Mag_MsgQueueHandle	Targets\arm-android-linux\Debug\include\Mag_msgQueue.h	/^typedef Mag_MsgQueue_t* Mag_MsgQueueHandle;$/;"	t
Mag_MsgQueueNode_t	Targets\arm-android-linux\Debug\include\Mag_msgQueue.h	/^}Mag_MsgQueueNode_t;$/;"	t	typeref:struct:__anon18
Mag_MsgQueue_t	Targets\arm-android-linux\Debug\include\Mag_msgQueue.h	/^}Mag_MsgQueue_t;$/;"	t	typeref:struct:mag_msg_queue
__MAG_MESSAGE_QUEUE_H__	Targets\arm-android-linux\Debug\include\Mag_msgQueue.h	2;"	d
get	Targets\arm-android-linux\Debug\include\Mag_msgQueue.h	/^    void (*get)(struct mag_msg_queue *h, MagMessageHandle *msg);$/;"	m	struct:mag_msg_queue
mFreeHead	Targets\arm-android-linux\Debug\include\Mag_msgQueue.h	/^    List_t mFreeHead;$/;"	m	struct:mag_msg_queue
mLock	Targets\arm-android-linux\Debug\include\Mag_msgQueue.h	/^    MagMutexHandle mLock;$/;"	m	struct:mag_msg_queue
mQueueHead	Targets\arm-android-linux\Debug\include\Mag_msgQueue.h	/^    List_t mQueueHead;$/;"	m	struct:mag_msg_queue
mag_msg_queue	Targets\arm-android-linux\Debug\include\Mag_msgQueue.h	/^typedef struct mag_msg_queue{$/;"	s
msg	Targets\arm-android-linux\Debug\include\Mag_msgQueue.h	/^    MagMessageHandle msg;$/;"	m	struct:__anon18
node	Targets\arm-android-linux\Debug\include\Mag_msgQueue.h	/^    List_t node;$/;"	m	struct:__anon18
put	Targets\arm-android-linux\Debug\include\Mag_msgQueue.h	/^    void (*put)(struct mag_msg_queue *h, MagMessageHandle msg);$/;"	m	struct:mag_msg_queue
AllocateClass	Targets\arm-android-linux\Debug\include\Mag_ooc.h	237;"	d
BaseObject	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^struct BaseObject											$/;"	s
BaseVtable	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^typedef		struct BaseVtable_stru * BaseVtable;$/;"	t	typeref:struct:BaseVtable_stru
BaseVtable_stru	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^struct BaseVtable_stru$/;"	s
Class	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^typedef ROM struct ClassTable * Class;$/;"	t	typeref:struct:ClassTable
ClassCommons	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^typedef ROM struct _ClassCommonsTable * ClassCommons;$/;"	t	typeref:struct:_ClassCommonsTable
ClassCommonsTable	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^}	ClassCommonsTable;$/;"	t	typeref:struct:_ClassCommonsTable
ClassMembers	Targets\arm-android-linux\Debug\include\Mag_ooc.h	160;"	d
ClassTable	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^struct ClassTable$/;"	s
DeclareClass	Targets\arm-android-linux\Debug\include\Mag_ooc.h	141;"	d
EndOfClassMembers	Targets\arm-android-linux\Debug\include\Mag_ooc.h	169;"	d
EndOfVirtuals	Targets\arm-android-linux\Debug\include\Mag_ooc.h	223;"	d
FALSE	Targets\arm-android-linux\Debug\include\Mag_ooc.h	33;"	d
InterfaceID	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^typedef ROM struct InterfaceID_struct * InterfaceID;$/;"	t	typeref:struct:InterfaceID_struct
InterfaceOffsets_struct	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^struct InterfaceOffsets_struct$/;"	s
Itable	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^typedef ROM struct InterfaceOffsets_struct * Itable;$/;"	t	typeref:struct:InterfaceOffsets_struct
OOC_IMPLEMENT_PTR_READ_AND_NULL	Targets\arm-android-linux\Debug\include\Mag_ooc.h	334;"	d
Object	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^typedef		struct BaseObject * Object;$/;"	t	typeref:struct:BaseObject
ROM	Targets\arm-android-linux\Debug\include\Mag_ooc.h	41;"	d
ROM_ALLOC	Targets\arm-android-linux\Debug\include\Mag_ooc.h	45;"	d
TRUE	Targets\arm-android-linux\Debug\include\Mag_ooc.h	34;"	d
Virtuals	Targets\arm-android-linux\Debug\include\Mag_ooc.h	208;"	d
Vtable	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^typedef            BaseVtable    Vtable;$/;"	t
_ClassCommonsTable	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^struct _ClassCommonsTable$/;"	s
_OOC_TYPE_CLASS	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^enum ooc_TypeID { _OOC_TYPE_CLASS, _OOC_TYPE_INTERFACE, _OOC_TYPE_MIXIN };$/;"	e	enum:ooc_TypeID
_OOC_TYPE_INTERFACE	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^enum ooc_TypeID { _OOC_TYPE_CLASS, _OOC_TYPE_INTERFACE, _OOC_TYPE_MIXIN };$/;"	e	enum:ooc_TypeID
_OOC_TYPE_MIXIN	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^enum ooc_TypeID { _OOC_TYPE_CLASS, _OOC_TYPE_INTERFACE, _OOC_TYPE_MIXIN };$/;"	e	enum:ooc_TypeID
__MAG_OOC_H__	Targets\arm-android-linux\Debug\include\Mag_ooc.h	25;"	d
_class	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^	Class			_class;	$/;"	m	struct:BaseVtable_stru
_class_register_next	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^	ClassCommons	_class_register_next;$/;"	m	struct:BaseVtable_stru
_class_register_prev	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^	ClassCommons	_class_register_prev;$/;"	m	struct:BaseVtable_stru
_declare_vtab_access	Targets\arm-android-linux\Debug\include\Mag_ooc.h	190;"	d
_destroy_check	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^	int   			(* _destroy_check )( Object );$/;"	m	struct:BaseVtable_stru
_parent_vtab_access_fn	Targets\arm-android-linux\Debug\include\Mag_ooc.h	184;"	d
_parent_vtab_access_prototype	Targets\arm-android-linux\Debug\include\Mag_ooc.h	181;"	d
_vtab	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^	Vtable	_vtab;$/;"	m	struct:BaseObject
_vtab_access_fn	Targets\arm-android-linux\Debug\include\Mag_ooc.h	177;"	d
_vtab_access_prototype	Targets\arm-android-linux\Debug\include\Mag_ooc.h	174;"	d
c	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^	ClassCommonsTable	c;$/;"	m	struct:ClassTable
chain_constructor	Targets\arm-android-linux\Debug\include\Mag_ooc.h	373;"	d
ctor	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^	void				(* ctor) (Object self, const void * params );	\/* constructor *\/$/;"	m	struct:ClassTable
dtor	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^	void				(* dtor) (Object self, Vtable vtab);			\/* destructor *\/$/;"	m	struct:ClassTable
id	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^	InterfaceID		id;					\/* The interface ID of the implemented interface *\/$/;"	m	struct:InterfaceOffsets_struct
init	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^	void				(* init) ( Class thiz );        				\/* class initializer *\/$/;"	m	struct:ClassTable
itab_size	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^	const size_t		itab_size;			\/* the number of implemented Interfaces *\/$/;"	m	struct:ClassTable
itable	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^	Itable				itable;				\/* the implemented interfaces' Itable *\/$/;"	m	struct:ClassTable
name	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^	ROM char *			name;				\/* the name of the type (for information only) *\/$/;"	m	struct:__anon17
oocType	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^oocType;$/;"	t	typeref:struct:__anon17
ooc_TypeID	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^enum ooc_TypeID { _OOC_TYPE_CLASS, _OOC_TYPE_INTERFACE, _OOC_TYPE_MIXIN };$/;"	g
ooc_cast	Targets\arm-android-linux\Debug\include\Mag_ooc.h	348;"	d
ooc_class_has_parent	Targets\arm-android-linux\Debug\include\Mag_ooc.h	276;"	d
ooc_init_class	Targets\arm-android-linux\Debug\include\Mag_ooc.h	285;"	d
ooc_isInitialized	Targets\arm-android-linux\Debug\include\Mag_ooc.h	384;"	d
ooc_new	Targets\arm-android-linux\Debug\include\Mag_ooc.h	305;"	d
parent	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^	ROM   Class		 	parent;				\/* parent of the class *\/$/;"	m	struct:ClassTable
size	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^	const size_t		size;				\/* size of the object *\/$/;"	m	struct:ClassTable
type	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^	oocType				type;				\/* Type identifier *\/$/;"	m	struct:_ClassCommonsTable
value	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^	enum ooc_TypeID		value;$/;"	m	struct:__anon17	typeref:enum:__anon17::ooc_TypeID
vtab_offset	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^	size_t			vtab_offset;		\/* The offset of the interface in the class's virtual table *\/$/;"	m	struct:InterfaceOffsets_struct
vtab_size	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^	const size_t		vtab_size;			\/* the size of the vtable *\/$/;"	m	struct:ClassTable
vtable	Targets\arm-android-linux\Debug\include\Mag_ooc.h	/^	Vtable			    vtable;				\/* the pointer to the virtual function's table *\/$/;"	m	struct:_ClassCommonsTable
MAG_ALREADY_EXISTS	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_ALREADY_EXISTS      = -EEXIST,$/;"	e	enum:__anon16
MAG_AssertFault	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_AssertFault,$/;"	e	enum:__anon15
MAG_BAD_INDEX	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_BAD_INDEX           = -EOVERFLOW,$/;"	e	enum:__anon16
MAG_BAD_TYPE	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_BAD_TYPE            = 0x80000001,$/;"	e	enum:__anon16
MAG_BAD_VALUE	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_BAD_VALUE           = -EINVAL,$/;"	e	enum:__anon16
MAG_BadEvtWait	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_BadEvtWait,$/;"	e	enum:__anon15
MAG_BadParameter	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_BadParameter,$/;"	e	enum:__anon15
MAG_DEAD_OBJECT	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_DEAD_OBJECT         = -EPIPE,$/;"	e	enum:__anon16
MAG_ErrCondCreate	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_ErrCondCreate,$/;"	e	enum:__anon15
MAG_ErrEvtSetOp	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_ErrEvtSetOp,$/;"	e	enum:__anon15
MAG_ErrGetTime	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_ErrGetTime,$/;"	e	enum:__anon15
MAG_ErrMaxEventNum	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_ErrMaxEventNum,$/;"	e	enum:__anon15
MAG_ErrMutexCreate	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_ErrMutexCreate,$/;"	e	enum:__anon15
MAG_ErrNone	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_ErrNone = 0,$/;"	e	enum:__anon15
MAG_ErrThreadCreate	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_ErrThreadCreate,$/;"	e	enum:__anon15
MAG_EventStatusErr	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_EventStatusErr,$/;"	e	enum:__anon15
MAG_EventStatusMeet	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_EventStatusMeet,$/;"	e	enum:__anon15
MAG_FAILED_TRANSACTION	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_FAILED_TRANSACTION  = 0x80000002,$/;"	e	enum:__anon16
MAG_Failure	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_Failure,$/;"	e	enum:__anon15
MAG_GCC_VERSION_AT_LEAST	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	7;"	d
MAG_GCC_VERSION_AT_LEAST	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	9;"	d
MAG_INVALID_OPERATION	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_INVALID_OPERATION   = -ENOSYS,$/;"	e	enum:__anon16
MAG_InvalidOperation	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_InvalidOperation,$/;"	e	enum:__anon15
MAG_InvalidPointer	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_InvalidPointer,$/;"	e	enum:__anon15
MAG_NAME_NOT_FOUND	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_NAME_NOT_FOUND      = -ENOENT,$/;"	e	enum:__anon16
MAG_NOT_ENOUGH_DATA	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_NOT_ENOUGH_DATA     = -ENODATA,$/;"	e	enum:__anon16
MAG_NO_ERROR	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_NO_ERROR            = 0,    \/\/ No errors.$/;"	e	enum:__anon16
MAG_NO_INIT	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_NO_INIT             = -ENODEV,$/;"	e	enum:__anon16
MAG_NO_MEMORY	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_NO_MEMORY           = -ENOMEM,$/;"	e	enum:__anon16
MAG_NoMemory	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_NoMemory,$/;"	e	enum:__anon15
MAG_OK	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_OK                  = 0,    \/\/ Everything's swell.$/;"	e	enum:__anon16
MAG_PERMISSION_DENIED	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_PERMISSION_DENIED   = -EPERM,$/;"	e	enum:__anon16
MAG_STATUS_EXTENSION	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_STATUS_EXTENSION    = 0x80000010,$/;"	e	enum:__anon16
MAG_TIMED_OUT	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_TIMED_OUT           = -ETIMEDOUT,$/;"	e	enum:__anon16
MAG_TIMEOUT_INFINITE	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	57;"	d
MAG_TimeOut	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_TimeOut,$/;"	e	enum:__anon15
MAG_UNKNOWN_ERROR	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_UNKNOWN_ERROR       = 0x80000000,$/;"	e	enum:__anon16
MAG_UNKNOWN_TRANSACTION	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_UNKNOWN_TRANSACTION = -EBADMSG,$/;"	e	enum:__anon16
MAG_WOULD_BLOCK	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^    MAG_WOULD_BLOCK         = -EWOULDBLOCK, $/;"	e	enum:__anon16
MagErr_t	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	/^}MagErr_t;$/;"	t	typeref:enum:__anon15
_MAG_PUB_DEF_H__	Targets\arm-android-linux\Debug\include\Mag_pub_def.h	2;"	d
MAG_BOOL_t	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^}MAG_BOOL_t;$/;"	t	typeref:enum:__anon7
MAG_FALSE	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^    MAG_FALSE = 0,$/;"	e	enum:__anon7
MAG_TRUE	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^    MAG_TRUE = 1$/;"	e	enum:__anon7
__MAG_PUB_TYPE_H__	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	2;"	d
_size_t	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef size_t             _size_t;$/;"	t
_size_t	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef ui32               _size_t;    $/;"	t
_status_t	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef i32                _status_t;$/;"	t
_status_t	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef int32_t            _status_t;$/;"	t
b32	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef ui32               b32;        \/\/\/< 32-bit boolean value$/;"	t
b8	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef ui8                b8;         \/\/\/< 8-bit boolean value$/;"	t
boolean	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef MAG_BOOL_t         boolean;    \/\/\/< 'bool' for C-language$/;"	t
fp32	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef float              fp32;       \/\/\/< 32-bit floating point number$/;"	t
fp64	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef double             fp64;       \/\/\/< 64-bit floating point number$/;"	t
i16	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef int16_t            i16;        \/\/\/< Signed 16-bit integer$/;"	t
i16	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef signed short       i16;        \/\/\/< Signed 16-bit integer$/;"	t
i32	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef int32_t            i32;        \/\/\/< Signed 32-bit integer$/;"	t
i32	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef signed int         i32;        \/\/\/< Signed 32-bit integer$/;"	t
i64	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef int64_t            i64;        \/\/\/< Signed 64-bit integer$/;"	t
i64	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef signed long long   i64;        \/\/\/< Signed 64-bit integer$/;"	t
i8	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef char               i8;         \/\/\/< Signed 8-bit integer$/;"	t
i8	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef int8_t             i8;         \/\/\/< Signed 8-bit integer$/;"	t
io16	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef volatile ui16      io16;       \/\/\/< 16-bit I\/O Port$/;"	t
io32	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef volatile ui32      io32;       \/\/\/< 32-bit I\/O Port$/;"	t
io64	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef volatile ui64      io64;       \/\/\/< 64-bit I\/O Port$/;"	t
io8	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef volatile ui8       io8;        \/\/\/< 8-bit I\/O Port$/;"	t
ui16	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef uint16_t           ui16;       \/\/\/< Unsigned 16-bit integer$/;"	t
ui16	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef unsigned short     ui16;       \/\/\/< Unsigned 16-bit integer$/;"	t
ui32	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef uint32_t           ui32;       \/\/\/< Unsigned 32-bit integer$/;"	t
ui32	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef unsigned int       ui32;       \/\/\/< Unsigned 32-bit integer$/;"	t
ui64	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef uint64_t           ui64;       \/\/\/< Unsigned 64-bit integer$/;"	t
ui64	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef unsigned long long ui64;       \/\/\/< Unsigned 64-bit integer$/;"	t
ui8	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef uint8_t            ui8;$/;"	t
ui8	Targets\arm-android-linux\Debug\include\Mag_pub_type.h	/^typedef unsigned char      ui8;        \/\/\/< Unsigned 8-bit integer$/;"	t
RBTREE_BOOL	Targets\arm-android-linux\Debug\include\Mag_rbtree.h	/^}RBTREE_BOOL;$/;"	t	typeref:enum:__anon19
RBTREE_FALSE	Targets\arm-android-linux\Debug\include\Mag_rbtree.h	/^    RBTREE_FALSE = 0,$/;"	e	enum:__anon19
RBTREE_NODE_t	Targets\arm-android-linux\Debug\include\Mag_rbtree.h	/^}RBTREE_NODE_t;$/;"	t	typeref:struct:rbtree_node_t
RBTREE_TRUE	Targets\arm-android-linux\Debug\include\Mag_rbtree.h	/^    RBTREE_TRUE  = !RBTREE_FALSE,$/;"	e	enum:__anon19
RBTreeNodeHandle	Targets\arm-android-linux\Debug\include\Mag_rbtree.h	/^typedef RBTREE_NODE_t* RBTreeNodeHandle;$/;"	t
__MAG_RBTREE_H__	Targets\arm-android-linux\Debug\include\Mag_rbtree.h	2;"	d
color	Targets\arm-android-linux\Debug\include\Mag_rbtree.h	/^    RBTREE_BOOL  color;$/;"	m	struct:rbtree_node_t
colorFlip	Targets\arm-android-linux\Debug\include\Mag_rbtree.h	/^static inline void colorFlip(RBTreeNodeHandle h){  $/;"	f
deleteMin	Targets\arm-android-linux\Debug\include\Mag_rbtree.h	/^static inline RBTreeNodeHandle deleteMin(RBTreeNodeHandle h, RBTreeNodeHandle *deleteNode)$/;"	f
fixup	Targets\arm-android-linux\Debug\include\Mag_rbtree.h	/^static inline RBTreeNodeHandle fixup(RBTreeNodeHandle h){$/;"	f
isRed	Targets\arm-android-linux\Debug\include\Mag_rbtree.h	/^static inline RBTREE_BOOL isRed(RBTreeNodeHandle x){$/;"	f
key	Targets\arm-android-linux\Debug\include\Mag_rbtree.h	/^    i64          key;$/;"	m	struct:rbtree_node_t
left	Targets\arm-android-linux\Debug\include\Mag_rbtree.h	/^    struct rbtree_node_t *left;$/;"	m	struct:rbtree_node_t	typeref:struct:rbtree_node_t::rbtree_node_t
min	Targets\arm-android-linux\Debug\include\Mag_rbtree.h	/^static inline RBTreeNodeHandle min(RBTreeNodeHandle h)$/;"	f
moveRedLeft	Targets\arm-android-linux\Debug\include\Mag_rbtree.h	/^static inline RBTreeNodeHandle moveRedLeft(RBTreeNodeHandle h){$/;"	f
moveRedRight	Targets\arm-android-linux\Debug\include\Mag_rbtree.h	/^static inline RBTreeNodeHandle moveRedRight(RBTreeNodeHandle h){$/;"	f
rbtree_node_t	Targets\arm-android-linux\Debug\include\Mag_rbtree.h	/^typedef struct rbtree_node_t{$/;"	s
right	Targets\arm-android-linux\Debug\include\Mag_rbtree.h	/^    struct rbtree_node_t *right;   $/;"	m	struct:rbtree_node_t	typeref:struct:rbtree_node_t::rbtree_node_t
rotateLeft	Targets\arm-android-linux\Debug\include\Mag_rbtree.h	/^static inline RBTreeNodeHandle rotateLeft(RBTreeNodeHandle h){$/;"	f
rotateRight	Targets\arm-android-linux\Debug\include\Mag_rbtree.h	/^static inline RBTreeNodeHandle rotateRight(RBTreeNodeHandle h){$/;"	f
value	Targets\arm-android-linux\Debug\include\Mag_rbtree.h	/^    void*        value;$/;"	m	struct:rbtree_node_t
MAGTHREAD_PRIORITY_HIGH	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^    MAGTHREAD_PRIORITY_HIGH           = -16,$/;"	e	enum:__anon20
MAGTHREAD_PRIORITY_HIGHEST	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^    MAGTHREAD_PRIORITY_HIGHEST        = -20,$/;"	e	enum:__anon20
MAGTHREAD_PRIORITY_LOW	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^    MAGTHREAD_PRIORITY_LOW            = 10,$/;"	e	enum:__anon20
MAGTHREAD_PRIORITY_LOWEST	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^    MAGTHREAD_PRIORITY_LOWEST         = 19,$/;"	e	enum:__anon20
MAGTHREAD_PRIORITY_NORMAL	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^    MAGTHREAD_PRIORITY_NORMAL         = 0,$/;"	e	enum:__anon20
MagThreadHandle	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^typedef MagThread_t*   MagThreadHandle;$/;"	t
MagThread_Priority_t	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^}MagThread_Priority_t;$/;"	t	typeref:enum:__anon20
MagThread_t	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^}MagThread_t;$/;"	t	typeref:struct:mag_thread
__MAG_THREAD_H__	Targets\arm-android-linux\Debug\include\Mag_thread.h	2;"	d
fnReadyToRun	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^typedef boolean (*fnReadyToRun)(void *priv);$/;"	t
fnThreadLoop	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^typedef boolean (*fnThreadLoop)(void *priv);$/;"	t
mExitEvt	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^    MagEventHandle      mExitEvt;$/;"	m	struct:mag_thread
mExitEvtGroup	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^    MagEventGroupHandle mExitEvtGroup;$/;"	m	struct:mag_thread
mExitPending	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^    boolean   mExitPending;$/;"	m	struct:mag_thread
mLock	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^    MagMutexHandle mLock;$/;"	m	struct:mag_thread
mName	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^    char *mName;$/;"	m	struct:mag_thread
mPriority	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^    i32  mPriority;$/;"	m	struct:mag_thread
mPriv	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^    void *mPriv;$/;"	m	struct:mag_thread
mRunning	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^    boolean   mRunning;$/;"	m	struct:mag_thread
mStackSize	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^    ui32 mStackSize;$/;"	m	struct:mag_thread
mThread	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^    void      *mThread;$/;"	m	struct:mag_thread
mag_thread	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^typedef struct mag_thread{$/;"	s
mfnReadyToRun	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^    fnReadyToRun mfnReadyToRun;$/;"	m	struct:mag_thread
mfnTheadLoop	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^    fnThreadLoop mfnTheadLoop;$/;"	m	struct:mag_thread
requestExit	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^    _status_t (*requestExit)(struct mag_thread *self);$/;"	m	struct:mag_thread
requestExitAndWait	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^    _status_t (*requestExitAndWait)(struct mag_thread *self, i32 timeout);$/;"	m	struct:mag_thread
run	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^    _status_t (*run)(struct mag_thread *self);$/;"	m	struct:mag_thread
setFunc_readyToRun	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^    _status_t (*setFunc_readyToRun)(struct mag_thread *self, fnReadyToRun fn);$/;"	m	struct:mag_thread
setParm_Priority	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^    _status_t (*setParm_Priority)(struct mag_thread *self, MagThread_Priority_t priority);$/;"	m	struct:mag_thread
setParm_StackSize	Targets\arm-android-linux\Debug\include\Mag_thread.h	/^    _status_t (*setParm_StackSize)(struct mag_thread *self, _size_t stackSize);$/;"	m	struct:mag_thread
ATTRIBUTE_NAME	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^        ATTRIBUTE_NAME		            	= 0,$/;"	e	enum:tinyxml2::StrPair::__anon25
ATTRIBUTE_VALUE	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^        ATTRIBUTE_VALUE		            	= NEEDS_ENTITY_PROCESSING | NEEDS_NEWLINE_NORMALIZATION,$/;"	e	enum:tinyxml2::StrPair::__anon25
ATTRIBUTE_VALUE_LEAVE_ENTITIES	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^        ATTRIBUTE_VALUE_LEAVE_ENTITIES  	= NEEDS_NEWLINE_NORMALIZATION,$/;"	e	enum:tinyxml2::StrPair::__anon25
Alloc	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual void* Alloc() {$/;"	f	class:tinyxml2::MemPoolT
BUF_SIZE	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^        BUF_SIZE = 200$/;"	e	enum:tinyxml2::XMLPrinter::__anon30
BUF_SIZE	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    enum { BUF_SIZE = 200 };$/;"	e	enum:tinyxml2::XMLAttribute::__anon28
Block	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    struct Block {$/;"	s	class:tinyxml2::MemPoolT
BoolAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    bool	 BoolAttribute( const char* name ) const	{$/;"	f	class:tinyxml2::XMLElement
BoolValue	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    bool	 BoolValue() const				{$/;"	f	class:tinyxml2::XMLAttribute
CData	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    bool CData() const						{$/;"	f	class:tinyxml2::XMLText
CLOSED	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^        CLOSED,		\/\/ <foo\/>$/;"	e	enum:tinyxml2::XMLElement::__anon29
CLOSING	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^        CLOSING		\/\/ <\/foo>$/;"	e	enum:tinyxml2::XMLElement::__anon29
COLLAPSE_WHITESPACE	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^        COLLAPSE_WHITESPACE	                = 0x04,$/;"	e	enum:tinyxml2::StrPair::__anon25
COLLAPSE_WHITESPACE	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    COLLAPSE_WHITESPACE$/;"	e	enum:tinyxml2::Whitespace
COMMENT	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^        COMMENT				        = NEEDS_NEWLINE_NORMALIZATION$/;"	e	enum:tinyxml2::StrPair::__anon25
COUNT	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    enum { COUNT = (4*1024)\/SIZE }; \/\/ Some compilers do not accept to use COUNT in private part if COUNT is private$/;"	e	enum:tinyxml2::MemPoolT::__anon27
CStr	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const char* CStr() const {$/;"	f	class:tinyxml2::XMLPrinter
CStrSize	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    int CStrSize() const {$/;"	f	class:tinyxml2::XMLPrinter
Capacity	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    int Capacity() const				{$/;"	f	class:tinyxml2::DynArray
Chunk	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    union Chunk {$/;"	u	class:tinyxml2::MemPoolT
ClosingType	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    int ClosingType() const {$/;"	f	class:tinyxml2::XMLElement
CurrentAllocs	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    int CurrentAllocs() const		{$/;"	f	class:tinyxml2::MemPoolT
DEBUG	Targets\arm-android-linux\Debug\include\tinyxml2.h	56;"	d
DeleteNode	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    void DeleteNode( XMLNode* node )	{$/;"	f	class:tinyxml2::XMLDocument
DoubleAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    double 	 DoubleAttribute( const char* name ) const	{$/;"	f	class:tinyxml2::XMLElement
DoubleValue	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    double 	 DoubleValue() const			{$/;"	f	class:tinyxml2::XMLAttribute
DynArray	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    DynArray< T, INIT >() {$/;"	f	class:tinyxml2::DynArray
DynArray	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^class DynArray$/;"	c	namespace:tinyxml2
ENTITY_RANGE	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^        ENTITY_RANGE = 64,$/;"	e	enum:tinyxml2::XMLPrinter::__anon30
Empty	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    bool Empty() const					{$/;"	f	class:tinyxml2::DynArray
Empty	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    bool Empty() const {$/;"	f	class:tinyxml2::StrPair
EnsureCapacity	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    void EnsureCapacity( int cap ) {$/;"	f	class:tinyxml2::DynArray
Error	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    bool Error() const {$/;"	f	class:tinyxml2::XMLDocument
ErrorID	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLError  ErrorID() const {$/;"	f	class:tinyxml2::XMLDocument
FirstAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const XMLAttribute* FirstAttribute() const {$/;"	f	class:tinyxml2::XMLElement
FirstChild	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLHandle FirstChild() 													{$/;"	f	class:tinyxml2::XMLHandle
FirstChild	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLNode*		FirstChild()			{$/;"	f	class:tinyxml2::XMLNode
FirstChild	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const XMLConstHandle FirstChild() const											{$/;"	f	class:tinyxml2::XMLConstHandle
FirstChild	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const XMLNode*  FirstChild() const		{$/;"	f	class:tinyxml2::XMLNode
FirstChildElement	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLElement* FirstChildElement( const char* value=0 )	{$/;"	f	class:tinyxml2::XMLNode
FirstChildElement	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLHandle FirstChildElement( const char* value=0 )						{$/;"	f	class:tinyxml2::XMLHandle
FirstChildElement	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const XMLConstHandle FirstChildElement( const char* value=0 ) const				{$/;"	f	class:tinyxml2::XMLConstHandle
FloatAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    float	 FloatAttribute( const char* name ) const	{$/;"	f	class:tinyxml2::XMLElement
FloatValue	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    float	 FloatValue() const				{$/;"	f	class:tinyxml2::XMLAttribute
Free	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual void Free( void* mem ) {$/;"	f	class:tinyxml2::MemPoolT
GetDocument	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLDocument* GetDocument()				{$/;"	f	class:tinyxml2::XMLNode
GetDocument	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const XMLDocument* GetDocument() const	{$/;"	f	class:tinyxml2::XMLNode
GetErrorStr1	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const char* GetErrorStr1() const {$/;"	f	class:tinyxml2::XMLDocument
GetErrorStr2	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const char* GetErrorStr2() const {$/;"	f	class:tinyxml2::XMLDocument
HasBOM	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    bool HasBOM() const {$/;"	f	class:tinyxml2::XMLDocument
IntAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    int		 IntAttribute( const char* name ) const		{$/;"	f	class:tinyxml2::XMLElement
IntValue	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    int		 IntValue() const				{$/;"	f	class:tinyxml2::XMLAttribute
IsNameChar	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    inline static bool IsNameChar( unsigned char ch ) {$/;"	f	class:tinyxml2::XMLUtil
IsNameStartChar	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    inline static bool IsNameStartChar( unsigned char ch ) {$/;"	f	class:tinyxml2::XMLUtil
IsUTF8Continuation	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    inline static int IsUTF8Continuation( const char p ) {$/;"	f	class:tinyxml2::XMLUtil
IsWhiteSpace	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    static bool IsWhiteSpace( char p )					{$/;"	f	class:tinyxml2::XMLUtil
ItemSize	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual int ItemSize() const	{$/;"	f	class:tinyxml2::MemPoolT
LastChild	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLHandle LastChild()													{$/;"	f	class:tinyxml2::XMLHandle
LastChild	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLNode*		LastChild()								{$/;"	f	class:tinyxml2::XMLNode
LastChild	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const XMLConstHandle LastChild()	const										{$/;"	f	class:tinyxml2::XMLConstHandle
LastChild	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const XMLNode*	LastChild() const						{$/;"	f	class:tinyxml2::XMLNode
LastChildElement	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLElement* LastChildElement( const char* value=0 )	{$/;"	f	class:tinyxml2::XMLNode
LastChildElement	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLHandle LastChildElement( const char* _value=0 )						{$/;"	f	class:tinyxml2::XMLHandle
LastChildElement	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const XMLConstHandle LastChildElement( const char* _value=0 ) const				{$/;"	f	class:tinyxml2::XMLConstHandle
LinkEndChild	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLNode* LinkEndChild( XMLNode* addThis )	{$/;"	f	class:tinyxml2::XMLNode
Mem	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    T* Mem()							{$/;"	f	class:tinyxml2::DynArray
Mem	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const T* Mem() const				{$/;"	f	class:tinyxml2::DynArray
MemPool	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    MemPool() {}$/;"	f	class:tinyxml2::MemPool
MemPool	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^class MemPool$/;"	c	namespace:tinyxml2
MemPoolT	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    MemPoolT() : _root(0), _currentAllocs(0), _nAllocs(0), _maxAllocs(0), _nUntracked(0)	{}$/;"	f	class:tinyxml2::MemPoolT
MemPoolT	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^class MemPoolT : public MemPool$/;"	c	namespace:tinyxml2
NEEDS_DELETE	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^        NEEDS_DELETE = 0x200$/;"	e	enum:tinyxml2::StrPair::__anon26
NEEDS_ENTITY_PROCESSING	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^        NEEDS_ENTITY_PROCESSING			= 0x01,$/;"	e	enum:tinyxml2::StrPair::__anon25
NEEDS_FLUSH	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^        NEEDS_FLUSH = 0x100,$/;"	e	enum:tinyxml2::StrPair::__anon26
NEEDS_NEWLINE_NORMALIZATION	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^        NEEDS_NEWLINE_NORMALIZATION		= 0x02,$/;"	e	enum:tinyxml2::StrPair::__anon25
Name	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const char* Name() const		{$/;"	f	class:tinyxml2::XMLElement
Name	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const char* Name() const {$/;"	f	class:tinyxml2::XMLAttribute
Next	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const XMLAttribute* Next() const {$/;"	f	class:tinyxml2::XMLAttribute
NextSibling	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLHandle NextSibling()													{$/;"	f	class:tinyxml2::XMLHandle
NextSibling	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLNode*	NextSibling()								{$/;"	f	class:tinyxml2::XMLNode
NextSibling	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const XMLConstHandle NextSibling() const										{$/;"	f	class:tinyxml2::XMLConstHandle
NextSibling	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const XMLNode*	NextSibling() const						{$/;"	f	class:tinyxml2::XMLNode
NextSiblingElement	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLElement*	NextSiblingElement( const char* value=0 )	{$/;"	f	class:tinyxml2::XMLNode
NextSiblingElement	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLHandle NextSiblingElement( const char* _value=0 )					{$/;"	f	class:tinyxml2::XMLHandle
NextSiblingElement	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const XMLConstHandle NextSiblingElement( const char* _value=0 ) const			{$/;"	f	class:tinyxml2::XMLConstHandle
NoChildren	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    bool NoChildren() const					{$/;"	f	class:tinyxml2::XMLNode
OPEN	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^        OPEN,		\/\/ <foo>$/;"	e	enum:tinyxml2::XMLElement::__anon29
PRESERVE_WHITESPACE	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    PRESERVE_WHITESPACE,$/;"	e	enum:tinyxml2::Whitespace
Parent	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLNode* Parent()						{$/;"	f	class:tinyxml2::XMLNode
Parent	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const XMLNode*	Parent() const			{$/;"	f	class:tinyxml2::XMLNode
Pop	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    T Pop() {$/;"	f	class:tinyxml2::DynArray
PopArr	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    void PopArr( int count ) {$/;"	f	class:tinyxml2::DynArray
PreviousSibling	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLHandle PreviousSibling()												{$/;"	f	class:tinyxml2::XMLHandle
PreviousSibling	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLNode*	PreviousSibling()							{$/;"	f	class:tinyxml2::XMLNode
PreviousSibling	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const XMLConstHandle PreviousSibling() const									{$/;"	f	class:tinyxml2::XMLConstHandle
PreviousSibling	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const XMLNode*	PreviousSibling() const					{$/;"	f	class:tinyxml2::XMLNode
PreviousSiblingElement	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLElement*	PreviousSiblingElement( const char* value=0 ) {$/;"	f	class:tinyxml2::XMLNode
PreviousSiblingElement	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLHandle PreviousSiblingElement( const char* _value=0 )				{$/;"	f	class:tinyxml2::XMLHandle
PreviousSiblingElement	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const XMLConstHandle PreviousSiblingElement( const char* _value=0 ) const		{$/;"	f	class:tinyxml2::XMLConstHandle
ProcessEntities	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    bool ProcessEntities() const		{$/;"	f	class:tinyxml2::XMLDocument
Push	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    void Push( T t ) {$/;"	f	class:tinyxml2::DynArray
PushArr	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    T* PushArr( int count ) {$/;"	f	class:tinyxml2::DynArray
QueryAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^	int QueryAttribute( const char* name, bool* value ) const {$/;"	f	class:tinyxml2::XMLElement
QueryAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^	int QueryAttribute( const char* name, double* value ) const {$/;"	f	class:tinyxml2::XMLElement
QueryAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^	int QueryAttribute( const char* name, float* value ) const {$/;"	f	class:tinyxml2::XMLElement
QueryAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^	int QueryAttribute( const char* name, int* value ) const {$/;"	f	class:tinyxml2::XMLElement
QueryAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^	int QueryAttribute( const char* name, unsigned int* value ) const {$/;"	f	class:tinyxml2::XMLElement
QueryBoolAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLError QueryBoolAttribute( const char* name, bool* value ) const				{$/;"	f	class:tinyxml2::XMLElement
QueryDoubleAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLError QueryDoubleAttribute( const char* name, double* value ) const			{$/;"	f	class:tinyxml2::XMLElement
QueryFloatAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLError QueryFloatAttribute( const char* name, float* value ) const			{$/;"	f	class:tinyxml2::XMLElement
QueryIntAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLError QueryIntAttribute( const char* name, int* value ) const				{$/;"	f	class:tinyxml2::XMLElement
QueryUnsignedAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLError QueryUnsignedAttribute( const char* name, unsigned int* value ) const	{$/;"	f	class:tinyxml2::XMLElement
RootElement	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLElement* RootElement()				{$/;"	f	class:tinyxml2::XMLDocument
RootElement	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const XMLElement* RootElement() const	{$/;"	f	class:tinyxml2::XMLDocument
Set	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    void Set( char* start, char* end, int flags ) {$/;"	f	class:tinyxml2::StrPair
SetAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    void SetAttribute( const char* name, bool value )			{$/;"	f	class:tinyxml2::XMLElement
SetAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    void SetAttribute( const char* name, const char* value )	{$/;"	f	class:tinyxml2::XMLElement
SetAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    void SetAttribute( const char* name, double value )		{$/;"	f	class:tinyxml2::XMLElement
SetAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    void SetAttribute( const char* name, int value )			{$/;"	f	class:tinyxml2::XMLElement
SetAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    void SetAttribute( const char* name, unsigned value )		{$/;"	f	class:tinyxml2::XMLElement
SetBOM	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    void SetBOM( bool useBOM ) {$/;"	f	class:tinyxml2::XMLDocument
SetCData	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    void SetCData( bool isCData )			{$/;"	f	class:tinyxml2::XMLText
SetInternedStr	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    void SetInternedStr( const char* str ) {$/;"	f	class:tinyxml2::StrPair
SetName	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    void SetName( const char* str, bool staticMem=false )	{$/;"	f	class:tinyxml2::XMLElement
SetTracked	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    void SetTracked() {$/;"	f	class:tinyxml2::MemPoolT
ShallowClone	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual XMLNode* ShallowClone( XMLDocument* \/*document*\/ ) const	{$/;"	f	class:tinyxml2::XMLDocument
ShallowEqual	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual bool ShallowEqual( const XMLNode* \/*compare*\/ ) const	{$/;"	f	class:tinyxml2::XMLDocument
Size	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    int Size() const					{$/;"	f	class:tinyxml2::DynArray
SkipWhiteSpace	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    static char* SkipWhiteSpace( char* p )				{$/;"	f	class:tinyxml2::XMLUtil
SkipWhiteSpace	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    static const char* SkipWhiteSpace( const char* p )	{$/;"	f	class:tinyxml2::XMLUtil
StrPair	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    StrPair() : _flags( 0 ), _start( 0 ), _end( 0 ) {}$/;"	f	class:tinyxml2::StrPair
StrPair	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^class StrPair$/;"	c	namespace:tinyxml2
StringEqual	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    inline static bool StringEqual( const char* p, const char* q, int nChar=INT_MAX )  {$/;"	f	class:tinyxml2::XMLUtil
TEXT_ELEMENT	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^        TEXT_ELEMENT		            	= NEEDS_ENTITY_PROCESSING | NEEDS_NEWLINE_NORMALIZATION,$/;"	e	enum:tinyxml2::StrPair::__anon25
TEXT_ELEMENT_LEAVE_ENTITIES	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^        TEXT_ELEMENT_LEAVE_ENTITIES		= NEEDS_NEWLINE_NORMALIZATION,$/;"	e	enum:tinyxml2::StrPair::__anon25
TINYXML2_INCLUDED	Targets\arm-android-linux\Debug\include\tinyxml2.h	25;"	d
TIXML2_MAJOR_VERSION	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^static const int TIXML2_MAJOR_VERSION = 1;$/;"	v
TIXML2_MINOR_VERSION	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^static const int TIXML2_MINOR_VERSION = 0;$/;"	v
TIXML2_PATCH_VERSION	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^static const int TIXML2_PATCH_VERSION = 11;$/;"	v
TIXMLASSERT	Targets\arm-android-linux\Debug\include\tinyxml2.h	63;"	d
TIXMLASSERT	Targets\arm-android-linux\Debug\include\tinyxml2.h	66;"	d
TIXMLASSERT	Targets\arm-android-linux\Debug\include\tinyxml2.h	69;"	d
TIXMLASSERT	Targets\arm-android-linux\Debug\include\tinyxml2.h	72;"	d
TIXML_SNPRINTF	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^inline int TIXML_SNPRINTF( char* buffer, size_t size, const char* format, ... )$/;"	f
TIXML_SNPRINTF	Targets\arm-android-linux\Debug\include\tinyxml2.h	97;"	d
TIXML_SSCANF	Targets\arm-android-linux\Debug\include\tinyxml2.h	93;"	d
TIXML_SSCANF	Targets\arm-android-linux\Debug\include\tinyxml2.h	98;"	d
ToComment	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual XMLComment*		ToComment()		{$/;"	f	class:tinyxml2::XMLNode
ToComment	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual XMLComment*	ToComment()					{$/;"	f	class:tinyxml2::XMLComment
ToComment	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual const XMLComment*		ToComment() const		{$/;"	f	class:tinyxml2::XMLNode
ToComment	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual const XMLComment* ToComment() const		{$/;"	f	class:tinyxml2::XMLComment
ToDeclaration	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLDeclaration* ToDeclaration() 			{$/;"	f	class:tinyxml2::XMLHandle
ToDeclaration	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const XMLDeclaration* ToDeclaration() const	{$/;"	f	class:tinyxml2::XMLConstHandle
ToDeclaration	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual XMLDeclaration*	ToDeclaration()					{$/;"	f	class:tinyxml2::XMLDeclaration
ToDeclaration	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual XMLDeclaration*	ToDeclaration()	{$/;"	f	class:tinyxml2::XMLNode
ToDeclaration	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual const XMLDeclaration*	ToDeclaration() const	{$/;"	f	class:tinyxml2::XMLNode
ToDeclaration	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual const XMLDeclaration* ToDeclaration() const		{$/;"	f	class:tinyxml2::XMLDeclaration
ToDocument	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual XMLDocument*	ToDocument()	{$/;"	f	class:tinyxml2::XMLNode
ToDocument	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual XMLDocument* ToDocument()				{$/;"	f	class:tinyxml2::XMLDocument
ToDocument	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual const XMLDocument*		ToDocument() const		{$/;"	f	class:tinyxml2::XMLNode
ToDocument	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual const XMLDocument* ToDocument() const	{$/;"	f	class:tinyxml2::XMLDocument
ToElement	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLElement* ToElement() 					{$/;"	f	class:tinyxml2::XMLHandle
ToElement	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const XMLElement* ToElement() const			{$/;"	f	class:tinyxml2::XMLConstHandle
ToElement	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual XMLElement*		ToElement()		{$/;"	f	class:tinyxml2::XMLNode
ToElement	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual XMLElement* ToElement()				{$/;"	f	class:tinyxml2::XMLElement
ToElement	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual const XMLElement*		ToElement() const		{$/;"	f	class:tinyxml2::XMLNode
ToElement	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual const XMLElement* ToElement() const {$/;"	f	class:tinyxml2::XMLElement
ToNode	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLNode* ToNode()							{$/;"	f	class:tinyxml2::XMLHandle
ToNode	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const XMLNode* ToNode() const				{$/;"	f	class:tinyxml2::XMLConstHandle
ToText	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLText* ToText() 							{$/;"	f	class:tinyxml2::XMLHandle
ToText	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const XMLText* ToText() const				{$/;"	f	class:tinyxml2::XMLConstHandle
ToText	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual XMLText*		ToText()		{$/;"	f	class:tinyxml2::XMLNode
ToText	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual XMLText* ToText()			{$/;"	f	class:tinyxml2::XMLText
ToText	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual const XMLText*			ToText() const			{$/;"	f	class:tinyxml2::XMLNode
ToText	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual const XMLText* ToText() const	{$/;"	f	class:tinyxml2::XMLText
ToUnknown	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLUnknown* ToUnknown() 					{$/;"	f	class:tinyxml2::XMLHandle
ToUnknown	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const XMLUnknown* ToUnknown() const			{$/;"	f	class:tinyxml2::XMLConstHandle
ToUnknown	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual XMLUnknown*		ToUnknown()		{$/;"	f	class:tinyxml2::XMLNode
ToUnknown	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual XMLUnknown*	ToUnknown()					{$/;"	f	class:tinyxml2::XMLUnknown
ToUnknown	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual const XMLUnknown*		ToUnknown() const		{$/;"	f	class:tinyxml2::XMLNode
ToUnknown	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual const XMLUnknown* ToUnknown() const		{$/;"	f	class:tinyxml2::XMLUnknown
Trace	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    void Trace( const char* name ) {$/;"	f	class:tinyxml2::MemPoolT
UnsignedAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    unsigned UnsignedAttribute( const char* name ) const {$/;"	f	class:tinyxml2::XMLElement
UnsignedValue	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    unsigned UnsignedValue() const			{$/;"	f	class:tinyxml2::XMLAttribute
Untracked	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    int Untracked() const {$/;"	f	class:tinyxml2::MemPoolT
Value	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const char* Value() const			{$/;"	f	class:tinyxml2::XMLNode
Value	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const char* Value() const {$/;"	f	class:tinyxml2::XMLAttribute
Visit	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual bool Visit( const XMLComment& \/*comment*\/ )				{$/;"	f	class:tinyxml2::XMLVisitor
Visit	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual bool Visit( const XMLDeclaration& \/*declaration*\/ )		{$/;"	f	class:tinyxml2::XMLVisitor
Visit	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual bool Visit( const XMLText& \/*text*\/ )					{$/;"	f	class:tinyxml2::XMLVisitor
Visit	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual bool Visit( const XMLUnknown& \/*unknown*\/ )				{$/;"	f	class:tinyxml2::XMLVisitor
VisitEnter	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual bool VisitEnter( const XMLDocument& \/*doc*\/ )			{$/;"	f	class:tinyxml2::XMLVisitor
VisitEnter	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual bool VisitEnter( const XMLElement& \/*element*\/, const XMLAttribute* \/*firstAttribute*\/ )	{$/;"	f	class:tinyxml2::XMLVisitor
VisitExit	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual bool VisitExit( const XMLDocument& \/*doc*\/ )			{$/;"	f	class:tinyxml2::XMLPrinter
VisitExit	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual bool VisitExit( const XMLDocument& \/*doc*\/ )			{$/;"	f	class:tinyxml2::XMLVisitor
VisitExit	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual bool VisitExit( const XMLElement& \/*element*\/ )			{$/;"	f	class:tinyxml2::XMLVisitor
Whitespace	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^enum Whitespace {$/;"	g	namespace:tinyxml2
WhitespaceMode	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    Whitespace WhitespaceMode() const	{$/;"	f	class:tinyxml2::XMLDocument
XMLAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLAttribute() : _next( 0 ) {}$/;"	f	class:tinyxml2::XMLAttribute
XMLAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^class XMLAttribute$/;"	c	namespace:tinyxml2
XMLComment	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^class XMLComment : public XMLNode$/;"	c	namespace:tinyxml2
XMLConstHandle	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLConstHandle( const XMLConstHandle& ref )										{$/;"	f	class:tinyxml2::XMLConstHandle
XMLConstHandle	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLConstHandle( const XMLNode& node )											{$/;"	f	class:tinyxml2::XMLConstHandle
XMLConstHandle	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLConstHandle( const XMLNode* node )											{$/;"	f	class:tinyxml2::XMLConstHandle
XMLConstHandle	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^class XMLConstHandle$/;"	c	namespace:tinyxml2
XMLDeclaration	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^class XMLDeclaration : public XMLNode$/;"	c	namespace:tinyxml2
XMLDocument	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^class XMLDocument : public XMLNode$/;"	c	namespace:tinyxml2
XMLElement	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^class XMLElement : public XMLNode$/;"	c	namespace:tinyxml2
XMLError	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^enum XMLError {$/;"	g	namespace:tinyxml2
XMLHandle	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLHandle( XMLNode& node )												{$/;"	f	class:tinyxml2::XMLHandle
XMLHandle	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLHandle( XMLNode* node )												{$/;"	f	class:tinyxml2::XMLHandle
XMLHandle	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLHandle( const XMLHandle& ref )										{$/;"	f	class:tinyxml2::XMLHandle
XMLHandle	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^class XMLHandle$/;"	c	namespace:tinyxml2
XMLNode	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^class XMLNode$/;"	c	namespace:tinyxml2
XMLPrinter	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^class XMLPrinter : public XMLVisitor$/;"	c	namespace:tinyxml2
XMLText	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLText( XMLDocument* doc )	: XMLNode( doc ), _isCData( false )	{}$/;"	f	class:tinyxml2::XMLText
XMLText	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^class XMLText : public XMLNode$/;"	c	namespace:tinyxml2
XMLUnknown	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^class XMLUnknown : public XMLNode$/;"	c	namespace:tinyxml2
XMLUtil	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^class XMLUtil$/;"	c	namespace:tinyxml2
XMLVisitor	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^class XMLVisitor$/;"	c	namespace:tinyxml2
XML_CAN_NOT_CONVERT_TEXT	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XML_CAN_NOT_CONVERT_TEXT,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_ELEMENT_MISMATCH	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XML_ERROR_ELEMENT_MISMATCH,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_EMPTY_DOCUMENT	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XML_ERROR_EMPTY_DOCUMENT,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_FILE_COULD_NOT_BE_OPENED	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XML_ERROR_FILE_COULD_NOT_BE_OPENED,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_FILE_NOT_FOUND	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XML_ERROR_FILE_NOT_FOUND,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_FILE_READ_ERROR	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XML_ERROR_FILE_READ_ERROR,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_IDENTIFYING_TAG	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XML_ERROR_IDENTIFYING_TAG,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_MISMATCHED_ELEMENT	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XML_ERROR_MISMATCHED_ELEMENT,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_PARSING	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XML_ERROR_PARSING,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_PARSING_ATTRIBUTE	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XML_ERROR_PARSING_ATTRIBUTE,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_PARSING_CDATA	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XML_ERROR_PARSING_CDATA,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_PARSING_COMMENT	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XML_ERROR_PARSING_COMMENT,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_PARSING_DECLARATION	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XML_ERROR_PARSING_DECLARATION,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_PARSING_ELEMENT	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XML_ERROR_PARSING_ELEMENT,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_PARSING_TEXT	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XML_ERROR_PARSING_TEXT,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_PARSING_UNKNOWN	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XML_ERROR_PARSING_UNKNOWN,$/;"	e	enum:tinyxml2::XMLError
XML_NO_ATTRIBUTE	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XML_NO_ATTRIBUTE,$/;"	e	enum:tinyxml2::XMLError
XML_NO_ERROR	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XML_NO_ERROR = 0,$/;"	e	enum:tinyxml2::XMLError
XML_NO_TEXT_NODE	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XML_NO_TEXT_NODE$/;"	e	enum:tinyxml2::XMLError
XML_SUCCESS	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XML_SUCCESS = 0,$/;"	e	enum:tinyxml2::XMLError
XML_WRONG_ATTRIBUTE_TYPE	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XML_WRONG_ATTRIBUTE_TYPE,$/;"	e	enum:tinyxml2::XMLError
_accumulator	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    DynArray< char, 20 > _accumulator;$/;"	m	class:tinyxml2::XMLPrinter
_allocated	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    int _allocated;		\/\/ objects allocated$/;"	m	class:tinyxml2::DynArray
_attributePool	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    MemPoolT< sizeof(XMLAttribute) > _attributePool;$/;"	m	class:tinyxml2::XMLDocument
_blockPtrs	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    DynArray< Block*, 10 > _blockPtrs;$/;"	m	class:tinyxml2::MemPoolT
_buffer	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    DynArray< char, 20 > _buffer;$/;"	m	class:tinyxml2::XMLPrinter
_charBuffer	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    char*       _charBuffer;$/;"	m	class:tinyxml2::XMLDocument
_closingType	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    int _closingType;$/;"	m	class:tinyxml2::XMLElement
_commentPool	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    MemPoolT< sizeof(XMLComment) >	 _commentPool;$/;"	m	class:tinyxml2::XMLDocument
_compactMode	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    bool _compactMode;$/;"	m	class:tinyxml2::XMLPrinter
_currentAllocs	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    int _currentAllocs;$/;"	m	class:tinyxml2::MemPoolT
_depth	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    int _depth;$/;"	m	class:tinyxml2::XMLPrinter
_document	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLDocument*	_document;$/;"	m	class:tinyxml2::XMLNode
_elementJustOpened	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    bool _elementJustOpened;$/;"	m	class:tinyxml2::XMLPrinter
_elementPool	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    MemPoolT< sizeof(XMLElement) >	 _elementPool;$/;"	m	class:tinyxml2::XMLDocument
_end	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    char*   _end;$/;"	m	class:tinyxml2::StrPair
_entityFlag	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    bool _entityFlag[ENTITY_RANGE];$/;"	m	class:tinyxml2::XMLPrinter
_errorID	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLError    _errorID;$/;"	m	class:tinyxml2::XMLDocument
_errorStr1	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const char* _errorStr1;$/;"	m	class:tinyxml2::XMLDocument
_errorStr2	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const char* _errorStr2;$/;"	m	class:tinyxml2::XMLDocument
_firstChild	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLNode*		_firstChild;$/;"	m	class:tinyxml2::XMLNode
_firstElement	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    bool _firstElement;$/;"	m	class:tinyxml2::XMLPrinter
_flags	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    int     _flags;$/;"	m	class:tinyxml2::StrPair
_fp	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    FILE* _fp;$/;"	m	class:tinyxml2::XMLPrinter
_isCData	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    bool _isCData;$/;"	m	class:tinyxml2::XMLText
_lastChild	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLNode*		_lastChild;$/;"	m	class:tinyxml2::XMLNode
_maxAllocs	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    int _maxAllocs;$/;"	m	class:tinyxml2::MemPoolT
_mem	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    T*  _mem;$/;"	m	class:tinyxml2::DynArray
_memPool	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    MemPool*		_memPool;$/;"	m	class:tinyxml2::XMLNode
_memPool	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    MemPool*        _memPool;$/;"	m	class:tinyxml2::XMLAttribute
_nAllocs	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    int _nAllocs;$/;"	m	class:tinyxml2::MemPoolT
_nUntracked	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    int _nUntracked;$/;"	m	class:tinyxml2::MemPoolT
_name	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    mutable StrPair _name;$/;"	m	class:tinyxml2::XMLAttribute
_next	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLAttribute*   _next;$/;"	m	class:tinyxml2::XMLAttribute
_next	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLNode*		_next;$/;"	m	class:tinyxml2::XMLNode
_node	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLNode* _node;$/;"	m	class:tinyxml2::XMLHandle
_node	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const XMLNode* _node;$/;"	m	class:tinyxml2::XMLConstHandle
_parent	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLNode*		_parent;$/;"	m	class:tinyxml2::XMLNode
_pool	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    T   _pool[INIT];$/;"	m	class:tinyxml2::DynArray
_prev	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLNode*		_prev;$/;"	m	class:tinyxml2::XMLNode
_processEntities	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    bool        _processEntities;$/;"	m	class:tinyxml2::XMLDocument
_processEntities	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    bool _processEntities;$/;"	m	class:tinyxml2::XMLPrinter
_restrictedEntityFlag	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    bool _restrictedEntityFlag[ENTITY_RANGE];$/;"	m	class:tinyxml2::XMLPrinter
_root	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    Chunk* _root;$/;"	m	class:tinyxml2::MemPoolT
_rootAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLAttribute* _rootAttribute;$/;"	m	class:tinyxml2::XMLElement
_size	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    int _size;			\/\/ number objects in use$/;"	m	class:tinyxml2::DynArray
_stack	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    DynArray< const char*, 10 > _stack;$/;"	m	class:tinyxml2::XMLPrinter
_start	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    char*   _start;$/;"	m	class:tinyxml2::StrPair
_textDepth	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    int _textDepth;$/;"	m	class:tinyxml2::XMLPrinter
_textPool	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    MemPoolT< sizeof(XMLText) >		 _textPool;$/;"	m	class:tinyxml2::XMLDocument
_value	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    mutable StrPair	_value;$/;"	m	class:tinyxml2::XMLNode
_value	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    mutable StrPair _value;$/;"	m	class:tinyxml2::XMLAttribute
_whitespace	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    Whitespace  _whitespace;$/;"	m	class:tinyxml2::XMLDocument
_writeBOM	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    bool        _writeBOM;$/;"	m	class:tinyxml2::XMLDocument
chunk	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^        Chunk chunk[COUNT];$/;"	m	struct:tinyxml2::MemPoolT::Block
mem	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^        char    mem[SIZE];$/;"	m	union:tinyxml2::MemPoolT::Chunk
next	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^        Chunk*  next;$/;"	m	union:tinyxml2::MemPoolT::Chunk
operator =	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLConstHandle& operator=( const XMLConstHandle& ref )							{$/;"	f	class:tinyxml2::XMLConstHandle
operator =	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    XMLHandle& operator=( const XMLHandle& ref )							{$/;"	f	class:tinyxml2::XMLHandle
operator []	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    T& operator[](int i)				{$/;"	f	class:tinyxml2::DynArray
operator []	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    const T& operator[](int i) const	{$/;"	f	class:tinyxml2::DynArray
tinyxml2	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^namespace tinyxml2$/;"	n
~DynArray	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    ~DynArray() {$/;"	f	class:tinyxml2::DynArray
~MemPool	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual ~MemPool() {}$/;"	f	class:tinyxml2::MemPool
~MemPoolT	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    ~MemPoolT() {$/;"	f	class:tinyxml2::MemPoolT
~XMLAttribute	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual ~XMLAttribute()	{}$/;"	f	class:tinyxml2::XMLAttribute
~XMLPrinter	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    ~XMLPrinter()	{}$/;"	f	class:tinyxml2::XMLPrinter
~XMLText	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual ~XMLText()												{}$/;"	f	class:tinyxml2::XMLText
~XMLVisitor	Targets\arm-android-linux\Debug\include\tinyxml2.h	/^    virtual ~XMLVisitor() {}$/;"	f	class:tinyxml2::XMLVisitor
arget	agilelog\android.mk	/^	scons target=arm-android-linux build_config=Debug -c$/;"	m
arget	agilelog\android.mk	/^	scons target=arm-android-linux build_config=Debug$/;"	m
CROSS_PLATFORMS	agilelog\build\Boot.scons	/^CROSS_PLATFORMS   = ['arm-unknown-linux', 'arm-android-linux']$/;"	v
DefaultTarget	agilelog\build\Boot.scons	/^def DefaultTarget():$/;"	f
PLATFORM_TO_TARGET_MAP	agilelog\build\Boot.scons	/^PLATFORM_TO_TARGET_MAP = { $/;"	v
base_env	agilelog\build\Boot.scons	/^base_env = env$/;"	v
env	agilelog\build\Boot.scons	/^env = Environment(variables=options)$/;"	v
options	agilelog\build\Boot.scons	/^options = Variables()$/;"	v
os	agilelog\build\Boot.scons	/^import os$/;"	i
sys	agilelog\build\Boot.scons	/^import sys$/;"	i
Application	agilelog\build\Build.scons	/^def Application(name, dir, deps, install = False):$/;"	f
DeclareBuildDir	agilelog\build\Build.scons	/^def DeclareBuildDir(dir):$/;"	f
GetDirPath	agilelog\build\Build.scons	/^def GetDirPath(dir):$/;"	f
GetIncludeDirs	agilelog\build\Build.scons	/^    def GetIncludeDirs(self):$/;"	m	class:Module
GetIncludeDirs	agilelog\build\Build.scons	/^def GetIncludeDirs(modules, exclude=None):$/;"	f
GetLibraries	agilelog\build\Build.scons	/^    def GetLibraries(self):$/;"	m	class:Module
GetLibraries	agilelog\build\Build.scons	/^def GetLibraries(modules):$/;"	f
GlobSources	agilelog\build\Build.scons	/^def GlobSources(drct, patterns, excluded_files=[]):$/;"	f
LibraryModule	agilelog\build\Build.scons	/^class LibraryModule(Module):$/;"	c
LoadTool	agilelog\build\Build.scons	/^def LoadTool(name, env, **kw):$/;"	f
Module	agilelog\build\Build.scons	/^class Module:$/;"	c
Modules	agilelog\build\Build.scons	/^Modules = {}$/;"	v
__init__	agilelog\build\Build.scons	/^    def __init__(self, name, $/;"	m	class:LibraryModule
__init__	agilelog\build\Build.scons	/^    def __init__(self, name, included_modules = [], linked_modules = []):$/;"	m	class:Module
build_include_dirs	agilelog\build\Build.scons	/^              build_include_dirs    = ['..\/core\/hashtable\/inc'])$/;"	v
build_include_dirs	agilelog\build\Build.scons	/^              build_include_dirs    = ['inc', 'external\/tinyxml2', '..\/core\/hashtable\/inc'])$/;"	v
build_include_dirs	agilelog\build\Build.scons	/^              build_include_dirs    = ['inc', 'external\/tinyxml2', '..\/core\/hashtable\/inc'],$/;"	v
build_source_dirs	agilelog\build\Build.scons	/^              build_source_dirs     = ['impl'],$/;"	v
build_source_dirs	agilelog\build\Build.scons	/^              build_source_dirs     = ['src\/impl'],$/;"	v
build_source_dirs	agilelog\build\Build.scons	/^              build_source_dirs     = ['tinyxml2'],$/;"	v
deps	agilelog\build\Build.scons	/^                deps    = ['MagAgilelogStatic'],$/;"	v
dir	agilelog\build\Build.scons	/^                dir     = 'src\/tests', $/;"	v
excluded_files	agilelog\build\Build.scons	/^              excluded_files        = ['xmltest.cpp'])$/;"	v
glob	agilelog\build\Build.scons	/^from glob import glob$/;"	i
imp	agilelog\build\Build.scons	/^import imp$/;"	i
install	agilelog\build\Build.scons	/^                install = True)$/;"	v
install	agilelog\build\Build.scons	/^              install               = True)$/;"	v
linked_modules	agilelog\build\Build.scons	/^              linked_modules        = ['tinyxml2', 'hashTable'],$/;"	v
os	agilelog\build\Build.scons	/^import os$/;"	i
shared	agilelog\build\Build.scons	/^              shared                = True,$/;"	v
source_root	agilelog\build\Build.scons	/^              source_root           = '..\/core\/hashtable',$/;"	v
source_root	agilelog\build\Build.scons	/^              source_root           = '.\/external',$/;"	v
sys	agilelog\build\Build.scons	/^import sys$/;"	i
target_config_file	agilelog\build\Build.scons	/^target_config_file = env.GetBuildPath('#\/build\/Targets\/'+env['target']+'\/Config.scons')$/;"	v
ANDROID_ARCH	agilelog\build\Targets\arm-android-linux\Config.scons	/^    ANDROID_ARCH=ARGUMENTS.get('android_arch')$/;"	v
ANDROID_ARCH	agilelog\build\Targets\arm-android-linux\Config.scons	/^ANDROID_ARCH         = 'arm'$/;"	v
ANDROID_CROSS_PREFIX	agilelog\build\Targets\arm-android-linux\Config.scons	/^                ANDROID_CROSS_PREFIX = ANDROID_TOOLCHAIN[:suffix_pos]$/;"	v
ANDROID_CROSS_PREFIX	agilelog\build\Targets\arm-android-linux\Config.scons	/^    ANDROID_CROSS_PREFIX=ARGUMENTS.get('android_cross_prefix')$/;"	v
ANDROID_CROSS_PREFIX	agilelog\build\Targets\arm-android-linux\Config.scons	/^ANDROID_CROSS_PREFIX = 'arm-linux-androideabi'$/;"	v
ANDROID_HOST_SYSTEM	agilelog\build\Targets\arm-android-linux\Config.scons	/^		ANDROID_HOST_SYSTEM = PLATFORM_TO_TARGET_MAP[sys.platform]$/;"	v
ANDROID_HOST_SYSTEM	agilelog\build\Targets\arm-android-linux\Config.scons	/^	ANDROID_HOST_SYSTEM = env['android_host_system']$/;"	v
ANDROID_NDK_ROOT	agilelog\build\Targets\arm-android-linux\Config.scons	/^ANDROID_NDK_ROOT=os.getenv('ANDROID_NDK_ROOT')$/;"	v
ANDROID_PLATFORM	agilelog\build\Targets\arm-android-linux\Config.scons	/^    ANDROID_PLATFORM=ARGUMENTS.get('android_platform')$/;"	v
ANDROID_PLATFORM	agilelog\build\Targets\arm-android-linux\Config.scons	/^ANDROID_PLATFORM     = 'android-9'$/;"	v
ANDROID_SYSROOT	agilelog\build\Targets\arm-android-linux\Config.scons	/^ANDROID_SYSROOT = ANDROID_NDK_ROOT+'\/platforms\/'+ANDROID_PLATFORM+'\/arch-'+ANDROID_ARCH$/;"	v
ANDROID_TOOLCHAIN	agilelog\build\Targets\arm-android-linux\Config.scons	/^            ANDROID_TOOLCHAIN=toolchain_dir$/;"	v
ANDROID_TOOLCHAIN	agilelog\build\Targets\arm-android-linux\Config.scons	/^    ANDROID_TOOLCHAIN=ARGUMENTS.get('android_toolchain')$/;"	v
ANDROID_TOOLCHAIN	agilelog\build\Targets\arm-android-linux\Config.scons	/^ANDROID_TOOLCHAIN    = 'arm-linux-androideabi-4.4.3'$/;"	v
ANDROID_TOOLCHAIN_BIN	agilelog\build\Targets\arm-android-linux\Config.scons	/^ANDROID_TOOLCHAIN_BIN = ANDROID_NDK_ROOT+'\/toolchains\/'+ANDROID_TOOLCHAIN+'\/prebuilt\/'+ANDROID_HOST_SYSTEM+'\/bin'$/;"	v
PLATFORM_TO_TARGET_MAP	agilelog\build\Targets\arm-android-linux\Config.scons	/^	PLATFORM_TO_TARGET_MAP = { $/;"	v
os	agilelog\build\Targets\arm-android-linux\Config.scons	/^import os$/;"	i
platform	agilelog\build\Targets\arm-android-linux\Config.scons	/^import platform$/;"	i
re	agilelog\build\Targets\arm-android-linux\Config.scons	/^import re$/;"	i
suffix_pos	agilelog\build\Targets\arm-android-linux\Config.scons	/^            suffix_pos = toolchain_dir.rfind('-')$/;"	v
sys	agilelog\build\Targets\arm-android-linux\Config.scons	/^import sys$/;"	i
toolchain_dirs	agilelog\build\Targets\arm-android-linux\Config.scons	/^    toolchain_dirs = os.listdir(ANDROID_NDK_ROOT+'\/toolchains')$/;"	v
generate	agilelog\build\Tools\SCons\gcc-generic.py	/^def generate(env, gcc_cross_prefix=None, gcc_strict=True, gcc_stop_on_warning=None, gcc_extra_options=''):$/;"	f
os	agilelog\build\Tools\SCons\gcc-generic.py	/^import os$/;"	i
build	agilelog\external\tinyxml2\setversion.py	/^build = input( "Build: " )$/;"	v
cmakeRule1	agilelog\external\tinyxml2\setversion.py	/^def cmakeRule1( line ):$/;"	f
cmakeRule2	agilelog\external\tinyxml2\setversion.py	/^def cmakeRule2( line ):$/;"	f
doxRule	agilelog\external\tinyxml2\setversion.py	/^def doxRule( line ):$/;"	f
echoInput	agilelog\external\tinyxml2\setversion.py	/^def echoInput( line ):$/;"	f
engineRule	agilelog\external\tinyxml2\setversion.py	/^def engineRule( line ):$/;"	f
fileProcess	agilelog\external\tinyxml2\setversion.py	/^def fileProcess( name, lineFunction ):$/;"	f
major	agilelog\external\tinyxml2\setversion.py	/^major = input( "Major: " )$/;"	v
minor	agilelog\external\tinyxml2\setversion.py	/^minor = input( "Minor: " )$/;"	v
re	agilelog\external\tinyxml2\setversion.py	/^import re$/;"	i
sys	agilelog\external\tinyxml2\setversion.py	/^import sys$/;"	i
Accept	agilelog\external\tinyxml2\tinyxml2.cpp	/^bool XMLComment::Accept( XMLVisitor* visitor ) const$/;"	f	class:tinyxml2::XMLComment
Accept	agilelog\external\tinyxml2\tinyxml2.cpp	/^bool XMLDeclaration::Accept( XMLVisitor* visitor ) const$/;"	f	class:tinyxml2::XMLDeclaration
Accept	agilelog\external\tinyxml2\tinyxml2.cpp	/^bool XMLDocument::Accept( XMLVisitor* visitor ) const$/;"	f	class:tinyxml2::XMLDocument
Accept	agilelog\external\tinyxml2\tinyxml2.cpp	/^bool XMLElement::Accept( XMLVisitor* visitor ) const$/;"	f	class:tinyxml2::XMLElement
Accept	agilelog\external\tinyxml2\tinyxml2.cpp	/^bool XMLText::Accept( XMLVisitor* visitor ) const$/;"	f	class:tinyxml2::XMLText
Accept	agilelog\external\tinyxml2\tinyxml2.cpp	/^bool XMLUnknown::Accept( XMLVisitor* visitor ) const$/;"	f	class:tinyxml2::XMLUnknown
Attribute	agilelog\external\tinyxml2\tinyxml2.cpp	/^const char* XMLElement::Attribute( const char* name, const char* value ) const$/;"	f	class:tinyxml2::XMLElement
CARRIAGE_RETURN	agilelog\external\tinyxml2\tinyxml2.cpp	/^static const char CARRIAGE_RETURN		= (char)0x0d;			\/\/ CR gets filtered out$/;"	v	file:
CR	agilelog\external\tinyxml2\tinyxml2.cpp	/^static const char CR = CARRIAGE_RETURN;$/;"	v	file:
Clear	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLDocument::Clear()$/;"	f	class:tinyxml2::XMLDocument
CloseElement	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLPrinter::CloseElement()$/;"	f	class:tinyxml2::XMLPrinter
CollapseWhitespace	agilelog\external\tinyxml2\tinyxml2.cpp	/^void StrPair::CollapseWhitespace()$/;"	f	class:tinyxml2::StrPair
ConvertUTF32ToUTF8	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLUtil::ConvertUTF32ToUTF8( unsigned long input, char* output, int* length )$/;"	f	class:tinyxml2::XMLUtil
DELETE_ATTRIBUTE	agilelog\external\tinyxml2\tinyxml2.cpp	56;"	d	file:
DELETE_NODE	agilelog\external\tinyxml2\tinyxml2.cpp	49;"	d	file:
DOUBLE_QUOTE	agilelog\external\tinyxml2\tinyxml2.cpp	/^static const char DOUBLE_QUOTE			= '\\"';$/;"	v	file:
DeleteAttribute	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLElement::DeleteAttribute( const char* name )$/;"	f	class:tinyxml2::XMLElement
DeleteChild	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLNode::DeleteChild( XMLNode* node )$/;"	f	class:tinyxml2::XMLNode
DeleteChildren	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLNode::DeleteChildren()$/;"	f	class:tinyxml2::XMLNode
Entity	agilelog\external\tinyxml2\tinyxml2.cpp	/^struct Entity {$/;"	s	namespace:tinyxml2	file:
FindAttribute	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLAttribute* XMLElement::FindAttribute( const char* name )$/;"	f	class:tinyxml2::XMLElement
FindAttribute	agilelog\external\tinyxml2\tinyxml2.cpp	/^const XMLAttribute* XMLElement::FindAttribute( const char* name ) const$/;"	f	class:tinyxml2::XMLElement
FindOrCreateAttribute	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLAttribute* XMLElement::FindOrCreateAttribute( const char* name )$/;"	f	class:tinyxml2::XMLElement
FirstChildElement	agilelog\external\tinyxml2\tinyxml2.cpp	/^const XMLElement* XMLNode::FirstChildElement( const char* value ) const$/;"	f	class:tinyxml2::XMLNode
GetCharacterRef	agilelog\external\tinyxml2\tinyxml2.cpp	/^const char* XMLUtil::GetCharacterRef( const char* p, char* value, int* length )$/;"	f	class:tinyxml2::XMLUtil
GetStr	agilelog\external\tinyxml2\tinyxml2.cpp	/^const char* StrPair::GetStr()$/;"	f	class:tinyxml2::StrPair
GetText	agilelog\external\tinyxml2\tinyxml2.cpp	/^const char* XMLElement::GetText() const$/;"	f	class:tinyxml2::XMLElement
Identify	agilelog\external\tinyxml2\tinyxml2.cpp	/^char* XMLDocument::Identify( char* p, XMLNode** node )$/;"	f	class:tinyxml2::XMLDocument
InsertAfterChild	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLNode* XMLNode::InsertAfterChild( XMLNode* afterThis, XMLNode* addThis )$/;"	f	class:tinyxml2::XMLNode
InsertEndChild	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLNode* XMLNode::InsertEndChild( XMLNode* addThis )$/;"	f	class:tinyxml2::XMLNode
InsertFirstChild	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLNode* XMLNode::InsertFirstChild( XMLNode* addThis )$/;"	f	class:tinyxml2::XMLNode
LF	agilelog\external\tinyxml2\tinyxml2.cpp	/^static const char LF = LINE_FEED;$/;"	v	file:
LINE_FEED	agilelog\external\tinyxml2\tinyxml2.cpp	/^static const char LINE_FEED				= (char)0x0a;			\/\/ all line endings are normalized to LF$/;"	v	file:
LastChildElement	agilelog\external\tinyxml2\tinyxml2.cpp	/^const XMLElement* XMLNode::LastChildElement( const char* value ) const$/;"	f	class:tinyxml2::XMLNode
LoadFile	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLError XMLDocument::LoadFile( FILE* fp )$/;"	f	class:tinyxml2::XMLDocument
LoadFile	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLError XMLDocument::LoadFile( const char* filename )$/;"	f	class:tinyxml2::XMLDocument
NUM_ENTITIES	agilelog\external\tinyxml2\tinyxml2.cpp	/^static const int NUM_ENTITIES = 5;$/;"	m	namespace:tinyxml2	file:
NewComment	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLComment* XMLDocument::NewComment( const char* str )$/;"	f	class:tinyxml2::XMLDocument
NewDeclaration	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLDeclaration* XMLDocument::NewDeclaration( const char* str )$/;"	f	class:tinyxml2::XMLDocument
NewElement	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLElement* XMLDocument::NewElement( const char* name )$/;"	f	class:tinyxml2::XMLDocument
NewText	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLText* XMLDocument::NewText( const char* str )$/;"	f	class:tinyxml2::XMLDocument
NewUnknown	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLUnknown* XMLDocument::NewUnknown( const char* str )$/;"	f	class:tinyxml2::XMLDocument
NextSiblingElement	agilelog\external\tinyxml2\tinyxml2.cpp	/^const XMLElement* XMLNode::NextSiblingElement( const char* value ) const$/;"	f	class:tinyxml2::XMLNode
OpenElement	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLPrinter::OpenElement( const char* name )$/;"	f	class:tinyxml2::XMLPrinter
Parse	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLError XMLDocument::Parse( const char* p, size_t len )$/;"	f	class:tinyxml2::XMLDocument
ParseAttributes	agilelog\external\tinyxml2\tinyxml2.cpp	/^char* XMLElement::ParseAttributes( char* p )$/;"	f	class:tinyxml2::XMLElement
ParseDeep	agilelog\external\tinyxml2\tinyxml2.cpp	/^char* XMLAttribute::ParseDeep( char* p, bool processEntities )$/;"	f	class:tinyxml2::XMLAttribute
ParseDeep	agilelog\external\tinyxml2\tinyxml2.cpp	/^char* XMLComment::ParseDeep( char* p, StrPair* )$/;"	f	class:tinyxml2::XMLComment
ParseDeep	agilelog\external\tinyxml2\tinyxml2.cpp	/^char* XMLDeclaration::ParseDeep( char* p, StrPair* )$/;"	f	class:tinyxml2::XMLDeclaration
ParseDeep	agilelog\external\tinyxml2\tinyxml2.cpp	/^char* XMLElement::ParseDeep( char* p, StrPair* strPair )$/;"	f	class:tinyxml2::XMLElement
ParseDeep	agilelog\external\tinyxml2\tinyxml2.cpp	/^char* XMLNode::ParseDeep( char* p, StrPair* parentEnd )$/;"	f	class:tinyxml2::XMLNode
ParseDeep	agilelog\external\tinyxml2\tinyxml2.cpp	/^char* XMLText::ParseDeep( char* p, StrPair* )$/;"	f	class:tinyxml2::XMLText
ParseDeep	agilelog\external\tinyxml2\tinyxml2.cpp	/^char* XMLUnknown::ParseDeep( char* p, StrPair* )$/;"	f	class:tinyxml2::XMLUnknown
ParseName	agilelog\external\tinyxml2\tinyxml2.cpp	/^char* StrPair::ParseName( char* p )$/;"	f	class:tinyxml2::StrPair
ParseText	agilelog\external\tinyxml2\tinyxml2.cpp	/^char* StrPair::ParseText( char* p, const char* endTag, int strFlags )$/;"	f	class:tinyxml2::StrPair
PreviousSiblingElement	agilelog\external\tinyxml2\tinyxml2.cpp	/^const XMLElement* XMLNode::PreviousSiblingElement( const char* value ) const$/;"	f	class:tinyxml2::XMLNode
Print	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLDocument::Print( XMLPrinter* streamer )$/;"	f	class:tinyxml2::XMLDocument
Print	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLPrinter::Print( const char* format, ... )$/;"	f	class:tinyxml2::XMLPrinter
PrintError	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLDocument::PrintError() const$/;"	f	class:tinyxml2::XMLDocument
PrintSpace	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLPrinter::PrintSpace( int depth )$/;"	f	class:tinyxml2::XMLPrinter
PrintString	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLPrinter::PrintString( const char* p, bool restricted )$/;"	f	class:tinyxml2::XMLPrinter
PushAttribute	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLPrinter::PushAttribute( const char* name, bool v )$/;"	f	class:tinyxml2::XMLPrinter
PushAttribute	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLPrinter::PushAttribute( const char* name, const char* value )$/;"	f	class:tinyxml2::XMLPrinter
PushAttribute	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLPrinter::PushAttribute( const char* name, double v )$/;"	f	class:tinyxml2::XMLPrinter
PushAttribute	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLPrinter::PushAttribute( const char* name, int v )$/;"	f	class:tinyxml2::XMLPrinter
PushAttribute	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLPrinter::PushAttribute( const char* name, unsigned v )$/;"	f	class:tinyxml2::XMLPrinter
PushComment	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLPrinter::PushComment( const char* comment )$/;"	f	class:tinyxml2::XMLPrinter
PushDeclaration	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLPrinter::PushDeclaration( const char* value )$/;"	f	class:tinyxml2::XMLPrinter
PushHeader	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLPrinter::PushHeader( bool writeBOM, bool writeDec )$/;"	f	class:tinyxml2::XMLPrinter
PushText	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLPrinter::PushText( bool value )$/;"	f	class:tinyxml2::XMLPrinter
PushText	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLPrinter::PushText( const char* text, bool cdata )$/;"	f	class:tinyxml2::XMLPrinter
PushText	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLPrinter::PushText( double value )$/;"	f	class:tinyxml2::XMLPrinter
PushText	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLPrinter::PushText( float value )$/;"	f	class:tinyxml2::XMLPrinter
PushText	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLPrinter::PushText( int value )$/;"	f	class:tinyxml2::XMLPrinter
PushText	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLPrinter::PushText( unsigned value )$/;"	f	class:tinyxml2::XMLPrinter
PushUnknown	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLPrinter::PushUnknown( const char* value )$/;"	f	class:tinyxml2::XMLPrinter
QueryBoolText	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLError XMLElement::QueryBoolText( bool* bval ) const$/;"	f	class:tinyxml2::XMLElement
QueryBoolValue	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLError XMLAttribute::QueryBoolValue( bool* value ) const$/;"	f	class:tinyxml2::XMLAttribute
QueryDoubleText	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLError XMLElement::QueryDoubleText( double* dval ) const$/;"	f	class:tinyxml2::XMLElement
QueryDoubleValue	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLError XMLAttribute::QueryDoubleValue( double* value ) const$/;"	f	class:tinyxml2::XMLAttribute
QueryFloatText	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLError XMLElement::QueryFloatText( float* fval ) const$/;"	f	class:tinyxml2::XMLElement
QueryFloatValue	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLError XMLAttribute::QueryFloatValue( float* value ) const$/;"	f	class:tinyxml2::XMLAttribute
QueryIntText	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLError XMLElement::QueryIntText( int* ival ) const$/;"	f	class:tinyxml2::XMLElement
QueryIntValue	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLError XMLAttribute::QueryIntValue( int* value ) const$/;"	f	class:tinyxml2::XMLAttribute
QueryUnsignedText	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLError XMLElement::QueryUnsignedText( unsigned* uval ) const$/;"	f	class:tinyxml2::XMLElement
QueryUnsignedValue	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLError XMLAttribute::QueryUnsignedValue( unsigned int* value ) const$/;"	f	class:tinyxml2::XMLAttribute
ReadBOM	agilelog\external\tinyxml2\tinyxml2.cpp	/^const char* XMLUtil::ReadBOM( const char* p, bool* bom )$/;"	f	class:tinyxml2::XMLUtil
Reset	agilelog\external\tinyxml2\tinyxml2.cpp	/^void StrPair::Reset()$/;"	f	class:tinyxml2::StrPair
SINGLE_QUOTE	agilelog\external\tinyxml2\tinyxml2.cpp	/^static const char SINGLE_QUOTE			= '\\'';$/;"	v	file:
SaveFile	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLError XMLDocument::SaveFile( FILE* fp, bool compact )$/;"	f	class:tinyxml2::XMLDocument
SaveFile	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLError XMLDocument::SaveFile( const char* filename, bool compact )$/;"	f	class:tinyxml2::XMLDocument
SealElement	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLPrinter::SealElement()$/;"	f	class:tinyxml2::XMLPrinter
SetAttribute	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLAttribute::SetAttribute( bool v )$/;"	f	class:tinyxml2::XMLAttribute
SetAttribute	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLAttribute::SetAttribute( const char* v )$/;"	f	class:tinyxml2::XMLAttribute
SetAttribute	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLAttribute::SetAttribute( double v )$/;"	f	class:tinyxml2::XMLAttribute
SetAttribute	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLAttribute::SetAttribute( float v )$/;"	f	class:tinyxml2::XMLAttribute
SetAttribute	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLAttribute::SetAttribute( int v )$/;"	f	class:tinyxml2::XMLAttribute
SetAttribute	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLAttribute::SetAttribute( unsigned v )$/;"	f	class:tinyxml2::XMLAttribute
SetError	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLDocument::SetError( XMLError error, const char* str1, const char* str2 )$/;"	f	class:tinyxml2::XMLDocument
SetName	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLAttribute::SetName( const char* n )$/;"	f	class:tinyxml2::XMLAttribute
SetStr	agilelog\external\tinyxml2\tinyxml2.cpp	/^void StrPair::SetStr( const char* str, int flags )$/;"	f	class:tinyxml2::StrPair
SetValue	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLNode::SetValue( const char* str, bool staticMem )$/;"	f	class:tinyxml2::XMLNode
ShallowClone	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLNode* XMLComment::ShallowClone( XMLDocument* doc ) const$/;"	f	class:tinyxml2::XMLComment
ShallowClone	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLNode* XMLDeclaration::ShallowClone( XMLDocument* doc ) const$/;"	f	class:tinyxml2::XMLDeclaration
ShallowClone	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLNode* XMLElement::ShallowClone( XMLDocument* doc ) const$/;"	f	class:tinyxml2::XMLElement
ShallowClone	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLNode* XMLText::ShallowClone( XMLDocument* doc ) const$/;"	f	class:tinyxml2::XMLText
ShallowClone	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLNode* XMLUnknown::ShallowClone( XMLDocument* doc ) const$/;"	f	class:tinyxml2::XMLUnknown
ShallowEqual	agilelog\external\tinyxml2\tinyxml2.cpp	/^bool XMLComment::ShallowEqual( const XMLNode* compare ) const$/;"	f	class:tinyxml2::XMLComment
ShallowEqual	agilelog\external\tinyxml2\tinyxml2.cpp	/^bool XMLDeclaration::ShallowEqual( const XMLNode* compare ) const$/;"	f	class:tinyxml2::XMLDeclaration
ShallowEqual	agilelog\external\tinyxml2\tinyxml2.cpp	/^bool XMLElement::ShallowEqual( const XMLNode* compare ) const$/;"	f	class:tinyxml2::XMLElement
ShallowEqual	agilelog\external\tinyxml2\tinyxml2.cpp	/^bool XMLText::ShallowEqual( const XMLNode* compare ) const$/;"	f	class:tinyxml2::XMLText
ShallowEqual	agilelog\external\tinyxml2\tinyxml2.cpp	/^bool XMLUnknown::ShallowEqual( const XMLNode* compare ) const$/;"	f	class:tinyxml2::XMLUnknown
TIXML_UTF_LEAD_0	agilelog\external\tinyxml2\tinyxml2.cpp	/^static const unsigned char TIXML_UTF_LEAD_0 = 0xefU;$/;"	v	file:
TIXML_UTF_LEAD_1	agilelog\external\tinyxml2\tinyxml2.cpp	/^static const unsigned char TIXML_UTF_LEAD_1 = 0xbbU;$/;"	v	file:
TIXML_UTF_LEAD_2	agilelog\external\tinyxml2\tinyxml2.cpp	/^static const unsigned char TIXML_UTF_LEAD_2 = 0xbfU;$/;"	v	file:
ToBool	agilelog\external\tinyxml2\tinyxml2.cpp	/^bool XMLUtil::ToBool( const char* str, bool* value )$/;"	f	class:tinyxml2::XMLUtil
ToDouble	agilelog\external\tinyxml2\tinyxml2.cpp	/^bool XMLUtil::ToDouble( const char* str, double* value )$/;"	f	class:tinyxml2::XMLUtil
ToFloat	agilelog\external\tinyxml2\tinyxml2.cpp	/^bool XMLUtil::ToFloat( const char* str, float* value )$/;"	f	class:tinyxml2::XMLUtil
ToInt	agilelog\external\tinyxml2\tinyxml2.cpp	/^bool XMLUtil::ToInt( const char* str, int* value )$/;"	f	class:tinyxml2::XMLUtil
ToStr	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLUtil::ToStr( bool v, char* buffer, int bufferSize )$/;"	f	class:tinyxml2::XMLUtil
ToStr	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLUtil::ToStr( double v, char* buffer, int bufferSize )$/;"	f	class:tinyxml2::XMLUtil
ToStr	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLUtil::ToStr( float v, char* buffer, int bufferSize )$/;"	f	class:tinyxml2::XMLUtil
ToStr	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLUtil::ToStr( int v, char* buffer, int bufferSize )$/;"	f	class:tinyxml2::XMLUtil
ToStr	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLUtil::ToStr( unsigned v, char* buffer, int bufferSize )$/;"	f	class:tinyxml2::XMLUtil
ToUnsigned	agilelog\external\tinyxml2\tinyxml2.cpp	/^bool XMLUtil::ToUnsigned( const char* str, unsigned *value )$/;"	f	class:tinyxml2::XMLUtil
Unlink	agilelog\external\tinyxml2\tinyxml2.cpp	/^void XMLNode::Unlink( XMLNode* child )$/;"	f	class:tinyxml2::XMLNode
Visit	agilelog\external\tinyxml2\tinyxml2.cpp	/^bool XMLPrinter::Visit( const XMLComment& comment )$/;"	f	class:tinyxml2::XMLPrinter
Visit	agilelog\external\tinyxml2\tinyxml2.cpp	/^bool XMLPrinter::Visit( const XMLDeclaration& declaration )$/;"	f	class:tinyxml2::XMLPrinter
Visit	agilelog\external\tinyxml2\tinyxml2.cpp	/^bool XMLPrinter::Visit( const XMLText& text )$/;"	f	class:tinyxml2::XMLPrinter
Visit	agilelog\external\tinyxml2\tinyxml2.cpp	/^bool XMLPrinter::Visit( const XMLUnknown& unknown )$/;"	f	class:tinyxml2::XMLPrinter
VisitEnter	agilelog\external\tinyxml2\tinyxml2.cpp	/^bool XMLPrinter::VisitEnter( const XMLDocument& doc )$/;"	f	class:tinyxml2::XMLPrinter
VisitEnter	agilelog\external\tinyxml2\tinyxml2.cpp	/^bool XMLPrinter::VisitEnter( const XMLElement& element, const XMLAttribute* attribute )$/;"	f	class:tinyxml2::XMLPrinter
VisitExit	agilelog\external\tinyxml2\tinyxml2.cpp	/^bool XMLPrinter::VisitExit( const XMLElement& )$/;"	f	class:tinyxml2::XMLPrinter
XMLComment	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLComment::XMLComment( XMLDocument* doc ) : XMLNode( doc )$/;"	f	class:tinyxml2::XMLComment
XMLDeclaration	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLDeclaration::XMLDeclaration( XMLDocument* doc ) : XMLNode( doc )$/;"	f	class:tinyxml2::XMLDeclaration
XMLDocument	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLDocument::XMLDocument( bool processEntities, Whitespace whitespace ) :$/;"	f	class:tinyxml2::XMLDocument
XMLElement	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLElement::XMLElement( XMLDocument* doc ) : XMLNode( doc ),$/;"	f	class:tinyxml2::XMLElement
XMLNode	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLNode::XMLNode( XMLDocument* doc ) :$/;"	f	class:tinyxml2::XMLNode
XMLPrinter	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLPrinter::XMLPrinter( FILE* file, bool compact ) :$/;"	f	class:tinyxml2::XMLPrinter
XMLUnknown	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLUnknown::XMLUnknown( XMLDocument* doc ) : XMLNode( doc )$/;"	f	class:tinyxml2::XMLUnknown
entities	agilelog\external\tinyxml2\tinyxml2.cpp	/^static const Entity entities[NUM_ENTITIES] = {$/;"	m	namespace:tinyxml2	file:
length	agilelog\external\tinyxml2\tinyxml2.cpp	/^    int length;$/;"	m	struct:tinyxml2::Entity	file:
pattern	agilelog\external\tinyxml2\tinyxml2.cpp	/^    const char* pattern;$/;"	m	struct:tinyxml2::Entity	file:
tinyxml2	agilelog\external\tinyxml2\tinyxml2.cpp	/^namespace tinyxml2$/;"	n	file:
value	agilelog\external\tinyxml2\tinyxml2.cpp	/^    char value;$/;"	m	struct:tinyxml2::Entity	file:
~StrPair	agilelog\external\tinyxml2\tinyxml2.cpp	/^StrPair::~StrPair()$/;"	f	class:tinyxml2::StrPair
~XMLComment	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLComment::~XMLComment()$/;"	f	class:tinyxml2::XMLComment
~XMLDeclaration	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLDeclaration::~XMLDeclaration()$/;"	f	class:tinyxml2::XMLDeclaration
~XMLDocument	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLDocument::~XMLDocument()$/;"	f	class:tinyxml2::XMLDocument
~XMLElement	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLElement::~XMLElement()$/;"	f	class:tinyxml2::XMLElement
~XMLNode	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLNode::~XMLNode()$/;"	f	class:tinyxml2::XMLNode
~XMLUnknown	agilelog\external\tinyxml2\tinyxml2.cpp	/^XMLUnknown::~XMLUnknown()$/;"	f	class:tinyxml2::XMLUnknown
ATTRIBUTE_NAME	agilelog\external\tinyxml2\tinyxml2.h	/^        ATTRIBUTE_NAME		            	= 0,$/;"	e	enum:tinyxml2::StrPair::__anon50
ATTRIBUTE_VALUE	agilelog\external\tinyxml2\tinyxml2.h	/^        ATTRIBUTE_VALUE		            	= NEEDS_ENTITY_PROCESSING | NEEDS_NEWLINE_NORMALIZATION,$/;"	e	enum:tinyxml2::StrPair::__anon50
ATTRIBUTE_VALUE_LEAVE_ENTITIES	agilelog\external\tinyxml2\tinyxml2.h	/^        ATTRIBUTE_VALUE_LEAVE_ENTITIES  	= NEEDS_NEWLINE_NORMALIZATION,$/;"	e	enum:tinyxml2::StrPair::__anon50
Alloc	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual void* Alloc() {$/;"	f	class:tinyxml2::MemPoolT
BUF_SIZE	agilelog\external\tinyxml2\tinyxml2.h	/^        BUF_SIZE = 200$/;"	e	enum:tinyxml2::XMLPrinter::__anon55
BUF_SIZE	agilelog\external\tinyxml2\tinyxml2.h	/^    enum { BUF_SIZE = 200 };$/;"	e	enum:tinyxml2::XMLAttribute::__anon53
Block	agilelog\external\tinyxml2\tinyxml2.h	/^    struct Block {$/;"	s	class:tinyxml2::MemPoolT
BoolAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^    bool	 BoolAttribute( const char* name ) const	{$/;"	f	class:tinyxml2::XMLElement
BoolValue	agilelog\external\tinyxml2\tinyxml2.h	/^    bool	 BoolValue() const				{$/;"	f	class:tinyxml2::XMLAttribute
CData	agilelog\external\tinyxml2\tinyxml2.h	/^    bool CData() const						{$/;"	f	class:tinyxml2::XMLText
CLOSED	agilelog\external\tinyxml2\tinyxml2.h	/^        CLOSED,		\/\/ <foo\/>$/;"	e	enum:tinyxml2::XMLElement::__anon54
CLOSING	agilelog\external\tinyxml2\tinyxml2.h	/^        CLOSING		\/\/ <\/foo>$/;"	e	enum:tinyxml2::XMLElement::__anon54
COLLAPSE_WHITESPACE	agilelog\external\tinyxml2\tinyxml2.h	/^        COLLAPSE_WHITESPACE	                = 0x04,$/;"	e	enum:tinyxml2::StrPair::__anon50
COLLAPSE_WHITESPACE	agilelog\external\tinyxml2\tinyxml2.h	/^    COLLAPSE_WHITESPACE$/;"	e	enum:tinyxml2::Whitespace
COMMENT	agilelog\external\tinyxml2\tinyxml2.h	/^        COMMENT				        = NEEDS_NEWLINE_NORMALIZATION$/;"	e	enum:tinyxml2::StrPair::__anon50
COUNT	agilelog\external\tinyxml2\tinyxml2.h	/^    enum { COUNT = (4*1024)\/SIZE }; \/\/ Some compilers do not accept to use COUNT in private part if COUNT is private$/;"	e	enum:tinyxml2::MemPoolT::__anon52
CStr	agilelog\external\tinyxml2\tinyxml2.h	/^    const char* CStr() const {$/;"	f	class:tinyxml2::XMLPrinter
CStrSize	agilelog\external\tinyxml2\tinyxml2.h	/^    int CStrSize() const {$/;"	f	class:tinyxml2::XMLPrinter
Capacity	agilelog\external\tinyxml2\tinyxml2.h	/^    int Capacity() const				{$/;"	f	class:tinyxml2::DynArray
Chunk	agilelog\external\tinyxml2\tinyxml2.h	/^    union Chunk {$/;"	u	class:tinyxml2::MemPoolT
ClosingType	agilelog\external\tinyxml2\tinyxml2.h	/^    int ClosingType() const {$/;"	f	class:tinyxml2::XMLElement
CurrentAllocs	agilelog\external\tinyxml2\tinyxml2.h	/^    int CurrentAllocs() const		{$/;"	f	class:tinyxml2::MemPoolT
DEBUG	agilelog\external\tinyxml2\tinyxml2.h	56;"	d
DeleteNode	agilelog\external\tinyxml2\tinyxml2.h	/^    void DeleteNode( XMLNode* node )	{$/;"	f	class:tinyxml2::XMLDocument
DoubleAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^    double 	 DoubleAttribute( const char* name ) const	{$/;"	f	class:tinyxml2::XMLElement
DoubleValue	agilelog\external\tinyxml2\tinyxml2.h	/^    double 	 DoubleValue() const			{$/;"	f	class:tinyxml2::XMLAttribute
DynArray	agilelog\external\tinyxml2\tinyxml2.h	/^    DynArray< T, INIT >() {$/;"	f	class:tinyxml2::DynArray
DynArray	agilelog\external\tinyxml2\tinyxml2.h	/^class DynArray$/;"	c	namespace:tinyxml2
ENTITY_RANGE	agilelog\external\tinyxml2\tinyxml2.h	/^        ENTITY_RANGE = 64,$/;"	e	enum:tinyxml2::XMLPrinter::__anon55
Empty	agilelog\external\tinyxml2\tinyxml2.h	/^    bool Empty() const					{$/;"	f	class:tinyxml2::DynArray
Empty	agilelog\external\tinyxml2\tinyxml2.h	/^    bool Empty() const {$/;"	f	class:tinyxml2::StrPair
EnsureCapacity	agilelog\external\tinyxml2\tinyxml2.h	/^    void EnsureCapacity( int cap ) {$/;"	f	class:tinyxml2::DynArray
Error	agilelog\external\tinyxml2\tinyxml2.h	/^    bool Error() const {$/;"	f	class:tinyxml2::XMLDocument
ErrorID	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLError  ErrorID() const {$/;"	f	class:tinyxml2::XMLDocument
FirstAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^    const XMLAttribute* FirstAttribute() const {$/;"	f	class:tinyxml2::XMLElement
FirstChild	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLHandle FirstChild() 													{$/;"	f	class:tinyxml2::XMLHandle
FirstChild	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLNode*		FirstChild()			{$/;"	f	class:tinyxml2::XMLNode
FirstChild	agilelog\external\tinyxml2\tinyxml2.h	/^    const XMLConstHandle FirstChild() const											{$/;"	f	class:tinyxml2::XMLConstHandle
FirstChild	agilelog\external\tinyxml2\tinyxml2.h	/^    const XMLNode*  FirstChild() const		{$/;"	f	class:tinyxml2::XMLNode
FirstChildElement	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLElement* FirstChildElement( const char* value=0 )	{$/;"	f	class:tinyxml2::XMLNode
FirstChildElement	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLHandle FirstChildElement( const char* value=0 )						{$/;"	f	class:tinyxml2::XMLHandle
FirstChildElement	agilelog\external\tinyxml2\tinyxml2.h	/^    const XMLConstHandle FirstChildElement( const char* value=0 ) const				{$/;"	f	class:tinyxml2::XMLConstHandle
FloatAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^    float	 FloatAttribute( const char* name ) const	{$/;"	f	class:tinyxml2::XMLElement
FloatValue	agilelog\external\tinyxml2\tinyxml2.h	/^    float	 FloatValue() const				{$/;"	f	class:tinyxml2::XMLAttribute
Free	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual void Free( void* mem ) {$/;"	f	class:tinyxml2::MemPoolT
GetDocument	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLDocument* GetDocument()				{$/;"	f	class:tinyxml2::XMLNode
GetDocument	agilelog\external\tinyxml2\tinyxml2.h	/^    const XMLDocument* GetDocument() const	{$/;"	f	class:tinyxml2::XMLNode
GetErrorStr1	agilelog\external\tinyxml2\tinyxml2.h	/^    const char* GetErrorStr1() const {$/;"	f	class:tinyxml2::XMLDocument
GetErrorStr2	agilelog\external\tinyxml2\tinyxml2.h	/^    const char* GetErrorStr2() const {$/;"	f	class:tinyxml2::XMLDocument
HasBOM	agilelog\external\tinyxml2\tinyxml2.h	/^    bool HasBOM() const {$/;"	f	class:tinyxml2::XMLDocument
IntAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^    int		 IntAttribute( const char* name ) const		{$/;"	f	class:tinyxml2::XMLElement
IntValue	agilelog\external\tinyxml2\tinyxml2.h	/^    int		 IntValue() const				{$/;"	f	class:tinyxml2::XMLAttribute
IsNameChar	agilelog\external\tinyxml2\tinyxml2.h	/^    inline static bool IsNameChar( unsigned char ch ) {$/;"	f	class:tinyxml2::XMLUtil
IsNameStartChar	agilelog\external\tinyxml2\tinyxml2.h	/^    inline static bool IsNameStartChar( unsigned char ch ) {$/;"	f	class:tinyxml2::XMLUtil
IsUTF8Continuation	agilelog\external\tinyxml2\tinyxml2.h	/^    inline static int IsUTF8Continuation( const char p ) {$/;"	f	class:tinyxml2::XMLUtil
IsWhiteSpace	agilelog\external\tinyxml2\tinyxml2.h	/^    static bool IsWhiteSpace( char p )					{$/;"	f	class:tinyxml2::XMLUtil
ItemSize	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual int ItemSize() const	{$/;"	f	class:tinyxml2::MemPoolT
LastChild	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLHandle LastChild()													{$/;"	f	class:tinyxml2::XMLHandle
LastChild	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLNode*		LastChild()								{$/;"	f	class:tinyxml2::XMLNode
LastChild	agilelog\external\tinyxml2\tinyxml2.h	/^    const XMLConstHandle LastChild()	const										{$/;"	f	class:tinyxml2::XMLConstHandle
LastChild	agilelog\external\tinyxml2\tinyxml2.h	/^    const XMLNode*	LastChild() const						{$/;"	f	class:tinyxml2::XMLNode
LastChildElement	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLElement* LastChildElement( const char* value=0 )	{$/;"	f	class:tinyxml2::XMLNode
LastChildElement	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLHandle LastChildElement( const char* _value=0 )						{$/;"	f	class:tinyxml2::XMLHandle
LastChildElement	agilelog\external\tinyxml2\tinyxml2.h	/^    const XMLConstHandle LastChildElement( const char* _value=0 ) const				{$/;"	f	class:tinyxml2::XMLConstHandle
LinkEndChild	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLNode* LinkEndChild( XMLNode* addThis )	{$/;"	f	class:tinyxml2::XMLNode
Mem	agilelog\external\tinyxml2\tinyxml2.h	/^    T* Mem()							{$/;"	f	class:tinyxml2::DynArray
Mem	agilelog\external\tinyxml2\tinyxml2.h	/^    const T* Mem() const				{$/;"	f	class:tinyxml2::DynArray
MemPool	agilelog\external\tinyxml2\tinyxml2.h	/^    MemPool() {}$/;"	f	class:tinyxml2::MemPool
MemPool	agilelog\external\tinyxml2\tinyxml2.h	/^class MemPool$/;"	c	namespace:tinyxml2
MemPoolT	agilelog\external\tinyxml2\tinyxml2.h	/^    MemPoolT() : _root(0), _currentAllocs(0), _nAllocs(0), _maxAllocs(0), _nUntracked(0)	{}$/;"	f	class:tinyxml2::MemPoolT
MemPoolT	agilelog\external\tinyxml2\tinyxml2.h	/^class MemPoolT : public MemPool$/;"	c	namespace:tinyxml2
NEEDS_DELETE	agilelog\external\tinyxml2\tinyxml2.h	/^        NEEDS_DELETE = 0x200$/;"	e	enum:tinyxml2::StrPair::__anon51
NEEDS_ENTITY_PROCESSING	agilelog\external\tinyxml2\tinyxml2.h	/^        NEEDS_ENTITY_PROCESSING			= 0x01,$/;"	e	enum:tinyxml2::StrPair::__anon50
NEEDS_FLUSH	agilelog\external\tinyxml2\tinyxml2.h	/^        NEEDS_FLUSH = 0x100,$/;"	e	enum:tinyxml2::StrPair::__anon51
NEEDS_NEWLINE_NORMALIZATION	agilelog\external\tinyxml2\tinyxml2.h	/^        NEEDS_NEWLINE_NORMALIZATION		= 0x02,$/;"	e	enum:tinyxml2::StrPair::__anon50
Name	agilelog\external\tinyxml2\tinyxml2.h	/^    const char* Name() const		{$/;"	f	class:tinyxml2::XMLElement
Name	agilelog\external\tinyxml2\tinyxml2.h	/^    const char* Name() const {$/;"	f	class:tinyxml2::XMLAttribute
Next	agilelog\external\tinyxml2\tinyxml2.h	/^    const XMLAttribute* Next() const {$/;"	f	class:tinyxml2::XMLAttribute
NextSibling	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLHandle NextSibling()													{$/;"	f	class:tinyxml2::XMLHandle
NextSibling	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLNode*	NextSibling()								{$/;"	f	class:tinyxml2::XMLNode
NextSibling	agilelog\external\tinyxml2\tinyxml2.h	/^    const XMLConstHandle NextSibling() const										{$/;"	f	class:tinyxml2::XMLConstHandle
NextSibling	agilelog\external\tinyxml2\tinyxml2.h	/^    const XMLNode*	NextSibling() const						{$/;"	f	class:tinyxml2::XMLNode
NextSiblingElement	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLElement*	NextSiblingElement( const char* value=0 )	{$/;"	f	class:tinyxml2::XMLNode
NextSiblingElement	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLHandle NextSiblingElement( const char* _value=0 )					{$/;"	f	class:tinyxml2::XMLHandle
NextSiblingElement	agilelog\external\tinyxml2\tinyxml2.h	/^    const XMLConstHandle NextSiblingElement( const char* _value=0 ) const			{$/;"	f	class:tinyxml2::XMLConstHandle
NoChildren	agilelog\external\tinyxml2\tinyxml2.h	/^    bool NoChildren() const					{$/;"	f	class:tinyxml2::XMLNode
OPEN	agilelog\external\tinyxml2\tinyxml2.h	/^        OPEN,		\/\/ <foo>$/;"	e	enum:tinyxml2::XMLElement::__anon54
PRESERVE_WHITESPACE	agilelog\external\tinyxml2\tinyxml2.h	/^    PRESERVE_WHITESPACE,$/;"	e	enum:tinyxml2::Whitespace
Parent	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLNode* Parent()						{$/;"	f	class:tinyxml2::XMLNode
Parent	agilelog\external\tinyxml2\tinyxml2.h	/^    const XMLNode*	Parent() const			{$/;"	f	class:tinyxml2::XMLNode
Pop	agilelog\external\tinyxml2\tinyxml2.h	/^    T Pop() {$/;"	f	class:tinyxml2::DynArray
PopArr	agilelog\external\tinyxml2\tinyxml2.h	/^    void PopArr( int count ) {$/;"	f	class:tinyxml2::DynArray
PreviousSibling	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLHandle PreviousSibling()												{$/;"	f	class:tinyxml2::XMLHandle
PreviousSibling	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLNode*	PreviousSibling()							{$/;"	f	class:tinyxml2::XMLNode
PreviousSibling	agilelog\external\tinyxml2\tinyxml2.h	/^    const XMLConstHandle PreviousSibling() const									{$/;"	f	class:tinyxml2::XMLConstHandle
PreviousSibling	agilelog\external\tinyxml2\tinyxml2.h	/^    const XMLNode*	PreviousSibling() const					{$/;"	f	class:tinyxml2::XMLNode
PreviousSiblingElement	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLElement*	PreviousSiblingElement( const char* value=0 ) {$/;"	f	class:tinyxml2::XMLNode
PreviousSiblingElement	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLHandle PreviousSiblingElement( const char* _value=0 )				{$/;"	f	class:tinyxml2::XMLHandle
PreviousSiblingElement	agilelog\external\tinyxml2\tinyxml2.h	/^    const XMLConstHandle PreviousSiblingElement( const char* _value=0 ) const		{$/;"	f	class:tinyxml2::XMLConstHandle
ProcessEntities	agilelog\external\tinyxml2\tinyxml2.h	/^    bool ProcessEntities() const		{$/;"	f	class:tinyxml2::XMLDocument
Push	agilelog\external\tinyxml2\tinyxml2.h	/^    void Push( T t ) {$/;"	f	class:tinyxml2::DynArray
PushArr	agilelog\external\tinyxml2\tinyxml2.h	/^    T* PushArr( int count ) {$/;"	f	class:tinyxml2::DynArray
QueryAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^	int QueryAttribute( const char* name, bool* value ) const {$/;"	f	class:tinyxml2::XMLElement
QueryAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^	int QueryAttribute( const char* name, double* value ) const {$/;"	f	class:tinyxml2::XMLElement
QueryAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^	int QueryAttribute( const char* name, float* value ) const {$/;"	f	class:tinyxml2::XMLElement
QueryAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^	int QueryAttribute( const char* name, int* value ) const {$/;"	f	class:tinyxml2::XMLElement
QueryAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^	int QueryAttribute( const char* name, unsigned int* value ) const {$/;"	f	class:tinyxml2::XMLElement
QueryBoolAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLError QueryBoolAttribute( const char* name, bool* value ) const				{$/;"	f	class:tinyxml2::XMLElement
QueryDoubleAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLError QueryDoubleAttribute( const char* name, double* value ) const			{$/;"	f	class:tinyxml2::XMLElement
QueryFloatAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLError QueryFloatAttribute( const char* name, float* value ) const			{$/;"	f	class:tinyxml2::XMLElement
QueryIntAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLError QueryIntAttribute( const char* name, int* value ) const				{$/;"	f	class:tinyxml2::XMLElement
QueryUnsignedAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLError QueryUnsignedAttribute( const char* name, unsigned int* value ) const	{$/;"	f	class:tinyxml2::XMLElement
RootElement	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLElement* RootElement()				{$/;"	f	class:tinyxml2::XMLDocument
RootElement	agilelog\external\tinyxml2\tinyxml2.h	/^    const XMLElement* RootElement() const	{$/;"	f	class:tinyxml2::XMLDocument
Set	agilelog\external\tinyxml2\tinyxml2.h	/^    void Set( char* start, char* end, int flags ) {$/;"	f	class:tinyxml2::StrPair
SetAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^    void SetAttribute( const char* name, bool value )			{$/;"	f	class:tinyxml2::XMLElement
SetAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^    void SetAttribute( const char* name, const char* value )	{$/;"	f	class:tinyxml2::XMLElement
SetAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^    void SetAttribute( const char* name, double value )		{$/;"	f	class:tinyxml2::XMLElement
SetAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^    void SetAttribute( const char* name, int value )			{$/;"	f	class:tinyxml2::XMLElement
SetAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^    void SetAttribute( const char* name, unsigned value )		{$/;"	f	class:tinyxml2::XMLElement
SetBOM	agilelog\external\tinyxml2\tinyxml2.h	/^    void SetBOM( bool useBOM ) {$/;"	f	class:tinyxml2::XMLDocument
SetCData	agilelog\external\tinyxml2\tinyxml2.h	/^    void SetCData( bool isCData )			{$/;"	f	class:tinyxml2::XMLText
SetInternedStr	agilelog\external\tinyxml2\tinyxml2.h	/^    void SetInternedStr( const char* str ) {$/;"	f	class:tinyxml2::StrPair
SetName	agilelog\external\tinyxml2\tinyxml2.h	/^    void SetName( const char* str, bool staticMem=false )	{$/;"	f	class:tinyxml2::XMLElement
SetTracked	agilelog\external\tinyxml2\tinyxml2.h	/^    void SetTracked() {$/;"	f	class:tinyxml2::MemPoolT
ShallowClone	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual XMLNode* ShallowClone( XMLDocument* \/*document*\/ ) const	{$/;"	f	class:tinyxml2::XMLDocument
ShallowEqual	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual bool ShallowEqual( const XMLNode* \/*compare*\/ ) const	{$/;"	f	class:tinyxml2::XMLDocument
Size	agilelog\external\tinyxml2\tinyxml2.h	/^    int Size() const					{$/;"	f	class:tinyxml2::DynArray
SkipWhiteSpace	agilelog\external\tinyxml2\tinyxml2.h	/^    static char* SkipWhiteSpace( char* p )				{$/;"	f	class:tinyxml2::XMLUtil
SkipWhiteSpace	agilelog\external\tinyxml2\tinyxml2.h	/^    static const char* SkipWhiteSpace( const char* p )	{$/;"	f	class:tinyxml2::XMLUtil
StrPair	agilelog\external\tinyxml2\tinyxml2.h	/^    StrPair() : _flags( 0 ), _start( 0 ), _end( 0 ) {}$/;"	f	class:tinyxml2::StrPair
StrPair	agilelog\external\tinyxml2\tinyxml2.h	/^class StrPair$/;"	c	namespace:tinyxml2
StringEqual	agilelog\external\tinyxml2\tinyxml2.h	/^    inline static bool StringEqual( const char* p, const char* q, int nChar=INT_MAX )  {$/;"	f	class:tinyxml2::XMLUtil
TEXT_ELEMENT	agilelog\external\tinyxml2\tinyxml2.h	/^        TEXT_ELEMENT		            	= NEEDS_ENTITY_PROCESSING | NEEDS_NEWLINE_NORMALIZATION,$/;"	e	enum:tinyxml2::StrPair::__anon50
TEXT_ELEMENT_LEAVE_ENTITIES	agilelog\external\tinyxml2\tinyxml2.h	/^        TEXT_ELEMENT_LEAVE_ENTITIES		= NEEDS_NEWLINE_NORMALIZATION,$/;"	e	enum:tinyxml2::StrPair::__anon50
TINYXML2_INCLUDED	agilelog\external\tinyxml2\tinyxml2.h	25;"	d
TIXML2_MAJOR_VERSION	agilelog\external\tinyxml2\tinyxml2.h	/^static const int TIXML2_MAJOR_VERSION = 1;$/;"	v
TIXML2_MINOR_VERSION	agilelog\external\tinyxml2\tinyxml2.h	/^static const int TIXML2_MINOR_VERSION = 0;$/;"	v
TIXML2_PATCH_VERSION	agilelog\external\tinyxml2\tinyxml2.h	/^static const int TIXML2_PATCH_VERSION = 11;$/;"	v
TIXMLASSERT	agilelog\external\tinyxml2\tinyxml2.h	63;"	d
TIXMLASSERT	agilelog\external\tinyxml2\tinyxml2.h	66;"	d
TIXMLASSERT	agilelog\external\tinyxml2\tinyxml2.h	69;"	d
TIXMLASSERT	agilelog\external\tinyxml2\tinyxml2.h	72;"	d
TIXML_SNPRINTF	agilelog\external\tinyxml2\tinyxml2.h	/^inline int TIXML_SNPRINTF( char* buffer, size_t size, const char* format, ... )$/;"	f
TIXML_SNPRINTF	agilelog\external\tinyxml2\tinyxml2.h	97;"	d
TIXML_SSCANF	agilelog\external\tinyxml2\tinyxml2.h	93;"	d
TIXML_SSCANF	agilelog\external\tinyxml2\tinyxml2.h	98;"	d
ToComment	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual XMLComment*		ToComment()		{$/;"	f	class:tinyxml2::XMLNode
ToComment	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual XMLComment*	ToComment()					{$/;"	f	class:tinyxml2::XMLComment
ToComment	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual const XMLComment*		ToComment() const		{$/;"	f	class:tinyxml2::XMLNode
ToComment	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual const XMLComment* ToComment() const		{$/;"	f	class:tinyxml2::XMLComment
ToDeclaration	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLDeclaration* ToDeclaration() 			{$/;"	f	class:tinyxml2::XMLHandle
ToDeclaration	agilelog\external\tinyxml2\tinyxml2.h	/^    const XMLDeclaration* ToDeclaration() const	{$/;"	f	class:tinyxml2::XMLConstHandle
ToDeclaration	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual XMLDeclaration*	ToDeclaration()					{$/;"	f	class:tinyxml2::XMLDeclaration
ToDeclaration	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual XMLDeclaration*	ToDeclaration()	{$/;"	f	class:tinyxml2::XMLNode
ToDeclaration	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual const XMLDeclaration*	ToDeclaration() const	{$/;"	f	class:tinyxml2::XMLNode
ToDeclaration	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual const XMLDeclaration* ToDeclaration() const		{$/;"	f	class:tinyxml2::XMLDeclaration
ToDocument	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual XMLDocument*	ToDocument()	{$/;"	f	class:tinyxml2::XMLNode
ToDocument	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual XMLDocument* ToDocument()				{$/;"	f	class:tinyxml2::XMLDocument
ToDocument	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual const XMLDocument*		ToDocument() const		{$/;"	f	class:tinyxml2::XMLNode
ToDocument	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual const XMLDocument* ToDocument() const	{$/;"	f	class:tinyxml2::XMLDocument
ToElement	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLElement* ToElement() 					{$/;"	f	class:tinyxml2::XMLHandle
ToElement	agilelog\external\tinyxml2\tinyxml2.h	/^    const XMLElement* ToElement() const			{$/;"	f	class:tinyxml2::XMLConstHandle
ToElement	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual XMLElement*		ToElement()		{$/;"	f	class:tinyxml2::XMLNode
ToElement	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual XMLElement* ToElement()				{$/;"	f	class:tinyxml2::XMLElement
ToElement	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual const XMLElement*		ToElement() const		{$/;"	f	class:tinyxml2::XMLNode
ToElement	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual const XMLElement* ToElement() const {$/;"	f	class:tinyxml2::XMLElement
ToNode	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLNode* ToNode()							{$/;"	f	class:tinyxml2::XMLHandle
ToNode	agilelog\external\tinyxml2\tinyxml2.h	/^    const XMLNode* ToNode() const				{$/;"	f	class:tinyxml2::XMLConstHandle
ToText	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLText* ToText() 							{$/;"	f	class:tinyxml2::XMLHandle
ToText	agilelog\external\tinyxml2\tinyxml2.h	/^    const XMLText* ToText() const				{$/;"	f	class:tinyxml2::XMLConstHandle
ToText	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual XMLText*		ToText()		{$/;"	f	class:tinyxml2::XMLNode
ToText	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual XMLText* ToText()			{$/;"	f	class:tinyxml2::XMLText
ToText	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual const XMLText*			ToText() const			{$/;"	f	class:tinyxml2::XMLNode
ToText	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual const XMLText* ToText() const	{$/;"	f	class:tinyxml2::XMLText
ToUnknown	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLUnknown* ToUnknown() 					{$/;"	f	class:tinyxml2::XMLHandle
ToUnknown	agilelog\external\tinyxml2\tinyxml2.h	/^    const XMLUnknown* ToUnknown() const			{$/;"	f	class:tinyxml2::XMLConstHandle
ToUnknown	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual XMLUnknown*		ToUnknown()		{$/;"	f	class:tinyxml2::XMLNode
ToUnknown	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual XMLUnknown*	ToUnknown()					{$/;"	f	class:tinyxml2::XMLUnknown
ToUnknown	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual const XMLUnknown*		ToUnknown() const		{$/;"	f	class:tinyxml2::XMLNode
ToUnknown	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual const XMLUnknown* ToUnknown() const		{$/;"	f	class:tinyxml2::XMLUnknown
Trace	agilelog\external\tinyxml2\tinyxml2.h	/^    void Trace( const char* name ) {$/;"	f	class:tinyxml2::MemPoolT
UnsignedAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^    unsigned UnsignedAttribute( const char* name ) const {$/;"	f	class:tinyxml2::XMLElement
UnsignedValue	agilelog\external\tinyxml2\tinyxml2.h	/^    unsigned UnsignedValue() const			{$/;"	f	class:tinyxml2::XMLAttribute
Untracked	agilelog\external\tinyxml2\tinyxml2.h	/^    int Untracked() const {$/;"	f	class:tinyxml2::MemPoolT
Value	agilelog\external\tinyxml2\tinyxml2.h	/^    const char* Value() const			{$/;"	f	class:tinyxml2::XMLNode
Value	agilelog\external\tinyxml2\tinyxml2.h	/^    const char* Value() const {$/;"	f	class:tinyxml2::XMLAttribute
Visit	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual bool Visit( const XMLComment& \/*comment*\/ )				{$/;"	f	class:tinyxml2::XMLVisitor
Visit	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual bool Visit( const XMLDeclaration& \/*declaration*\/ )		{$/;"	f	class:tinyxml2::XMLVisitor
Visit	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual bool Visit( const XMLText& \/*text*\/ )					{$/;"	f	class:tinyxml2::XMLVisitor
Visit	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual bool Visit( const XMLUnknown& \/*unknown*\/ )				{$/;"	f	class:tinyxml2::XMLVisitor
VisitEnter	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual bool VisitEnter( const XMLDocument& \/*doc*\/ )			{$/;"	f	class:tinyxml2::XMLVisitor
VisitEnter	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual bool VisitEnter( const XMLElement& \/*element*\/, const XMLAttribute* \/*firstAttribute*\/ )	{$/;"	f	class:tinyxml2::XMLVisitor
VisitExit	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual bool VisitExit( const XMLDocument& \/*doc*\/ )			{$/;"	f	class:tinyxml2::XMLPrinter
VisitExit	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual bool VisitExit( const XMLDocument& \/*doc*\/ )			{$/;"	f	class:tinyxml2::XMLVisitor
VisitExit	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual bool VisitExit( const XMLElement& \/*element*\/ )			{$/;"	f	class:tinyxml2::XMLVisitor
Whitespace	agilelog\external\tinyxml2\tinyxml2.h	/^enum Whitespace {$/;"	g	namespace:tinyxml2
WhitespaceMode	agilelog\external\tinyxml2\tinyxml2.h	/^    Whitespace WhitespaceMode() const	{$/;"	f	class:tinyxml2::XMLDocument
XMLAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLAttribute() : _next( 0 ) {}$/;"	f	class:tinyxml2::XMLAttribute
XMLAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^class XMLAttribute$/;"	c	namespace:tinyxml2
XMLComment	agilelog\external\tinyxml2\tinyxml2.h	/^class XMLComment : public XMLNode$/;"	c	namespace:tinyxml2
XMLConstHandle	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLConstHandle( const XMLConstHandle& ref )										{$/;"	f	class:tinyxml2::XMLConstHandle
XMLConstHandle	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLConstHandle( const XMLNode& node )											{$/;"	f	class:tinyxml2::XMLConstHandle
XMLConstHandle	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLConstHandle( const XMLNode* node )											{$/;"	f	class:tinyxml2::XMLConstHandle
XMLConstHandle	agilelog\external\tinyxml2\tinyxml2.h	/^class XMLConstHandle$/;"	c	namespace:tinyxml2
XMLDeclaration	agilelog\external\tinyxml2\tinyxml2.h	/^class XMLDeclaration : public XMLNode$/;"	c	namespace:tinyxml2
XMLDocument	agilelog\external\tinyxml2\tinyxml2.h	/^class XMLDocument : public XMLNode$/;"	c	namespace:tinyxml2
XMLElement	agilelog\external\tinyxml2\tinyxml2.h	/^class XMLElement : public XMLNode$/;"	c	namespace:tinyxml2
XMLError	agilelog\external\tinyxml2\tinyxml2.h	/^enum XMLError {$/;"	g	namespace:tinyxml2
XMLHandle	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLHandle( XMLNode& node )												{$/;"	f	class:tinyxml2::XMLHandle
XMLHandle	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLHandle( XMLNode* node )												{$/;"	f	class:tinyxml2::XMLHandle
XMLHandle	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLHandle( const XMLHandle& ref )										{$/;"	f	class:tinyxml2::XMLHandle
XMLHandle	agilelog\external\tinyxml2\tinyxml2.h	/^class XMLHandle$/;"	c	namespace:tinyxml2
XMLNode	agilelog\external\tinyxml2\tinyxml2.h	/^class XMLNode$/;"	c	namespace:tinyxml2
XMLPrinter	agilelog\external\tinyxml2\tinyxml2.h	/^class XMLPrinter : public XMLVisitor$/;"	c	namespace:tinyxml2
XMLText	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLText( XMLDocument* doc )	: XMLNode( doc ), _isCData( false )	{}$/;"	f	class:tinyxml2::XMLText
XMLText	agilelog\external\tinyxml2\tinyxml2.h	/^class XMLText : public XMLNode$/;"	c	namespace:tinyxml2
XMLUnknown	agilelog\external\tinyxml2\tinyxml2.h	/^class XMLUnknown : public XMLNode$/;"	c	namespace:tinyxml2
XMLUtil	agilelog\external\tinyxml2\tinyxml2.h	/^class XMLUtil$/;"	c	namespace:tinyxml2
XMLVisitor	agilelog\external\tinyxml2\tinyxml2.h	/^class XMLVisitor$/;"	c	namespace:tinyxml2
XML_CAN_NOT_CONVERT_TEXT	agilelog\external\tinyxml2\tinyxml2.h	/^    XML_CAN_NOT_CONVERT_TEXT,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_ELEMENT_MISMATCH	agilelog\external\tinyxml2\tinyxml2.h	/^    XML_ERROR_ELEMENT_MISMATCH,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_EMPTY_DOCUMENT	agilelog\external\tinyxml2\tinyxml2.h	/^    XML_ERROR_EMPTY_DOCUMENT,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_FILE_COULD_NOT_BE_OPENED	agilelog\external\tinyxml2\tinyxml2.h	/^    XML_ERROR_FILE_COULD_NOT_BE_OPENED,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_FILE_NOT_FOUND	agilelog\external\tinyxml2\tinyxml2.h	/^    XML_ERROR_FILE_NOT_FOUND,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_FILE_READ_ERROR	agilelog\external\tinyxml2\tinyxml2.h	/^    XML_ERROR_FILE_READ_ERROR,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_IDENTIFYING_TAG	agilelog\external\tinyxml2\tinyxml2.h	/^    XML_ERROR_IDENTIFYING_TAG,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_MISMATCHED_ELEMENT	agilelog\external\tinyxml2\tinyxml2.h	/^    XML_ERROR_MISMATCHED_ELEMENT,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_PARSING	agilelog\external\tinyxml2\tinyxml2.h	/^    XML_ERROR_PARSING,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_PARSING_ATTRIBUTE	agilelog\external\tinyxml2\tinyxml2.h	/^    XML_ERROR_PARSING_ATTRIBUTE,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_PARSING_CDATA	agilelog\external\tinyxml2\tinyxml2.h	/^    XML_ERROR_PARSING_CDATA,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_PARSING_COMMENT	agilelog\external\tinyxml2\tinyxml2.h	/^    XML_ERROR_PARSING_COMMENT,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_PARSING_DECLARATION	agilelog\external\tinyxml2\tinyxml2.h	/^    XML_ERROR_PARSING_DECLARATION,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_PARSING_ELEMENT	agilelog\external\tinyxml2\tinyxml2.h	/^    XML_ERROR_PARSING_ELEMENT,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_PARSING_TEXT	agilelog\external\tinyxml2\tinyxml2.h	/^    XML_ERROR_PARSING_TEXT,$/;"	e	enum:tinyxml2::XMLError
XML_ERROR_PARSING_UNKNOWN	agilelog\external\tinyxml2\tinyxml2.h	/^    XML_ERROR_PARSING_UNKNOWN,$/;"	e	enum:tinyxml2::XMLError
XML_NO_ATTRIBUTE	agilelog\external\tinyxml2\tinyxml2.h	/^    XML_NO_ATTRIBUTE,$/;"	e	enum:tinyxml2::XMLError
XML_NO_ERROR	agilelog\external\tinyxml2\tinyxml2.h	/^    XML_NO_ERROR = 0,$/;"	e	enum:tinyxml2::XMLError
XML_NO_TEXT_NODE	agilelog\external\tinyxml2\tinyxml2.h	/^    XML_NO_TEXT_NODE$/;"	e	enum:tinyxml2::XMLError
XML_SUCCESS	agilelog\external\tinyxml2\tinyxml2.h	/^    XML_SUCCESS = 0,$/;"	e	enum:tinyxml2::XMLError
XML_WRONG_ATTRIBUTE_TYPE	agilelog\external\tinyxml2\tinyxml2.h	/^    XML_WRONG_ATTRIBUTE_TYPE,$/;"	e	enum:tinyxml2::XMLError
_accumulator	agilelog\external\tinyxml2\tinyxml2.h	/^    DynArray< char, 20 > _accumulator;$/;"	m	class:tinyxml2::XMLPrinter
_allocated	agilelog\external\tinyxml2\tinyxml2.h	/^    int _allocated;		\/\/ objects allocated$/;"	m	class:tinyxml2::DynArray
_attributePool	agilelog\external\tinyxml2\tinyxml2.h	/^    MemPoolT< sizeof(XMLAttribute) > _attributePool;$/;"	m	class:tinyxml2::XMLDocument
_blockPtrs	agilelog\external\tinyxml2\tinyxml2.h	/^    DynArray< Block*, 10 > _blockPtrs;$/;"	m	class:tinyxml2::MemPoolT
_buffer	agilelog\external\tinyxml2\tinyxml2.h	/^    DynArray< char, 20 > _buffer;$/;"	m	class:tinyxml2::XMLPrinter
_charBuffer	agilelog\external\tinyxml2\tinyxml2.h	/^    char*       _charBuffer;$/;"	m	class:tinyxml2::XMLDocument
_closingType	agilelog\external\tinyxml2\tinyxml2.h	/^    int _closingType;$/;"	m	class:tinyxml2::XMLElement
_commentPool	agilelog\external\tinyxml2\tinyxml2.h	/^    MemPoolT< sizeof(XMLComment) >	 _commentPool;$/;"	m	class:tinyxml2::XMLDocument
_compactMode	agilelog\external\tinyxml2\tinyxml2.h	/^    bool _compactMode;$/;"	m	class:tinyxml2::XMLPrinter
_currentAllocs	agilelog\external\tinyxml2\tinyxml2.h	/^    int _currentAllocs;$/;"	m	class:tinyxml2::MemPoolT
_depth	agilelog\external\tinyxml2\tinyxml2.h	/^    int _depth;$/;"	m	class:tinyxml2::XMLPrinter
_document	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLDocument*	_document;$/;"	m	class:tinyxml2::XMLNode
_elementJustOpened	agilelog\external\tinyxml2\tinyxml2.h	/^    bool _elementJustOpened;$/;"	m	class:tinyxml2::XMLPrinter
_elementPool	agilelog\external\tinyxml2\tinyxml2.h	/^    MemPoolT< sizeof(XMLElement) >	 _elementPool;$/;"	m	class:tinyxml2::XMLDocument
_end	agilelog\external\tinyxml2\tinyxml2.h	/^    char*   _end;$/;"	m	class:tinyxml2::StrPair
_entityFlag	agilelog\external\tinyxml2\tinyxml2.h	/^    bool _entityFlag[ENTITY_RANGE];$/;"	m	class:tinyxml2::XMLPrinter
_errorID	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLError    _errorID;$/;"	m	class:tinyxml2::XMLDocument
_errorStr1	agilelog\external\tinyxml2\tinyxml2.h	/^    const char* _errorStr1;$/;"	m	class:tinyxml2::XMLDocument
_errorStr2	agilelog\external\tinyxml2\tinyxml2.h	/^    const char* _errorStr2;$/;"	m	class:tinyxml2::XMLDocument
_firstChild	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLNode*		_firstChild;$/;"	m	class:tinyxml2::XMLNode
_firstElement	agilelog\external\tinyxml2\tinyxml2.h	/^    bool _firstElement;$/;"	m	class:tinyxml2::XMLPrinter
_flags	agilelog\external\tinyxml2\tinyxml2.h	/^    int     _flags;$/;"	m	class:tinyxml2::StrPair
_fp	agilelog\external\tinyxml2\tinyxml2.h	/^    FILE* _fp;$/;"	m	class:tinyxml2::XMLPrinter
_isCData	agilelog\external\tinyxml2\tinyxml2.h	/^    bool _isCData;$/;"	m	class:tinyxml2::XMLText
_lastChild	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLNode*		_lastChild;$/;"	m	class:tinyxml2::XMLNode
_maxAllocs	agilelog\external\tinyxml2\tinyxml2.h	/^    int _maxAllocs;$/;"	m	class:tinyxml2::MemPoolT
_mem	agilelog\external\tinyxml2\tinyxml2.h	/^    T*  _mem;$/;"	m	class:tinyxml2::DynArray
_memPool	agilelog\external\tinyxml2\tinyxml2.h	/^    MemPool*		_memPool;$/;"	m	class:tinyxml2::XMLNode
_memPool	agilelog\external\tinyxml2\tinyxml2.h	/^    MemPool*        _memPool;$/;"	m	class:tinyxml2::XMLAttribute
_nAllocs	agilelog\external\tinyxml2\tinyxml2.h	/^    int _nAllocs;$/;"	m	class:tinyxml2::MemPoolT
_nUntracked	agilelog\external\tinyxml2\tinyxml2.h	/^    int _nUntracked;$/;"	m	class:tinyxml2::MemPoolT
_name	agilelog\external\tinyxml2\tinyxml2.h	/^    mutable StrPair _name;$/;"	m	class:tinyxml2::XMLAttribute
_next	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLAttribute*   _next;$/;"	m	class:tinyxml2::XMLAttribute
_next	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLNode*		_next;$/;"	m	class:tinyxml2::XMLNode
_node	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLNode* _node;$/;"	m	class:tinyxml2::XMLHandle
_node	agilelog\external\tinyxml2\tinyxml2.h	/^    const XMLNode* _node;$/;"	m	class:tinyxml2::XMLConstHandle
_parent	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLNode*		_parent;$/;"	m	class:tinyxml2::XMLNode
_pool	agilelog\external\tinyxml2\tinyxml2.h	/^    T   _pool[INIT];$/;"	m	class:tinyxml2::DynArray
_prev	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLNode*		_prev;$/;"	m	class:tinyxml2::XMLNode
_processEntities	agilelog\external\tinyxml2\tinyxml2.h	/^    bool        _processEntities;$/;"	m	class:tinyxml2::XMLDocument
_processEntities	agilelog\external\tinyxml2\tinyxml2.h	/^    bool _processEntities;$/;"	m	class:tinyxml2::XMLPrinter
_restrictedEntityFlag	agilelog\external\tinyxml2\tinyxml2.h	/^    bool _restrictedEntityFlag[ENTITY_RANGE];$/;"	m	class:tinyxml2::XMLPrinter
_root	agilelog\external\tinyxml2\tinyxml2.h	/^    Chunk* _root;$/;"	m	class:tinyxml2::MemPoolT
_rootAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLAttribute* _rootAttribute;$/;"	m	class:tinyxml2::XMLElement
_size	agilelog\external\tinyxml2\tinyxml2.h	/^    int _size;			\/\/ number objects in use$/;"	m	class:tinyxml2::DynArray
_stack	agilelog\external\tinyxml2\tinyxml2.h	/^    DynArray< const char*, 10 > _stack;$/;"	m	class:tinyxml2::XMLPrinter
_start	agilelog\external\tinyxml2\tinyxml2.h	/^    char*   _start;$/;"	m	class:tinyxml2::StrPair
_textDepth	agilelog\external\tinyxml2\tinyxml2.h	/^    int _textDepth;$/;"	m	class:tinyxml2::XMLPrinter
_textPool	agilelog\external\tinyxml2\tinyxml2.h	/^    MemPoolT< sizeof(XMLText) >		 _textPool;$/;"	m	class:tinyxml2::XMLDocument
_value	agilelog\external\tinyxml2\tinyxml2.h	/^    mutable StrPair	_value;$/;"	m	class:tinyxml2::XMLNode
_value	agilelog\external\tinyxml2\tinyxml2.h	/^    mutable StrPair _value;$/;"	m	class:tinyxml2::XMLAttribute
_whitespace	agilelog\external\tinyxml2\tinyxml2.h	/^    Whitespace  _whitespace;$/;"	m	class:tinyxml2::XMLDocument
_writeBOM	agilelog\external\tinyxml2\tinyxml2.h	/^    bool        _writeBOM;$/;"	m	class:tinyxml2::XMLDocument
chunk	agilelog\external\tinyxml2\tinyxml2.h	/^        Chunk chunk[COUNT];$/;"	m	struct:tinyxml2::MemPoolT::Block
mem	agilelog\external\tinyxml2\tinyxml2.h	/^        char    mem[SIZE];$/;"	m	union:tinyxml2::MemPoolT::Chunk
next	agilelog\external\tinyxml2\tinyxml2.h	/^        Chunk*  next;$/;"	m	union:tinyxml2::MemPoolT::Chunk
operator =	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLConstHandle& operator=( const XMLConstHandle& ref )							{$/;"	f	class:tinyxml2::XMLConstHandle
operator =	agilelog\external\tinyxml2\tinyxml2.h	/^    XMLHandle& operator=( const XMLHandle& ref )							{$/;"	f	class:tinyxml2::XMLHandle
operator []	agilelog\external\tinyxml2\tinyxml2.h	/^    T& operator[](int i)				{$/;"	f	class:tinyxml2::DynArray
operator []	agilelog\external\tinyxml2\tinyxml2.h	/^    const T& operator[](int i) const	{$/;"	f	class:tinyxml2::DynArray
tinyxml2	agilelog\external\tinyxml2\tinyxml2.h	/^namespace tinyxml2$/;"	n
~DynArray	agilelog\external\tinyxml2\tinyxml2.h	/^    ~DynArray() {$/;"	f	class:tinyxml2::DynArray
~MemPool	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual ~MemPool() {}$/;"	f	class:tinyxml2::MemPool
~MemPoolT	agilelog\external\tinyxml2\tinyxml2.h	/^    ~MemPoolT() {$/;"	f	class:tinyxml2::MemPoolT
~XMLAttribute	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual ~XMLAttribute()	{}$/;"	f	class:tinyxml2::XMLAttribute
~XMLPrinter	agilelog\external\tinyxml2\tinyxml2.h	/^    ~XMLPrinter()	{}$/;"	f	class:tinyxml2::XMLPrinter
~XMLText	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual ~XMLText()												{}$/;"	f	class:tinyxml2::XMLText
~XMLVisitor	agilelog\external\tinyxml2\tinyxml2.h	/^    virtual ~XMLVisitor() {}$/;"	f	class:tinyxml2::XMLVisitor
NullLineEndings	agilelog\external\tinyxml2\xmltest.cpp	/^void NullLineEndings( char* p )$/;"	f
WIN32_LEAN_AND_MEAN	agilelog\external\tinyxml2\xmltest.cpp	13;"	d	file:
XMLTest	agilelog\external\tinyxml2\xmltest.cpp	/^bool XMLTest (const char* testString, const char* expected, const char* found, bool echo=true )$/;"	f
XMLTest	agilelog\external\tinyxml2\xmltest.cpp	/^template< class T > bool XMLTest( const char* testString, T expected, T found, bool echo=true )$/;"	f
_CRT_SECURE_NO_WARNINGS	agilelog\external\tinyxml2\xmltest.cpp	2;"	d	file:
endMemState	agilelog\external\tinyxml2\xmltest.cpp	/^	_CrtMemState endMemState;$/;"	v
example_1	agilelog\external\tinyxml2\xmltest.cpp	/^int example_1()$/;"	f
example_2	agilelog\external\tinyxml2\xmltest.cpp	/^int example_2()$/;"	f
example_3	agilelog\external\tinyxml2\xmltest.cpp	/^int example_3()$/;"	f
example_4	agilelog\external\tinyxml2\xmltest.cpp	/^bool example_4()$/;"	f
gFail	agilelog\external\tinyxml2\xmltest.cpp	/^int gFail = 0;$/;"	v
gPass	agilelog\external\tinyxml2\xmltest.cpp	/^int gPass = 0;$/;"	v
main	agilelog\external\tinyxml2\xmltest.cpp	/^int main( int argc, const char ** argv )$/;"	f
startMemState	agilelog\external\tinyxml2\xmltest.cpp	/^	_CrtMemState startMemState;$/;"	v
AGILE_LOG	agilelog\inc\Mag_agilelog.h	72;"	d
AGILE_LOGD	agilelog\inc\Mag_agilelog.h	52;"	d
AGILE_LOGE	agilelog\inc\Mag_agilelog.h	64;"	d
AGILE_LOGI	agilelog\inc\Mag_agilelog.h	56;"	d
AGILE_LOGV	agilelog\inc\Mag_agilelog.h	48;"	d
AGILE_LOGW	agilelog\inc\Mag_agilelog.h	60;"	d
AGILE_LOG_FATAL	agilelog\inc\Mag_agilelog.h	68;"	d
MODULE_TAG	agilelog\inc\Mag_agilelog.h	10;"	d
__FUNCTION_NAME__	agilelog\inc\Mag_agilelog.h	34;"	d
__FUNCTION_NAME__	agilelog\inc\Mag_agilelog.h	35;"	d
__FUNCTION_NAME__	agilelog\inc\Mag_agilelog.h	43;"	d
__FUNCTION_NAME__	agilelog\inc\Mag_agilelog.h	44;"	d
__MAG_AGILE_LOG_H__	agilelog\inc\Mag_agilelog.h	2;"	d
ConfigTable_t	agilelog\inc\Mag_agilelogImpl.h	/^}ConfigTable_t;$/;"	t	namespace:MAGAGILELOG	typeref:struct:MAGAGILELOG::__anon62
DEBUG_LEVEL_DEBUG	agilelog\inc\Mag_agilelogImpl.h	/^    DEBUG_LEVEL_DEBUG   = 3,$/;"	e	enum:MAGAGILELOG::__anon58
DEBUG_LEVEL_ERROR	agilelog\inc\Mag_agilelogImpl.h	/^    DEBUG_LEVEL_ERROR   = 6,$/;"	e	enum:MAGAGILELOG::__anon58
DEBUG_LEVEL_FATAL	agilelog\inc\Mag_agilelogImpl.h	/^    DEBUG_LEVEL_FATAL   = 7,$/;"	e	enum:MAGAGILELOG::__anon58
DEBUG_LEVEL_INFO	agilelog\inc\Mag_agilelogImpl.h	/^    DEBUG_LEVEL_INFO    = 4,$/;"	e	enum:MAGAGILELOG::__anon58
DEBUG_LEVEL_VERBOSE	agilelog\inc\Mag_agilelogImpl.h	/^    DEBUG_LEVEL_VERBOSE = 2$/;"	e	enum:MAGAGILELOG::__anon58
DEBUG_LEVEL_WARNING	agilelog\inc\Mag_agilelogImpl.h	/^    DEBUG_LEVEL_WARNING = 5,$/;"	e	enum:MAGAGILELOG::__anon58
DebugLevel_t	agilelog\inc\Mag_agilelogImpl.h	/^}DebugLevel_t;$/;"	t	namespace:MAGAGILELOG	typeref:enum:MAGAGILELOG::__anon58
Error_t	agilelog\inc\Mag_agilelogImpl.h	/^}Error_t;$/;"	t	namespace:MAGAGILELOG	typeref:enum:MAGAGILELOG::__anon56
FAILURE	agilelog\inc\Mag_agilelogImpl.h	/^    FAILURE  = 1,$/;"	e	enum:MAGAGILELOG::__anon56
INVALID_OUTPUT	agilelog\inc\Mag_agilelogImpl.h	/^    INVALID_OUTPUT = 2,$/;"	e	enum:MAGAGILELOG::__anon56
LogConfigFile_t	agilelog\inc\Mag_agilelogImpl.h	/^}LogConfigFile_t;$/;"	t	namespace:MAGAGILELOG	typeref:struct:MAGAGILELOG::__anon59
MAGAGILELOG	agilelog\inc\Mag_agilelogImpl.h	/^namespace MAGAGILELOG {$/;"	n
MagAgileLog	agilelog\inc\Mag_agilelogImpl.h	/^class MagAgileLog{$/;"	c	namespace:MAGAGILELOG
ModuleConfig_t	agilelog\inc\Mag_agilelogImpl.h	/^}ModuleConfig_t;$/;"	t	namespace:MAGAGILELOG	typeref:struct:MAGAGILELOG::__anon61
NO_ERROR	agilelog\inc\Mag_agilelogImpl.h	/^    NO_ERROR = 0,$/;"	e	enum:MAGAGILELOG::__anon56
NO_MODULE	agilelog\inc\Mag_agilelogImpl.h	/^    NO_MODULE = 4,$/;"	e	enum:MAGAGILELOG::__anon56
OUTPUT_FILE	agilelog\inc\Mag_agilelogImpl.h	/^    OUTPUT_FILE    = 0x01,$/;"	e	enum:MAGAGILELOG::__anon57
OUTPUT_INVALID	agilelog\inc\Mag_agilelogImpl.h	/^    OUTPUT_INVALID = 0x08$/;"	e	enum:MAGAGILELOG::__anon57
OUTPUT_LOGCAT	agilelog\inc\Mag_agilelogImpl.h	/^    OUTPUT_LOGCAT  = 0x00,$/;"	e	enum:MAGAGILELOG::__anon57
OUTPUT_SOCKET	agilelog\inc\Mag_agilelogImpl.h	/^    OUTPUT_SOCKET  = 0x04,$/;"	e	enum:MAGAGILELOG::__anon57
OUTPUT_STDOUT	agilelog\inc\Mag_agilelogImpl.h	/^    OUTPUT_STDOUT  = 0x02,$/;"	e	enum:MAGAGILELOG::__anon57
OutputType_t	agilelog\inc\Mag_agilelogImpl.h	/^}OutputType_t;$/;"	t	namespace:MAGAGILELOG	typeref:enum:MAGAGILELOG::__anon57
Output_t	agilelog\inc\Mag_agilelogImpl.h	/^}Output_t;$/;"	t	namespace:MAGAGILELOG	typeref:struct:MAGAGILELOG::__anon60
USE_DEFAULT_CONFIG	agilelog\inc\Mag_agilelogImpl.h	/^    USE_DEFAULT_CONFIG = 3,$/;"	e	enum:MAGAGILELOG::__anon56
__MAG_AGILE_LOG_IMPL_H__	agilelog\inc\Mag_agilelogImpl.h	2;"	d
config_debug_level	agilelog\inc\Mag_agilelogImpl.h	/^    DebugLevel_t config_debug_level;$/;"	m	struct:MAGAGILELOG::__anon62
config_output	agilelog\inc\Mag_agilelogImpl.h	/^    Output_t     config_output;$/;"	m	struct:MAGAGILELOG::__anon62
config_timestamp_on	agilelog\inc\Mag_agilelogImpl.h	/^    bool         config_timestamp_on;$/;"	m	struct:MAGAGILELOG::__anon62
debugLevel	agilelog\inc\Mag_agilelogImpl.h	/^    DebugLevel_t  debugLevel;$/;"	m	struct:MAGAGILELOG::__anon61
debugOn	agilelog\inc\Mag_agilelogImpl.h	/^    bool          debugOn;$/;"	m	struct:MAGAGILELOG::__anon61
exists	agilelog\inc\Mag_agilelogImpl.h	/^    int exists;$/;"	m	struct:MAGAGILELOG::__anon59
filePath	agilelog\inc\Mag_agilelogImpl.h	/^    char filePath[16];$/;"	m	struct:MAGAGILELOG::__anon60
fnWriteToLog	agilelog\inc\Mag_agilelogImpl.h	/^typedef void (*fnWriteToLog)(int prio, const char *module, const char *buffer);$/;"	t	namespace:MAGAGILELOG
laseModifyTime	agilelog\inc\Mag_agilelogImpl.h	/^    time_t laseModifyTime;$/;"	m	struct:MAGAGILELOG::__anon59
mConfigFile	agilelog\inc\Mag_agilelogImpl.h	/^    LogConfigFile_t mConfigFile;$/;"	m	class:MAGAGILELOG::MagAgileLog
mConfigValue	agilelog\inc\Mag_agilelogImpl.h	/^    ConfigTable_t mConfigValue;$/;"	m	class:MAGAGILELOG::MagAgileLog
mMutex	agilelog\inc\Mag_agilelogImpl.h	/^    static pthread_mutex_t mMutex;$/;"	m	class:MAGAGILELOG::MagAgileLog
mWriteToLogFunc	agilelog\inc\Mag_agilelogImpl.h	/^    fnWriteToLog mWriteToLogFunc;$/;"	m	class:MAGAGILELOG::MagAgileLog
mXMLParsedDoc	agilelog\inc\Mag_agilelogImpl.h	/^    XMLDocument mXMLParsedDoc;$/;"	m	class:MAGAGILELOG::MagAgileLog
moduleName	agilelog\inc\Mag_agilelogImpl.h	/^    char          moduleName[64];$/;"	m	struct:MAGAGILELOG::__anon61
moduleNum	agilelog\inc\Mag_agilelogImpl.h	/^    int            moduleNum;$/;"	m	struct:MAGAGILELOG::__anon62
mpModuleHashT	agilelog\inc\Mag_agilelogImpl.h	/^    HashTableHandle mpModuleHashT;$/;"	m	class:MAGAGILELOG::MagAgileLog
name	agilelog\inc\Mag_agilelogImpl.h	/^    char name[256];$/;"	m	struct:MAGAGILELOG::__anon59
pModules	agilelog\inc\Mag_agilelogImpl.h	/^    ModuleConfig_t *pModules;$/;"	m	struct:MAGAGILELOG::__anon62
port	agilelog\inc\Mag_agilelogImpl.h	/^    int  port;$/;"	m	struct:MAGAGILELOG::__anon60
sInstance	agilelog\inc\Mag_agilelogImpl.h	/^    static MagAgileLog *sInstance;$/;"	m	class:MAGAGILELOG::MagAgileLog
type	agilelog\inc\Mag_agilelogImpl.h	/^    OutputType_t type;$/;"	m	struct:MAGAGILELOG::__anon60
AGILE_LOG_DEBUG	agilelog\inc\Mag_agilelogInt.h	/^    AGILE_LOG_DEBUG   = 3,$/;"	e	enum:agilelog_LogPriority
AGILE_LOG_DEFAULT	agilelog\inc\Mag_agilelogInt.h	/^    AGILE_LOG_DEFAULT = 1,$/;"	e	enum:agilelog_LogPriority
AGILE_LOG_ERROR	agilelog\inc\Mag_agilelogInt.h	/^    AGILE_LOG_ERROR   = 6,$/;"	e	enum:agilelog_LogPriority
AGILE_LOG_FATAL	agilelog\inc\Mag_agilelogInt.h	/^    AGILE_LOG_FATAL   = 7,$/;"	e	enum:agilelog_LogPriority
AGILE_LOG_INFO	agilelog\inc\Mag_agilelogInt.h	/^    AGILE_LOG_INFO    = 4,$/;"	e	enum:agilelog_LogPriority
AGILE_LOG_UNKNOWN	agilelog\inc\Mag_agilelogInt.h	/^    AGILE_LOG_UNKNOWN = 0,$/;"	e	enum:agilelog_LogPriority
AGILE_LOG_VERBOSE	agilelog\inc\Mag_agilelogInt.h	/^    AGILE_LOG_VERBOSE = 2,$/;"	e	enum:agilelog_LogPriority
AGILE_LOG_WARN	agilelog\inc\Mag_agilelogInt.h	/^    AGILE_LOG_WARN    = 5,$/;"	e	enum:agilelog_LogPriority
__MAG_AGILE_LOG_INTERFACE_H__	agilelog\inc\Mag_agilelogInt.h	2;"	d
agilelog_LogPriority	agilelog\inc\Mag_agilelogInt.h	/^typedef enum agilelog_LogPriority {$/;"	g
agilelog_LogPriority	agilelog\inc\Mag_agilelogInt.h	/^}agilelog_LogPriority;$/;"	t	typeref:enum:agilelog_LogPriority
LOCAL_LDFLAGS	agilelog\old_build\Android.mk	/^LOCAL_LDFLAGS := -lc -llog$/;"	m
LOCAL_MODULE	agilelog\old_build\Android.mk	/^LOCAL_MODULE := libagilelog$/;"	m
LOCAL_MODULE_PATH	agilelog\old_build\Android.mk	/^LOCAL_MODULE_PATH := $(TARGET_OUT_SHARED_LIBRARIES)\/magplayer$/;"	m
LOCAL_MODULE_TAGS	agilelog\old_build\Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_PATH	agilelog\old_build\Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_SRC_FILES	agilelog\old_build\Android.mk	/^LOCAL_SRC_FILES := src\/agilelog.cpp \\$/;"	m
DEFAULT_CONFIG_FILE_PATH	agilelog\src\impl\Mag_agilelogImpl.cpp	14;"	d	file:
MAGAGILELOG	agilelog\src\impl\Mag_agilelogImpl.cpp	/^namespace MAGAGILELOG {$/;"	n	file:
MagAgileLog	agilelog\src\impl\Mag_agilelogImpl.cpp	/^MagAgileLog::MagAgileLog(){$/;"	f	class:MAGAGILELOG::MagAgileLog
WriteToFile	agilelog\src\impl\Mag_agilelogImpl.cpp	/^void MagAgileLog::WriteToFile(int prio, const char *module, const char *buffer){$/;"	f	class:MAGAGILELOG::MagAgileLog
WriteToLogcat	agilelog\src\impl\Mag_agilelogImpl.cpp	/^void MagAgileLog::WriteToLogcat(int prio, const char *module, const char *buffer){$/;"	f	class:MAGAGILELOG::MagAgileLog
WriteToSocket	agilelog\src\impl\Mag_agilelogImpl.cpp	/^void MagAgileLog::WriteToSocket(int prio, const char *module, const char *buffer){$/;"	f	class:MAGAGILELOG::MagAgileLog
WriteToStdOut	agilelog\src\impl\Mag_agilelogImpl.cpp	/^void MagAgileLog::WriteToStdOut(int prio, const char *module, const char *buffer){$/;"	f	class:MAGAGILELOG::MagAgileLog
getInstance	agilelog\src\impl\Mag_agilelogImpl.cpp	/^MagAgileLog *MagAgileLog::getInstance(){$/;"	f	class:MAGAGILELOG::MagAgileLog
init	agilelog\src\impl\Mag_agilelogImpl.cpp	/^Error_t MagAgileLog::init(){$/;"	f	class:MAGAGILELOG::MagAgileLog
mMutex	agilelog\src\impl\Mag_agilelogImpl.cpp	/^pthread_mutex_t MagAgileLog::mMutex    = PTHREAD_MUTEX_INITIALIZER;$/;"	m	class:MAGAGILELOG::MagAgileLog	file:
parseGlobalConfigElement	agilelog\src\impl\Mag_agilelogImpl.cpp	/^Error_t MagAgileLog::parseGlobalConfigElement(XMLElement *ele){ $/;"	f	class:MAGAGILELOG::MagAgileLog
parseModuleConfigElement	agilelog\src\impl\Mag_agilelogImpl.cpp	/^Error_t MagAgileLog::parseModuleConfigElement(XMLElement *eleIn){$/;"	f	class:MAGAGILELOG::MagAgileLog
parseXMLConfig	agilelog\src\impl\Mag_agilelogImpl.cpp	/^Error_t MagAgileLog::parseXMLConfig(){$/;"	f	class:MAGAGILELOG::MagAgileLog
printConfig	agilelog\src\impl\Mag_agilelogImpl.cpp	/^void MagAgileLog::printConfig(){$/;"	f	class:MAGAGILELOG::MagAgileLog
printLog	agilelog\src\impl\Mag_agilelogImpl.cpp	/^void MagAgileLog::printLog(int prio, const char *module, const char *caller, int line, const char *printData){$/;"	f	class:MAGAGILELOG::MagAgileLog
sInstance	agilelog\src\impl\Mag_agilelogImpl.cpp	/^MagAgileLog *MagAgileLog::sInstance = NULL;$/;"	m	class:MAGAGILELOG::MagAgileLog	file:
setDefaultValue	agilelog\src\impl\Mag_agilelogImpl.cpp	/^void MagAgileLog::setDefaultValue(){$/;"	f	class:MAGAGILELOG::MagAgileLog
~MagAgileLog	agilelog\src\impl\Mag_agilelogImpl.cpp	/^MagAgileLog::~MagAgileLog(){$/;"	f	class:MAGAGILELOG::MagAgileLog
LOG_BUF_SIZE	agilelog\src\impl\Mag_agilelogInt.cpp	7;"	d	file:
Mag_agilelogPrint	agilelog\src\impl\Mag_agilelogInt.cpp	/^void Mag_agilelogPrint(int prio, const char *module, const char *caller, int line, const char *fmt, ...){$/;"	f
MODULE_TAG	agilelog\src\tests\Mag_agilelogTest.cpp	10;"	d	file:
MODULE_TAG	agilelog\src\tests\Mag_agilelogTest.cpp	12;"	d	file:
loadComponentLib	agilelog\src\tests\Mag_agilelogTest.cpp	/^static void loadComponentLib(const char *file, void *arg){$/;"	f	file:
loadComponentRecursive	agilelog\src\tests\Mag_agilelogTest.cpp	/^static void loadComponentRecursive(char *loadPath,$/;"	f	file:
main	agilelog\src\tests\Mag_agilelogTest.cpp	/^int main(){$/;"	f
arget	android.mk	/^	scons target=arm-android-linux build_config=Debug -c$/;"	m
arget	android.mk	/^	scons target=arm-android-linux build_config=Debug$/;"	m
CROSS_PLATFORMS	build\Boot.scons	/^CROSS_PLATFORMS   = ['arm-unknown-linux', 'arm-android-linux']$/;"	v
DefaultTarget	build\Boot.scons	/^def DefaultTarget():$/;"	f
PLATFORM_TO_TARGET_MAP	build\Boot.scons	/^PLATFORM_TO_TARGET_MAP = { $/;"	v
base_env	build\Boot.scons	/^base_env = env$/;"	v
env	build\Boot.scons	/^env = Environment(variables=options)$/;"	v
options	build\Boot.scons	/^options = Variables()$/;"	v
os	build\Boot.scons	/^import os$/;"	i
sys	build\Boot.scons	/^import sys$/;"	i
AGILELOG_LIB_PATH	build\Build.scons	/^AGILELOG_LIB_PATH = 'agilelog\/Targets\/'+env['target']+'\/'+env['build_config']$/;"	v
Application	build\Build.scons	/^def Application(name, dir, deps, $/;"	f
DeclareBuildDir	build\Build.scons	/^def DeclareBuildDir(dir):$/;"	f
GetDirPath	build\Build.scons	/^def GetDirPath(dir):$/;"	f
GetIncludeDirs	build\Build.scons	/^    def GetIncludeDirs(self):$/;"	m	class:Module
GetIncludeDirs	build\Build.scons	/^def GetIncludeDirs(modules, exclude=None):$/;"	f
GetLibraries	build\Build.scons	/^    def GetLibraries(self):$/;"	m	class:Module
GetLibraries	build\Build.scons	/^def GetLibraries(modules):$/;"	f
GlobSources	build\Build.scons	/^def GlobSources(drct, patterns, excluded_files=[]):$/;"	f
LibraryModule	build\Build.scons	/^class LibraryModule(Module):$/;"	c
LoadTool	build\Build.scons	/^def LoadTool(name, env, **kw):$/;"	f
Module	build\Build.scons	/^class Module:$/;"	c
Modules	build\Build.scons	/^Modules = {}$/;"	v
__init__	build\Build.scons	/^    def __init__(self, name, $/;"	m	class:LibraryModule
__init__	build\Build.scons	/^    def __init__(self, name, included_modules = [], linked_modules = []):$/;"	m	class:Module
build_include_dirs	build\Build.scons	/^              build_include_dirs    = Split(FRAMEWORK_COMMON_INC_PATH)+Split(FRAMEWORK_CORE_INC_PATH)+Split(FRAMEWORK_PLATFORM_INC_PATH))$/;"	v
build_include_dirs	build\Build.scons	/^              build_include_dirs    = Split(FRAMEWORK_COMMON_INC_PATH)+Split(FRAMEWORK_CORE_INC_PATH)+Split(FRAMEWORK_PLATFORM_INC_PATH),$/;"	v
build_source_dirs	build\Build.scons	/^              build_source_dirs     = ['core\/base\/src\/impl',$/;"	v
build_source_dirs	build\Build.scons	/^              build_source_dirs     = ['core\/base\/src\/impl'],$/;"	v
build_source_dirs	build\Build.scons	/^              build_source_dirs     = ['core\/db\/src\/impl'],$/;"	v
build_source_dirs	build\Build.scons	/^              build_source_dirs     = ['core\/event\/src\/impl'],$/;"	v
build_source_dirs	build\Build.scons	/^              build_source_dirs     = ['core\/hashtable\/src\/impl'],$/;"	v
build_source_dirs	build\Build.scons	/^              build_source_dirs     = ['core\/looper\/src\/impl'],$/;"	v
build_source_dirs	build\Build.scons	/^              build_source_dirs     = ['core\/message\/src\/impl'],$/;"	v
build_source_dirs	build\Build.scons	/^              build_source_dirs     = ['core\/ooc\/src\/impl'],$/;"	v
build_source_dirs	build\Build.scons	/^              build_source_dirs     = ['platform\/hal\/src'],$/;"	v
build_source_dirs	build\Build.scons	/^              build_source_dirs     = ['platform\/memory\/src\/impl'],$/;"	v
build_source_dirs	build\Build.scons	/^              build_source_dirs     = ['platform\/thread\/src\/impl'],$/;"	v
deps	build\Build.scons	/^                deps    = [ 'MagCore_Looper', 'MagPlatform_Thread', 'MagCore_Event', 'MagCore_Base', 'MagPlatform_Hal',],$/;"	v
deps	build\Build.scons	/^                deps    = ['MagCore_Base', 'MagPlatform_Hal'],$/;"	v
deps	build\Build.scons	/^                deps    = ['MagCore_DB', 'MagCore_Base', 'MagPlatform_Hal'],$/;"	v
deps	build\Build.scons	/^                deps    = ['MagCore_Event', 'MagCore_Base', 'MagPlatform_Hal'],$/;"	v
deps	build\Build.scons	/^                deps    = ['MagCore_HashTable', 'MagCore_Base', 'MagPlatform_Hal'],$/;"	v
deps	build\Build.scons	/^                deps    = ['MagCore_Message', 'MagCore_Event', 'MagCore_Base', 'MagPlatform_Hal'],$/;"	v
deps	build\Build.scons	/^                deps    = ['MagCore_Message', 'MagPlatform_Mem', 'MagCore_Event', 'MagPlatform_Hal'],$/;"	v
deps	build\Build.scons	/^                deps    = ['MagCore_OOC', 'MagPlatform_Hal'],$/;"	v
deps	build\Build.scons	/^                deps    = ['MagPlatform_Thread', 'MagCore_Event', 'MagPlatform_Hal', 'MagPlatform_Mem'],$/;"	v
dir	build\Build.scons	/^                dir     = 'core\/base\/src\/test', $/;"	v
dir	build\Build.scons	/^                dir     = 'core\/db\/src\/test', $/;"	v
dir	build\Build.scons	/^                dir     = 'core\/event\/src\/test', $/;"	v
dir	build\Build.scons	/^                dir     = 'core\/hashtable\/src\/test', $/;"	v
dir	build\Build.scons	/^                dir     = 'core\/looper\/src\/test', $/;"	v
dir	build\Build.scons	/^                dir     = 'core\/message\/src\/test', $/;"	v
dir	build\Build.scons	/^                dir     = 'core\/ooc\/src\/test', $/;"	v
dir	build\Build.scons	/^                dir     = 'platform\/memory\/src\/test', $/;"	v
dir	build\Build.scons	/^                dir     = 'platform\/thread\/src\/test', $/;"	v
extra_link_flags	build\Build.scons	/^                extra_link_flags = ['-L'+AGILELOG_LIB_PATH, '-lMagAgilelog'],$/;"	v
extra_link_flags	build\Build.scons	/^              extra_link_flags      = ['-L'+AGILELOG_LIB_PATH, '-lMagAgilelog'],$/;"	v
glob	build\Build.scons	/^from glob import glob$/;"	i
imp	build\Build.scons	/^import imp$/;"	i
install	build\Build.scons	/^                install = True)$/;"	v
install	build\Build.scons	/^              install               =  True,$/;"	v
installHeaders	build\Build.scons	/^              installHeaders        =  True)$/;"	v
os	build\Build.scons	/^import os$/;"	i
shared	build\Build.scons	/^              shared                =  True,$/;"	v
shutil	build\Build.scons	/^import shutil$/;"	i
sys	build\Build.scons	/^import sys$/;"	i
target_config_file	build\Build.scons	/^target_config_file = env.GetBuildPath('#\/build\/Targets\/'+env['target']+'\/Config.scons')$/;"	v
ANDROID_ARCH	build\Targets\arm-android-linux\Config.scons	/^    ANDROID_ARCH=ARGUMENTS.get('android_arch')$/;"	v
ANDROID_ARCH	build\Targets\arm-android-linux\Config.scons	/^ANDROID_ARCH         = 'arm'$/;"	v
ANDROID_CROSS_PREFIX	build\Targets\arm-android-linux\Config.scons	/^                ANDROID_CROSS_PREFIX = ANDROID_TOOLCHAIN[:suffix_pos]$/;"	v
ANDROID_CROSS_PREFIX	build\Targets\arm-android-linux\Config.scons	/^    ANDROID_CROSS_PREFIX=ARGUMENTS.get('android_cross_prefix')$/;"	v
ANDROID_CROSS_PREFIX	build\Targets\arm-android-linux\Config.scons	/^ANDROID_CROSS_PREFIX = 'arm-linux-androideabi'$/;"	v
ANDROID_HOST_SYSTEM	build\Targets\arm-android-linux\Config.scons	/^		ANDROID_HOST_SYSTEM = PLATFORM_TO_TARGET_MAP[sys.platform]$/;"	v
ANDROID_HOST_SYSTEM	build\Targets\arm-android-linux\Config.scons	/^	ANDROID_HOST_SYSTEM = env['android_host_system']$/;"	v
ANDROID_NDK_ROOT	build\Targets\arm-android-linux\Config.scons	/^ANDROID_NDK_ROOT=os.getenv('ANDROID_NDK_ROOT')$/;"	v
ANDROID_PLATFORM	build\Targets\arm-android-linux\Config.scons	/^    ANDROID_PLATFORM=ARGUMENTS.get('android_platform')$/;"	v
ANDROID_PLATFORM	build\Targets\arm-android-linux\Config.scons	/^ANDROID_PLATFORM     = 'android-9'$/;"	v
ANDROID_SYSROOT	build\Targets\arm-android-linux\Config.scons	/^ANDROID_SYSROOT = ANDROID_NDK_ROOT+'\/platforms\/'+ANDROID_PLATFORM+'\/arch-'+ANDROID_ARCH$/;"	v
ANDROID_TOOLCHAIN	build\Targets\arm-android-linux\Config.scons	/^            ANDROID_TOOLCHAIN=toolchain_dir$/;"	v
ANDROID_TOOLCHAIN	build\Targets\arm-android-linux\Config.scons	/^    ANDROID_TOOLCHAIN=ARGUMENTS.get('android_toolchain')$/;"	v
ANDROID_TOOLCHAIN	build\Targets\arm-android-linux\Config.scons	/^ANDROID_TOOLCHAIN    = 'arm-linux-androideabi-4.4.3'$/;"	v
ANDROID_TOOLCHAIN_BIN	build\Targets\arm-android-linux\Config.scons	/^ANDROID_TOOLCHAIN_BIN = ANDROID_NDK_ROOT+'\/toolchains\/'+ANDROID_TOOLCHAIN+'\/prebuilt\/'+ANDROID_HOST_SYSTEM+'\/bin'$/;"	v
PLATFORM_TO_TARGET_MAP	build\Targets\arm-android-linux\Config.scons	/^	PLATFORM_TO_TARGET_MAP = { $/;"	v
os	build\Targets\arm-android-linux\Config.scons	/^import os$/;"	i
platform	build\Targets\arm-android-linux\Config.scons	/^import platform$/;"	i
re	build\Targets\arm-android-linux\Config.scons	/^import re$/;"	i
suffix_pos	build\Targets\arm-android-linux\Config.scons	/^            suffix_pos = toolchain_dir.rfind('-')$/;"	v
sys	build\Targets\arm-android-linux\Config.scons	/^import sys$/;"	i
toolchain_dirs	build\Targets\arm-android-linux\Config.scons	/^    toolchain_dirs = os.listdir(ANDROID_NDK_ROOT+'\/toolchains')$/;"	v
generate	build\Tools\SCons\gcc-generic.py	/^def generate(env, gcc_cross_prefix=None, gcc_strict=True, gcc_stop_on_warning=None, gcc_extra_options=''):$/;"	f
os	build\Tools\SCons\gcc-generic.py	/^import os$/;"	i
AGILELOG_INC	build\old\android\Android.mk	/^AGILELOG_INC           := $(FRAMEWORK_TOP_FULL_PATH)\/agilelog\/inc\/pub \\$/;"	m
BASE_MODULE_FILES	build\old\android\Android.mk	/^BASE_MODULE_FILES      := $(FRAMEWORK_TOP_PATH)\/base\/src\/Mag_base.c \\$/;"	m
BASE_MODULE_INC	build\old\android\Android.mk	/^BASE_MODULE_INC        := $(FRAMEWORK_TOP_FULL_PATH)\/base\/inc$/;"	m
COMMON_INC	build\old\android\Android.mk	/^COMMON_INC             := $(FRAMEWORK_TOP_FULL_PATH)\/inc\/internal$/;"	m
DB_MODULE_FILES	build\old\android\Android.mk	/^DB_MODULE_FILES        := $(FRAMEWORK_TOP_PATH)\/db\/src\/Mag_minidb.c$/;"	m
DB_MODULE_INC	build\old\android\Android.mk	/^DB_MODULE_INC          := $(FRAMEWORK_TOP_FULL_PATH)\/db\/inc$/;"	m
EVENT_MODULE_FILES	build\old\android\Android.mk	/^EVENT_MODULE_FILES     := $(FRAMEWORK_TOP_PATH)\/event\/src\/Mag_event.c$/;"	m
EVENT_MODULE_INC	build\old\android\Android.mk	/^EVENT_MODULE_INC       := $(FRAMEWORK_TOP_FULL_PATH)\/event\/inc$/;"	m
FRAMEWORK_TOP_FULL_PATH	build\old\android\Android.mk	/^FRAMEWORK_TOP_FULL_PATH := $(LOCAL_PATH)\/..\/..$/;"	m
FRAMEWORK_TOP_PATH	build\old\android\Android.mk	/^FRAMEWORK_TOP_PATH      := ..\/..$/;"	m
HASHTABLE_MODULE_FILES	build\old\android\Android.mk	/^HASHTABLE_MODULE_FILES := $(FRAMEWORK_TOP_PATH)\/hashtable\/src\/hashTable.c$/;"	m
HASHTABLE_MODULE_INC	build\old\android\Android.mk	/^HASHTABLE_MODULE_INC   := $(FRAMEWORK_TOP_FULL_PATH)\/hashtable\/inc$/;"	m
LOCAL_C_INCLUDES	build\old\android\Android.mk	/^LOCAL_C_INCLUDES := $(COMMON_INC)           \\$/;"	m
LOCAL_MODULE	build\old\android\Android.mk	/^LOCAL_MODULE := libMagFramework$/;"	m
LOCAL_MODULE_PATH	build\old\android\Android.mk	/^LOCAL_MODULE_PATH := $(TARGET_OUT_SHARED_LIBRARIES)\/magplayer$/;"	m
LOCAL_MODULE_TAGS	build\old\android\Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_PATH	build\old\android\Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_SHARED_LIBRARIES	build\old\android\Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SRC_FILES	build\old\android\Android.mk	/^LOCAL_SRC_FILES := $(BASE_MODULE_FILES)        \\$/;"	m
LOOPER_MODULE_FILES	build\old\android\Android.mk	/^LOOPER_MODULE_FILES    := $(FRAMEWORK_TOP_PATH)\/looper\/src\/Mag_looper.c \\$/;"	m
LOOPER_MODULE_INC	build\old\android\Android.mk	/^LOOPER_MODULE_INC      := $(FRAMEWORK_TOP_FULL_PATH)\/looper\/inc$/;"	m
MEMORY_MODULE_FILES	build\old\android\Android.mk	/^MEMORY_MODULE_FILES    := $(FRAMEWORK_TOP_PATH)\/memory\/src\/Mag_mem.c \\$/;"	m
MEMORY_MODULE_INC	build\old\android\Android.mk	/^MEMORY_MODULE_INC      := $(FRAMEWORK_TOP_FULL_PATH)\/memory\/inc$/;"	m
MESSAGE_MODULE_FILES	build\old\android\Android.mk	/^MESSAGE_MODULE_FILES   := $(FRAMEWORK_TOP_PATH)\/message\/src\/Mag_msgQueue.c \\$/;"	m
MESSAGE_MODULE_INC	build\old\android\Android.mk	/^MESSAGE_MODULE_INC     := $(FRAMEWORK_TOP_FULL_PATH)\/message\/inc$/;"	m
OOC_MODULE_FILES	build\old\android\Android.mk	/^OOC_MODULE_FILES       := $(FRAMEWORK_TOP_PATH)\/ooc\/src\/ooc.c $/;"	m
OOC_MODULE_INC	build\old\android\Android.mk	/^OOC_MODULE_INC         := $(FRAMEWORK_TOP_FULL_PATH)\/ooc\/inc$/;"	m
THREAD_MODULE_FILES	build\old\android\Android.mk	/^THREAD_MODULE_FILES    := $(FRAMEWORK_TOP_PATH)\/thread\/src\/Mag_thread.c$/;"	m
THREAD_MODULE_INC	build\old\android\Android.mk	/^THREAD_MODULE_INC      := $(FRAMEWORK_TOP_FULL_PATH)\/thread\/inc$/;"	m
MAGPLAYER_FRAMEWORK_INC_PATH	build\old\android\AndroidFramework.mk	/^MAGPLAYER_FRAMEWORK_INC_PATH := \\$/;"	m
MAGPLAYER_FRAMEWORK_TOP	build\old\android\AndroidFramework.mk	/^MAGPLAYER_FRAMEWORK_TOP  := vendor\/marvell\/Maggie-OpenMax\/framework\/$/;"	m
INIT_LIST	core\base\inc\Mag_list.h	/^static inline void INIT_LIST(List_t *head){$/;"	f
List_t	core\base\inc\Mag_list.h	/^}List_t;$/;"	t	typeref:struct:list_t
_MAG_LIST_H__	core\base\inc\Mag_list.h	2;"	d
container_of	core\base\inc\Mag_list.h	14;"	d
is_added_list	core\base\inc\Mag_list.h	/^static inline int is_added_list(List_t *node){$/;"	f
list_add	core\base\inc\Mag_list.h	/^static inline void list_add(List_t *pnew, List_t *head){$/;"	f
list_add_tail	core\base\inc\Mag_list.h	/^static inline void list_add_tail(List_t *pnew, List_t *head){$/;"	f
list_del	core\base\inc\Mag_list.h	/^static inline void list_del(List_t *node){$/;"	f
list_entry	core\base\inc\Mag_list.h	18;"	d
list_offsetof	core\base\inc\Mag_list.h	12;"	d
list_t	core\base\inc\Mag_list.h	/^typedef struct list_t{$/;"	s
next	core\base\inc\Mag_list.h	/^    struct list_t *next;$/;"	m	struct:list_t	typeref:struct:list_t::list_t
prev	core\base\inc\Mag_list.h	/^    struct list_t *prev; $/;"	m	struct:list_t	typeref:struct:list_t::list_t
RBTREE_BOOL	core\base\inc\Mag_rbtree.h	/^}RBTREE_BOOL;$/;"	t	typeref:enum:__anon34
RBTREE_FALSE	core\base\inc\Mag_rbtree.h	/^    RBTREE_FALSE = 0,$/;"	e	enum:__anon34
RBTREE_NODE_t	core\base\inc\Mag_rbtree.h	/^}RBTREE_NODE_t;$/;"	t	typeref:struct:rbtree_node_t
RBTREE_TRUE	core\base\inc\Mag_rbtree.h	/^    RBTREE_TRUE  = !RBTREE_FALSE,$/;"	e	enum:__anon34
RBTreeNodeHandle	core\base\inc\Mag_rbtree.h	/^typedef RBTREE_NODE_t* RBTreeNodeHandle;$/;"	t
__MAG_RBTREE_H__	core\base\inc\Mag_rbtree.h	2;"	d
color	core\base\inc\Mag_rbtree.h	/^    RBTREE_BOOL  color;$/;"	m	struct:rbtree_node_t
colorFlip	core\base\inc\Mag_rbtree.h	/^static inline void colorFlip(RBTreeNodeHandle h){  $/;"	f
deleteMin	core\base\inc\Mag_rbtree.h	/^static inline RBTreeNodeHandle deleteMin(RBTreeNodeHandle h, RBTreeNodeHandle *deleteNode)$/;"	f
fixup	core\base\inc\Mag_rbtree.h	/^static inline RBTreeNodeHandle fixup(RBTreeNodeHandle h){$/;"	f
isRed	core\base\inc\Mag_rbtree.h	/^static inline RBTREE_BOOL isRed(RBTreeNodeHandle x){$/;"	f
key	core\base\inc\Mag_rbtree.h	/^    i64          key;$/;"	m	struct:rbtree_node_t
left	core\base\inc\Mag_rbtree.h	/^    struct rbtree_node_t *left;$/;"	m	struct:rbtree_node_t	typeref:struct:rbtree_node_t::rbtree_node_t
min	core\base\inc\Mag_rbtree.h	/^static inline RBTreeNodeHandle min(RBTreeNodeHandle h)$/;"	f
moveRedLeft	core\base\inc\Mag_rbtree.h	/^static inline RBTreeNodeHandle moveRedLeft(RBTreeNodeHandle h){$/;"	f
moveRedRight	core\base\inc\Mag_rbtree.h	/^static inline RBTreeNodeHandle moveRedRight(RBTreeNodeHandle h){$/;"	f
rbtree_node_t	core\base\inc\Mag_rbtree.h	/^typedef struct rbtree_node_t{$/;"	s
right	core\base\inc\Mag_rbtree.h	/^    struct rbtree_node_t *right;   $/;"	m	struct:rbtree_node_t	typeref:struct:rbtree_node_t::rbtree_node_t
rotateLeft	core\base\inc\Mag_rbtree.h	/^static inline RBTreeNodeHandle rotateLeft(RBTreeNodeHandle h){$/;"	f
rotateRight	core\base\inc\Mag_rbtree.h	/^static inline RBTreeNodeHandle rotateRight(RBTreeNodeHandle h){$/;"	f
value	core\base\inc\Mag_rbtree.h	/^    void*        value;$/;"	m	struct:rbtree_node_t
MODULE_TAG	core\base\src\impl\Mag_rbtree.c	7;"	d	file:
MODULE_TAG	core\base\src\impl\Mag_rbtree.c	9;"	d	file:
gLoopNum	core\base\src\impl\Mag_rbtree.c	/^static int gLoopNum = 0;$/;"	v	file:
gRepeatKeyNum	core\base\src\impl\Mag_rbtree.c	/^static int gRepeatKeyNum = 0;$/;"	v	file:
rbtree_debug_getRepeatNum	core\base\src\impl\Mag_rbtree.c	/^int rbtree_debug_getRepeatNum(void){$/;"	f
rbtree_delete	core\base\src\impl\Mag_rbtree.c	/^int rbtree_delete(RBTreeNodeHandle *root, i64 key){$/;"	f
rbtree_delete_priv	core\base\src\impl\Mag_rbtree.c	/^static RBTreeNodeHandle rbtree_delete_priv(RBTreeNodeHandle root, i64 key, RBTreeNodeHandle *deleteNode){$/;"	f	file:
rbtree_dump	core\base\src\impl\Mag_rbtree.c	/^int rbtree_dump(RBTreeNodeHandle root, i32 print_flag){$/;"	f
rbtree_dump_priv	core\base\src\impl\Mag_rbtree.c	/^static void rbtree_dump_priv(RBTreeNodeHandle root, i32 print_flag){$/;"	f	file:
rbtree_get	core\base\src\impl\Mag_rbtree.c	/^void *rbtree_get(RBTreeNodeHandle root, i64 key){$/;"	f
rbtree_getMinValue	core\base\src\impl\Mag_rbtree.c	/^void rbtree_getMinValue(RBTreeNodeHandle root, i64 *key, void **value){$/;"	f
rbtree_get_priv	core\base\src\impl\Mag_rbtree.c	/^static RBTreeNodeHandle rbtree_get_priv(RBTreeNodeHandle root, i64 key){$/;"	f	file:
rbtree_insert	core\base\src\impl\Mag_rbtree.c	/^RBTreeNodeHandle rbtree_insert(RBTreeNodeHandle root, i64 key, void *value){$/;"	f
rbtree_insert_priv	core\base\src\impl\Mag_rbtree.c	/^static RBTreeNodeHandle rbtree_insert_priv(RBTreeNodeHandle root, i64 key, void *value){$/;"	f	file:
deleteNum	core\base\src\test\Mag_rbtreeTest.c	/^static int deleteNum = 0;$/;"	v	file:
main	core\base\src\test\Mag_rbtreeTest.c	/^int main()  $/;"	f
MagMiniDBHandle	core\db\inc\Mag_minidb.h	/^typedef MagMiniDB_t* MagMiniDBHandle;$/;"	t
MagMiniDBItemHandle	core\db\inc\Mag_minidb.h	/^typedef MagMiniDBItem_t* MagMiniDBItemHandle;$/;"	t
MagMiniDBItemType	core\db\inc\Mag_minidb.h	/^enum MagMiniDBItemType {$/;"	g
MagMiniDBItem_t	core\db\inc\Mag_minidb.h	/^}MagMiniDBItem_t;$/;"	t	typeref:struct:mag_minidb_item
MagMiniDB_TypeDouble	core\db\inc\Mag_minidb.h	/^    MagMiniDB_TypeDouble,$/;"	e	enum:MagMiniDBItemType
MagMiniDB_TypeFloat	core\db\inc\Mag_minidb.h	/^    MagMiniDB_TypeFloat,$/;"	e	enum:MagMiniDBItemType
MagMiniDB_TypeInt32	core\db\inc\Mag_minidb.h	/^    MagMiniDB_TypeInt32,$/;"	e	enum:MagMiniDBItemType
MagMiniDB_TypeInt64	core\db\inc\Mag_minidb.h	/^    MagMiniDB_TypeInt64,$/;"	e	enum:MagMiniDBItemType
MagMiniDB_TypePointer	core\db\inc\Mag_minidb.h	/^    MagMiniDB_TypePointer,$/;"	e	enum:MagMiniDBItemType
MagMiniDB_TypeString	core\db\inc\Mag_minidb.h	/^    MagMiniDB_TypeString,$/;"	e	enum:MagMiniDBItemType
MagMiniDB_TypeUInt32	core\db\inc\Mag_minidb.h	/^    MagMiniDB_TypeUInt32,$/;"	e	enum:MagMiniDBItemType
MagMiniDB_t	core\db\inc\Mag_minidb.h	/^}MagMiniDB_t;$/;"	t	typeref:struct:mag_minidb
__MAG_MINIDB_H__	core\db\inc\Mag_minidb.h	2;"	d
deleteItem	core\db\inc\Mag_minidb.h	/^    void    (*deleteItem)(struct mag_minidb *db, const char *name);$/;"	m	struct:mag_minidb
derefItem	core\db\inc\Mag_minidb.h	/^    void    (*derefItem)(struct mag_minidb *db, const char *name);$/;"	m	struct:mag_minidb
doubleValue	core\db\inc\Mag_minidb.h	/^        fp64    doubleValue;$/;"	m	union:mag_minidb_item::__anon38
findDouble	core\db\inc\Mag_minidb.h	/^    boolean (*findDouble)(struct mag_minidb *db, const char *name, fp64 *value);$/;"	m	struct:mag_minidb
findFloat	core\db\inc\Mag_minidb.h	/^    boolean (*findFloat)(struct mag_minidb *db, const char *name, fp32 *value);$/;"	m	struct:mag_minidb
findInt32	core\db\inc\Mag_minidb.h	/^    boolean (*findInt32)(struct mag_minidb *db, const char *name, i32 *value);$/;"	m	struct:mag_minidb
findInt64	core\db\inc\Mag_minidb.h	/^    boolean (*findInt64)(struct mag_minidb *db, const char *name, i64 *value);$/;"	m	struct:mag_minidb
findPointer	core\db\inc\Mag_minidb.h	/^    boolean (*findPointer)(struct mag_minidb *db, const char *name, void **value);$/;"	m	struct:mag_minidb
findString	core\db\inc\Mag_minidb.h	/^    boolean (*findString)(struct mag_minidb *db, const char *name, char **s);$/;"	m	struct:mag_minidb
findUInt32	core\db\inc\Mag_minidb.h	/^    boolean (*findUInt32)(struct mag_minidb *db, const char *name, ui32 *value);$/;"	m	struct:mag_minidb
floatValue	core\db\inc\Mag_minidb.h	/^        fp32    floatValue;$/;"	m	union:mag_minidb_item::__anon38
int32Value	core\db\inc\Mag_minidb.h	/^        i32     int32Value;$/;"	m	union:mag_minidb_item::__anon38
int64Value	core\db\inc\Mag_minidb.h	/^        i64     int64Value;$/;"	m	union:mag_minidb_item::__anon38
mItemListHead	core\db\inc\Mag_minidb.h	/^    List_t mItemListHead;$/;"	m	struct:mag_minidb
mItemNum	core\db\inc\Mag_minidb.h	/^    ui32 mItemNum;$/;"	m	struct:mag_minidb
mLock	core\db\inc\Mag_minidb.h	/^    MagMutexHandle mLock;$/;"	m	struct:mag_minidb
mName	core\db\inc\Mag_minidb.h	/^    char *mName;$/;"	m	struct:mag_minidb_item
mType	core\db\inc\Mag_minidb.h	/^    enum MagMiniDBItemType mType;$/;"	m	struct:mag_minidb_item	typeref:enum:mag_minidb_item::MagMiniDBItemType
mag_minidb	core\db\inc\Mag_minidb.h	/^typedef struct mag_minidb{$/;"	s
mag_minidb_item	core\db\inc\Mag_minidb.h	/^typedef struct mag_minidb_item{$/;"	s
mhHashTable	core\db\inc\Mag_minidb.h	/^    HashTableHandle mhHashTable;$/;"	m	struct:mag_minidb
node	core\db\inc\Mag_minidb.h	/^    List_t node;$/;"	m	struct:mag_minidb_item
ptrValue	core\db\inc\Mag_minidb.h	/^        void    *ptrValue;$/;"	m	union:mag_minidb_item::__anon38
setDouble	core\db\inc\Mag_minidb.h	/^    void (*setDouble)(struct mag_minidb *db, const char *name, fp64 value);$/;"	m	struct:mag_minidb
setFloat	core\db\inc\Mag_minidb.h	/^    void (*setFloat)(struct mag_minidb *db, const char *name, fp32 value);$/;"	m	struct:mag_minidb
setInt32	core\db\inc\Mag_minidb.h	/^    void (*setInt32)(struct mag_minidb *db, const char *name, i32 value);$/;"	m	struct:mag_minidb
setInt64	core\db\inc\Mag_minidb.h	/^    void (*setInt64)(struct mag_minidb *db, const char *name, i64 value);$/;"	m	struct:mag_minidb
setPointer	core\db\inc\Mag_minidb.h	/^    void (*setPointer)(struct mag_minidb *db, const char *name, void *value);$/;"	m	struct:mag_minidb
setString	core\db\inc\Mag_minidb.h	/^    void (*setString)(struct mag_minidb *db, const char *name, const char *s);$/;"	m	struct:mag_minidb
setUInt32	core\db\inc\Mag_minidb.h	/^    void (*setUInt32)(struct mag_minidb *db, const char *name, ui32 value);$/;"	m	struct:mag_minidb
stringValue	core\db\inc\Mag_minidb.h	/^        char    *stringValue;$/;"	m	union:mag_minidb_item::__anon38
u	core\db\inc\Mag_minidb.h	/^    } u;$/;"	m	struct:mag_minidb_item	typeref:union:mag_minidb_item::__anon38
uint32Value	core\db\inc\Mag_minidb.h	/^        ui32    uint32Value;$/;"	m	union:mag_minidb_item::__anon38
MODULE_TAG	core\db\src\impl\Mag_minidb.c	5;"	d	file:
MODULE_TAG	core\db\src\impl\Mag_minidb.c	7;"	d	file:
MagMiniDB_deleteItem	core\db\src\impl\Mag_minidb.c	/^void    MagMiniDB_deleteItem(struct mag_minidb *db, const char *name){$/;"	f
MagMiniDB_derefItem	core\db\src\impl\Mag_minidb.c	/^void    MagMiniDB_derefItem(struct mag_minidb *db, const char *name){$/;"	f
MagMiniDB_findDouble	core\db\src\impl\Mag_minidb.c	/^boolean MagMiniDB_findDouble(struct mag_minidb *db, const char *name, fp64 *value){$/;"	f
MagMiniDB_findFloat	core\db\src\impl\Mag_minidb.c	/^boolean MagMiniDB_findFloat(struct mag_minidb *db, const char *name, fp32 *value){$/;"	f
MagMiniDB_findInt32	core\db\src\impl\Mag_minidb.c	/^boolean MagMiniDB_findInt32(struct mag_minidb *db, const char *name, i32 *value){$/;"	f
MagMiniDB_findInt64	core\db\src\impl\Mag_minidb.c	/^boolean MagMiniDB_findInt64(struct mag_minidb *db, const char *name, i64 *value){$/;"	f
MagMiniDB_findPointer	core\db\src\impl\Mag_minidb.c	/^boolean MagMiniDB_findPointer(struct mag_minidb *db, const char *name, void **value){$/;"	f
MagMiniDB_findString	core\db\src\impl\Mag_minidb.c	/^boolean MagMiniDB_findString(struct mag_minidb *db, const char *name, char **s){$/;"	f
MagMiniDB_findUInt32	core\db\src\impl\Mag_minidb.c	/^boolean MagMiniDB_findUInt32(struct mag_minidb *db, const char *name, ui32 *value){$/;"	f
MagMiniDB_setDouble	core\db\src\impl\Mag_minidb.c	/^void MagMiniDB_setDouble(struct mag_minidb *db, const char *name, fp64 value){$/;"	f
MagMiniDB_setFloat	core\db\src\impl\Mag_minidb.c	/^void MagMiniDB_setFloat(struct mag_minidb *db, const char *name, fp32 value){$/;"	f
MagMiniDB_setInt32	core\db\src\impl\Mag_minidb.c	/^void MagMiniDB_setInt32(struct mag_minidb *db, const char *name, i32 value){$/;"	f
MagMiniDB_setInt64	core\db\src\impl\Mag_minidb.c	/^void MagMiniDB_setInt64(struct mag_minidb *db, const char *name, i64 value){$/;"	f
MagMiniDB_setPointer	core\db\src\impl\Mag_minidb.c	/^void MagMiniDB_setPointer(struct mag_minidb *db, const char *name, void *value){$/;"	f
MagMiniDB_setString	core\db\src\impl\Mag_minidb.c	/^void MagMiniDB_setString(struct mag_minidb *db, const char *name, const char *s){$/;"	f
MagMiniDB_setUInt32	core\db\src\impl\Mag_minidb.c	/^void MagMiniDB_setUInt32(struct mag_minidb *db, const char *name, ui32 value){$/;"	f
createMagMiniDB	core\db\src\impl\Mag_minidb.c	/^MagMiniDBHandle createMagMiniDB(i32 maxItemsNum){$/;"	f
destroyMagMiniDB	core\db\src\impl\Mag_minidb.c	/^void destroyMagMiniDB(MagMiniDBHandle db){$/;"	f
main	core\db\src\test\Mag_minidbTest.c	/^int main(){$/;"	f
EventGroupHead	core\event\inc\Mag_event.h	/^    List_t EventGroupHead;$/;"	m	struct:mag_event_group_obj
MAG_EG_AND	core\event\inc\Mag_event.h	/^    MAG_EG_AND,$/;"	e	enum:__anon35
MAG_EG_OR	core\event\inc\Mag_event.h	/^    MAG_EG_OR$/;"	e	enum:__anon35
MAG_EVENT_GROUP_OP_t	core\event\inc\Mag_event.h	/^}MAG_EVENT_GROUP_OP_t;$/;"	t	typeref:enum:__anon35
MAG_EVENT_PRIO_t	core\event\inc\Mag_event.h	/^}MAG_EVENT_PRIO_t;$/;"	t	typeref:enum:__anon36
MAG_EVT_PRIO_DEFAULT	core\event\inc\Mag_event.h	/^    MAG_EVT_PRIO_DEFAULT = 0, \/*most of events should be in this list*\/$/;"	e	enum:__anon36
MAG_EVT_PRIO_HIGH	core\event\inc\Mag_event.h	/^    MAG_EVT_PRIO_HIGH = 2,$/;"	e	enum:__anon36
MAG_EVT_PRIO_LOW	core\event\inc\Mag_event.h	/^    MAG_EVT_PRIO_LOW = 1,$/;"	e	enum:__anon36
MAG_EVT_PRIO_MAX	core\event\inc\Mag_event.h	/^    MAG_EVT_PRIO_MAX = 3,$/;"	e	enum:__anon36
MAG_EVT_SCHED_NORMAL	core\event\inc\Mag_event.h	/^    MAG_EVT_SCHED_NORMAL = 0, \/*default is event retrigger while several events occur at the same time*\/$/;"	e	enum:__anon37
MAG_EVT_SCHED_NO_RETRIGGER	core\event\inc\Mag_event.h	/^    MAG_EVT_SCHED_NO_RETRIGGER, $/;"	e	enum:__anon37
MAX_EVENTS_EG	core\event\inc\Mag_event.h	17;"	d
MagEventCallbackHandle	core\event\inc\Mag_event.h	/^typedef MagEventCallbackObj_t *MagEventCallbackHandle;$/;"	t
MagEventCallbackObj_t	core\event\inc\Mag_event.h	/^}MagEventCallbackObj_t;$/;"	t	typeref:struct:mag_event_callback_obj
MagEventGroupHandle	core\event\inc\Mag_event.h	/^typedef MagEventGroupObj_t    *MagEventGroupHandle;$/;"	t
MagEventGroupObj_t	core\event\inc\Mag_event.h	/^}MagEventGroupObj_t;$/;"	t	typeref:struct:mag_event_group_obj
MagEventHandle	core\event\inc\Mag_event.h	/^typedef MagEvent_t            *MagEventHandle;$/;"	t
MagEventSchedulerHandle	core\event\inc\Mag_event.h	/^typedef Mag_EventScheduler_t *MagEventSchedulerHandle;$/;"	t
MagEvent_t	core\event\inc\Mag_event.h	/^}MagEvent_t;$/;"	t	typeref:struct:mag_event
MagEvtSchedPolicy_t	core\event\inc\Mag_event.h	/^}MagEvtSchedPolicy_t;$/;"	t	typeref:enum:__anon37
Mag_EventCallback_t	core\event\inc\Mag_event.h	/^}Mag_EventCallback_t;$/;"	t	typeref:struct:mag_event_callback_t
Mag_EventCommon_t	core\event\inc\Mag_event.h	/^}Mag_EventCommon_t;$/;"	t	typeref:struct:mag_event_common_obj
Mag_EventScheduler_t	core\event\inc\Mag_event.h	/^}Mag_EventScheduler_t;$/;"	t	typeref:struct:mag_event_scheduler_obj
Mag_EvtCbTimeStamp_t	core\event\inc\Mag_event.h	/^}Mag_EvtCbTimeStamp_t;$/;"	t	typeref:struct:mag_evt_cb_ts_obj
_MAG_EVENT_H__	core\event\inc\Mag_event.h	2;"	d
armed	core\event\inc\Mag_event.h	/^    unsigned int            armed;          \/* >0: the event callback is armed. =0: not armed*\/$/;"	m	struct:mag_event_callback_t
cbBody	core\event\inc\Mag_event.h	/^    MagEventCallbackHandle cbBody;$/;"	m	struct:mag_evt_cb_ts_obj
cbTimeStampFreeListH	core\event\inc\Mag_event.h	/^    List_t              cbTimeStampFreeListH;$/;"	m	struct:mag_event_scheduler_obj
cbTimeStampListH	core\event\inc\Mag_event.h	/^    List_t              cbTimeStampListH;$/;"	m	struct:mag_event_scheduler_obj
cond	core\event\inc\Mag_event.h	/^    pthread_cond_t      cond;$/;"	m	struct:mag_event_scheduler_obj
cond	core\event\inc\Mag_event.h	/^    pthread_cond_t  cond;            \/* condition to wake up from event set*\/$/;"	m	struct:mag_event_group_obj
entry	core\event\inc\Mag_event.h	/^    List_t                  entry;$/;"	m	struct:mag_event_callback_t
entry	core\event\inc\Mag_event.h	/^    List_t              entry;$/;"	m	struct:mag_event_common_obj
entry	core\event\inc\Mag_event.h	/^    List_t              entry;$/;"	m	struct:mag_event_scheduler_obj
eventNum	core\event\inc\Mag_event.h	/^    ui32    eventNum;        \/* the number of the events*\/$/;"	m	struct:mag_event_group_obj
exeEntry	core\event\inc\Mag_event.h	/^    List_t          exeEntry;$/;"	m	struct:mag_event_callback_obj
exeNum	core\event\inc\Mag_event.h	/^    ui32            exeNum;$/;"	m	struct:mag_event_callback_obj
hCallback	core\event\inc\Mag_event.h	/^    MagEventCallbackHandle  hCallback;$/;"	m	struct:mag_event_callback_t
hEventGroup	core\event\inc\Mag_event.h	/^    MagEventGroupHandle hEventGroup;$/;"	m	struct:mag_event_common_obj
hEvtScheduler	core\event\inc\Mag_event.h	/^    MagEventSchedulerHandle hEvtScheduler;$/;"	m	struct:mag_event_callback_t
listHead	core\event\inc\Mag_event.h	/^    List_t              listHead[MAG_EVT_PRIO_MAX];$/;"	m	struct:mag_event_scheduler_obj
lock	core\event\inc\Mag_event.h	/^    pthread_mutex_t         lock;            \/* mutex for protecting the object handling *\/$/;"	m	struct:mag_event_callback_t
lock	core\event\inc\Mag_event.h	/^    pthread_mutex_t     lock;            \/* mutex for protecting signal and conditional variables *\/$/;"	m	struct:mag_event_common_obj
lock	core\event\inc\Mag_event.h	/^    pthread_mutex_t     lock;$/;"	m	struct:mag_event_scheduler_obj
lock	core\event\inc\Mag_event.h	/^    pthread_mutex_t lock;            \/* mutex for protecting signal and conditional variables *\/$/;"	m	struct:mag_event_group_obj
lock	core\event\inc\Mag_event.h	/^    pthread_mutex_t lock;$/;"	m	struct:mag_event_callback_obj
mag_event	core\event\inc\Mag_event.h	/^typedef struct mag_event{$/;"	s
mag_event_callback_obj	core\event\inc\Mag_event.h	/^typedef struct mag_event_callback_obj{$/;"	s
mag_event_callback_t	core\event\inc\Mag_event.h	/^typedef struct mag_event_callback_t{$/;"	s
mag_event_common_obj	core\event\inc\Mag_event.h	/^typedef struct mag_event_common_obj{$/;"	s
mag_event_group_obj	core\event\inc\Mag_event.h	/^typedef struct mag_event_group_obj{$/;"	s
mag_event_scheduler_obj	core\event\inc\Mag_event.h	/^typedef struct mag_event_scheduler_obj{$/;"	s
mag_evt_cb_ts_obj	core\event\inc\Mag_event.h	/^typedef struct mag_evt_cb_ts_obj{$/;"	s
option	core\event\inc\Mag_event.h	/^    MagEvtSchedPolicy_t option;$/;"	m	struct:mag_event_scheduler_obj
pCallback	core\event\inc\Mag_event.h	/^    void (*pCallback)(void *);$/;"	m	struct:mag_event_callback_obj
pContext	core\event\inc\Mag_event.h	/^    void *pContext;$/;"	m	struct:mag_event_callback_obj
pEvtCallBack	core\event\inc\Mag_event.h	/^    Mag_EventCallback_t *pEvtCallBack;$/;"	m	struct:mag_event
pEvtCommon	core\event\inc\Mag_event.h	/^    Mag_EventCommon_t   *pEvtCommon; \/\/Must be the first element$/;"	m	struct:mag_event
priority	core\event\inc\Mag_event.h	/^    MAG_EVENT_PRIO_t        priority;$/;"	m	struct:mag_event_callback_t
sTExited	core\event\inc\Mag_event.h	/^    MAG_BOOL_t          sTExited;$/;"	m	struct:mag_event_scheduler_obj
schedThread	core\event\inc\Mag_event.h	/^    pthread_t           schedThread;$/;"	m	struct:mag_event_scheduler_obj
signal	core\event\inc\Mag_event.h	/^    MAG_BOOL_t          signal;          \/* >0: the event is really triggered. =0: not triggered*\/$/;"	m	struct:mag_event_common_obj
timeDiff	core\event\inc\Mag_event.h	/^    i32             timeDiff; \/*the time difference between 2 continuous incoming events*\/$/;"	m	struct:mag_evt_cb_ts_obj
timeStamp	core\event\inc\Mag_event.h	/^    struct timespec timeStamp;$/;"	m	struct:mag_evt_cb_ts_obj	typeref:struct:mag_evt_cb_ts_obj::timespec
tsListNode	core\event\inc\Mag_event.h	/^    List_t          tsListNode;$/;"	m	struct:mag_evt_cb_ts_obj
MODULE_TAG	core\event\src\impl\Mag_event.c	5;"	d	file:
MODULE_TAG	core\event\src\impl\Mag_event.c	7;"	d	file:
MagPriv_ms2timespec	core\event\src\impl\Mag_event.c	/^static MagErr_t MagPriv_ms2timespec(struct timespec *target, i32 timeoutMsec){$/;"	f	file:
Mag_AddEventGroup	core\event\src\impl\Mag_event.c	/^MagErr_t Mag_AddEventGroup(MagEventGroupHandle evtGrphandle, MagEventHandle event){$/;"	f
Mag_ClearAllEvents	core\event\src\impl\Mag_event.c	/^static MagErr_t Mag_ClearAllEvents(MagEventGroupHandle evtGrphandle){$/;"	f	file:
Mag_CreateEvent	core\event\src\impl\Mag_event.c	/^MagErr_t Mag_CreateEvent(MagEventHandle *evtHandle, MAG_EVENT_PRIO_t prio){$/;"	f
Mag_CreateEventGroup	core\event\src\impl\Mag_event.c	/^MagErr_t Mag_CreateEventGroup(MagEventGroupHandle *evtGrphandle){$/;"	f
Mag_CreateEventScheduler	core\event\src\impl\Mag_event.c	/^MagErr_t Mag_CreateEventScheduler(MagEventSchedulerHandle *evtSched, MagEvtSchedPolicy_t option){$/;"	f
Mag_DestroyEvent	core\event\src\impl\Mag_event.c	/^MagErr_t Mag_DestroyEvent(MagEventHandle evtHandle){$/;"	f
Mag_DestroyEventGroup	core\event\src\impl\Mag_event.c	/^void Mag_DestroyEventGroup(MagEventGroupHandle evtGrphandle){$/;"	f
Mag_DestroyEventScheduler	core\event\src\impl\Mag_event.c	/^MagErr_t Mag_DestroyEventScheduler(MagEventSchedulerHandle evtSched){$/;"	f
Mag_EventScheduleEntry	core\event\src\impl\Mag_event.c	/^static void *Mag_EventScheduleEntry(void *arg){$/;"	f	file:
Mag_EventStatusCheck	core\event\src\impl\Mag_event.c	/^static MagErr_t Mag_EventStatusCheck(MagEventGroupHandle evtGrphandle, MAG_EVENT_GROUP_OP_t op){$/;"	f	file:
Mag_RegisterEventCallback	core\event\src\impl\Mag_event.c	/^MagErr_t Mag_RegisterEventCallback(MagEventSchedulerHandle schedHandle, MagEventHandle evtHandle, void (*pCallback)(void *), void *pContext){$/;"	f
Mag_RemoveEventGroup	core\event\src\impl\Mag_event.c	/^MagErr_t Mag_RemoveEventGroup(MagEventGroupHandle evtGrphandle, MagEventHandle event){$/;"	f
Mag_SetEvent	core\event\src\impl\Mag_event.c	/^MagErr_t  Mag_SetEvent(MagEventHandle evtHandle){$/;"	f
Mag_UnregisterEventCallback	core\event\src\impl\Mag_event.c	/^MagErr_t Mag_UnregisterEventCallback(MagEventHandle evtHandle){$/;"	f
Mag_WaitForEventGroup	core\event\src\impl\Mag_event.c	/^MagErr_t Mag_WaitForEventGroup(MagEventGroupHandle evtGrphandle, MAG_EVENT_GROUP_OP_t op, i32 timeoutMsec){$/;"	f
evtNumTotal	core\event\src\impl\Mag_event.c	/^static i32 evtNumTotal = 0;$/;"	v	file:
getCallbackExeList	core\event\src\impl\Mag_event.c	/^static MagErr_t getCallbackExeList(MagEventSchedulerHandle schedHandle, List_t *listHead, int *timeout \/*ms*\/){$/;"	f	file:
processEventCallbacks	core\event\src\impl\Mag_event.c	/^static void processEventCallbacks(List_t *exeListHead){$/;"	f	file:
MODULE_TAG	core\event\src\test\Mag_eventTest.c	6;"	d	file:
MODULE_TAG	core\event\src\test\Mag_eventTest.c	8;"	d	file:
all_count	core\event\src\test\Mag_eventTest.c	/^static int all_count = 0;$/;"	v	file:
evtGrp	core\event\src\test\Mag_eventTest.c	/^MagEventGroupHandle evtGrp;$/;"	v
evtGrpElem	core\event\src\test\Mag_eventTest.c	/^MagEventHandle evtGrpElem[3];$/;"	v
evtGrpElem1_callback	core\event\src\test\Mag_eventTest.c	/^static void evtGrpElem1_callback(void *arg){$/;"	f	file:
evtGrpElem2_callback	core\event\src\test\Mag_eventTest.c	/^static void evtGrpElem2_callback(void *arg){$/;"	f	file:
evtGrpElem3_callback	core\event\src\test\Mag_eventTest.c	/^static void evtGrpElem3_callback(void *arg){$/;"	f	file:
hEvtSched	core\event\src\test\Mag_eventTest.c	/^MagEventSchedulerHandle hEvtSched;$/;"	v
hPrioEvtGrpElem1_callback	core\event\src\test\Mag_eventTest.c	/^static void hPrioEvtGrpElem1_callback(void *arg){$/;"	f	file:
hPrioEvtGrpElem2_callback	core\event\src\test\Mag_eventTest.c	/^static void hPrioEvtGrpElem2_callback(void *arg){$/;"	f	file:
hPrioEvtGrpElem3_callback	core\event\src\test\Mag_eventTest.c	/^static void hPrioEvtGrpElem3_callback(void *arg){$/;"	f	file:
highPrioEvt	core\event\src\test\Mag_eventTest.c	/^MagEventHandle highPrioEvt[3];$/;"	v
inc_count	core\event\src\test\Mag_eventTest.c	/^void *inc_count(void *arg){$/;"	f
loops	core\event\src\test\Mag_eventTest.c	/^static unsigned int loops = 100000;$/;"	v	file:
main	core\event\src\test\Mag_eventTest.c	/^int main(){$/;"	f
thread_ids	core\event\src\test\Mag_eventTest.c	/^int  thread_ids[4] = {0,1,2,3};$/;"	v
watch_count	core\event\src\test\Mag_eventTest.c	/^void *watch_count(void *arg){$/;"	f
HashTableHandle	core\hashtable\inc\Mag_hashTable.h	/^typedef StrHashTable_t* HashTableHandle;$/;"	t
HashTable_t	core\hashtable\inc\Mag_hashTable.h	/^}HashTable_t;$/;"	t	typeref:struct:hash_table
INIT_HLIST_NODE	core\hashtable\inc\Mag_hashTable.h	/^static inline void INIT_HLIST_NODE(struct hlist_node *h)$/;"	f
LinkedKeyNode_t	core\hashtable\inc\Mag_hashTable.h	/^}LinkedKeyNode_t;$/;"	t	typeref:struct:linked_key_node
StrHashTable_t	core\hashtable\inc\Mag_hashTable.h	/^}StrHashTable_t;$/;"	t	typeref:struct:str_hash_table
_HASHTABLE_H__	core\hashtable\inc\Mag_hashTable.h	2;"	d
addItem	core\hashtable\inc\Mag_hashTable.h	/^    void  (*addItem)(struct str_hash_table *ht, void *item, const char *str);$/;"	m	struct:str_hash_table
calcDJBHashValue	core\hashtable\inc\Mag_hashTable.h	/^static inline unsigned int calcDJBHashValue(const char* str, unsigned int len)$/;"	f
delItem	core\hashtable\inc\Mag_hashTable.h	/^    void  (*delItem)(struct str_hash_table *ht, const char *str);$/;"	m	struct:str_hash_table
first	core\hashtable\inc\Mag_hashTable.h	/^	struct hlist_node *first;$/;"	m	struct:hlist_head	typeref:struct:hlist_head::hlist_node
getItem	core\hashtable\inc\Mag_hashTable.h	/^    void* (*getItem)(struct str_hash_table *ht, const char *str);$/;"	m	struct:str_hash_table
hash_table	core\hashtable\inc\Mag_hashTable.h	/^typedef struct hash_table{$/;"	s
head	core\hashtable\inc\Mag_hashTable.h	/^    struct hlist_head head;$/;"	m	struct:hash_table	typeref:struct:hash_table::hlist_head
hlist_add_head	core\hashtable\inc\Mag_hashTable.h	/^static inline void hlist_add_head(struct hlist_node *n, struct hlist_head *h) $/;"	f
hlist_container_of	core\hashtable\inc\Mag_hashTable.h	15;"	d
hlist_del	core\hashtable\inc\Mag_hashTable.h	/^static inline void hlist_del(struct hlist_node *n)$/;"	f
hlist_entry	core\hashtable\inc\Mag_hashTable.h	19;"	d
hlist_for_each_entry	core\hashtable\inc\Mag_hashTable.h	28;"	d
hlist_for_each_entry_to_tail	core\hashtable\inc\Mag_hashTable.h	34;"	d
hlist_head	core\hashtable\inc\Mag_hashTable.h	/^struct hlist_head {$/;"	s
hlist_node	core\hashtable\inc\Mag_hashTable.h	/^struct hlist_node {$/;"	s
ht_offsetof	core\hashtable\inc\Mag_hashTable.h	13;"	d
linked_key_node	core\hashtable\inc\Mag_hashTable.h	/^typedef struct linked_key_node{$/;"	s
mTableSize	core\hashtable\inc\Mag_hashTable.h	/^    int mTableSize;$/;"	m	struct:str_hash_table
mpTable	core\hashtable\inc\Mag_hashTable.h	/^    HashTable_t *mpTable;$/;"	m	struct:str_hash_table
next	core\hashtable\inc\Mag_hashTable.h	/^	struct hlist_node *next, **pprev;$/;"	m	struct:hlist_node	typeref:struct:hlist_node::hlist_node
node	core\hashtable\inc\Mag_hashTable.h	/^    struct hlist_node node;$/;"	m	struct:linked_key_node	typeref:struct:linked_key_node::hlist_node
nodeStr	core\hashtable\inc\Mag_hashTable.h	/^    char nodeStr[64]; \/\/the length of the key should be less than 64$/;"	m	struct:linked_key_node
nodeValue	core\hashtable\inc\Mag_hashTable.h	/^    void *nodeValue;$/;"	m	struct:linked_key_node
pprev	core\hashtable\inc\Mag_hashTable.h	/^	struct hlist_node *next, **pprev;$/;"	m	struct:hlist_node	typeref:struct:hlist_node::
print	core\hashtable\inc\Mag_hashTable.h	/^    void  (*print)(struct str_hash_table *ht);$/;"	m	struct:str_hash_table
str_hash_table	core\hashtable\inc\Mag_hashTable.h	/^typedef struct str_hash_table{$/;"	s
AGILELOG_PRINT_BUFFER_SIZE	core\hashtable\src\impl\Mag_hashTable.c	82;"	d	file:
MODULE_TAG	core\hashtable\src\impl\Mag_hashTable.c	10;"	d	file:
MODULE_TAG	core\hashtable\src\impl\Mag_hashTable.c	8;"	d	file:
StrHashTable_addItem	core\hashtable\src\impl\Mag_hashTable.c	/^static void StrHashTable_addItem(struct str_hash_table *ht, void *item, const char *str){$/;"	f	file:
StrHashTable_delItem	core\hashtable\src\impl\Mag_hashTable.c	/^static void StrHashTable_delItem(struct str_hash_table *ht, const char *str){$/;"	f	file:
StrHashTable_getItem	core\hashtable\src\impl\Mag_hashTable.c	/^static void *StrHashTable_getItem(struct str_hash_table *ht, const char *str){$/;"	f	file:
StrHashTable_print	core\hashtable\src\impl\Mag_hashTable.c	/^static void StrHashTable_print(struct str_hash_table *ht){$/;"	f	file:
createMagStrHashTable	core\hashtable\src\impl\Mag_hashTable.c	/^HashTableHandle  createMagStrHashTable(int num){$/;"	f
destroyMagStrHashTable	core\hashtable\src\impl\Mag_hashTable.c	/^void             destroyMagStrHashTable(HashTableHandle ht){$/;"	f
main	core\hashtable\src\test\Mag_hashtableTest.c	/^int main(){$/;"	f
Event	core\looper\inc\Mag_looper.h	/^typedef struct Event {$/;"	s
MAX_MSG_PAYLOAD_NUM	core\looper\inc\Mag_looper.h	21;"	d
MagHandler	core\looper\inc\Mag_looper.h	/^typedef struct MagHandler{$/;"	s
MagHandlerHandle	core\looper\inc\Mag_looper.h	/^typedef MagHandler_t* MagHandlerHandle;$/;"	t
MagHandler_t	core\looper\inc\Mag_looper.h	/^}MagHandler_t;$/;"	t	typeref:struct:MagHandler
MagItem_t	core\looper\inc\Mag_looper.h	/^}MagItem_t;$/;"	t	typeref:struct:mag_item
MagLooper	core\looper\inc\Mag_looper.h	/^typedef struct MagLooper{$/;"	s
MagLooperEvent_t	core\looper\inc\Mag_looper.h	/^}MagLooperEvent_t;$/;"	t	typeref:struct:Event
MagLooperHandle	core\looper\inc\Mag_looper.h	/^typedef MagLooper_t* MagLooperHandle;$/;"	t
MagLooper_t	core\looper\inc\Mag_looper.h	/^}MagLooper_t;$/;"	t	typeref:struct:MagLooper
MagMessageHandle	core\looper\inc\Mag_looper.h	/^typedef MagMessage_t* MagMessageHandle;$/;"	t
MagMessage_t	core\looper\inc\Mag_looper.h	/^}MagMessage_t;$/;"	t	typeref:struct:mag_message
MsgPayloadType	core\looper\inc\Mag_looper.h	/^enum MsgPayloadType {$/;"	g
NUM_PRE_ALLOCATED_EVENTS	core\looper\inc\Mag_looper.h	99;"	d
TypeDouble	core\looper\inc\Mag_looper.h	/^    TypeDouble,$/;"	e	enum:MsgPayloadType
TypeFloat	core\looper\inc\Mag_looper.h	/^    TypeFloat,$/;"	e	enum:MsgPayloadType
TypeInt32	core\looper\inc\Mag_looper.h	/^    TypeInt32,$/;"	e	enum:MsgPayloadType
TypeInt64	core\looper\inc\Mag_looper.h	/^    TypeInt64,$/;"	e	enum:MsgPayloadType
TypeMessage	core\looper\inc\Mag_looper.h	/^    TypeMessage,$/;"	e	enum:MsgPayloadType
TypePointer	core\looper\inc\Mag_looper.h	/^    TypePointer,$/;"	e	enum:MsgPayloadType
TypeSize	core\looper\inc\Mag_looper.h	/^    TypeSize,$/;"	e	enum:MsgPayloadType
TypeString	core\looper\inc\Mag_looper.h	/^    TypeString,$/;"	e	enum:MsgPayloadType
__MAG_LOOPER_H__	core\looper\inc\Mag_looper.h	2;"	d
clear	core\looper\inc\Mag_looper.h	/^    void      (*clear)(struct MagLooper *self);$/;"	m	struct:MagLooper
doubleValue	core\looper\inc\Mag_looper.h	/^        fp64    doubleValue;$/;"	m	union:mag_item::__anon39
findDouble	core\looper\inc\Mag_looper.h	/^    boolean (*findDouble)(struct mag_message *msg, const char *name, fp64 *value);$/;"	m	struct:mag_message
findFloat	core\looper\inc\Mag_looper.h	/^    boolean (*findFloat)(struct mag_message *msg, const char *name, fp32 *value);$/;"	m	struct:mag_message
findInt32	core\looper\inc\Mag_looper.h	/^    boolean (*findInt32)(struct mag_message *msg, const char *name, i32 *value);$/;"	m	struct:mag_message
findInt64	core\looper\inc\Mag_looper.h	/^    boolean (*findInt64)(struct mag_message *msg, const char *name, i64 *value);$/;"	m	struct:mag_message
findMessage	core\looper\inc\Mag_looper.h	/^    boolean (*findMessage)(struct mag_message *msg, const char *name, struct mag_message **message);$/;"	m	struct:mag_message
findPointer	core\looper\inc\Mag_looper.h	/^    boolean (*findPointer)(struct mag_message *msg, const char *name, void **value);$/;"	m	struct:mag_message
findString	core\looper\inc\Mag_looper.h	/^    boolean (*findString)(struct mag_message *msg, const char *name, char **s);$/;"	m	struct:mag_message
findUInt32	core\looper\inc\Mag_looper.h	/^    boolean (*findUInt32)(struct mag_message *msg, const char *name, ui32 *value);$/;"	m	struct:mag_message
floatValue	core\looper\inc\Mag_looper.h	/^        fp32    floatValue;$/;"	m	union:mag_item::__anon39
fnOnMessageReceived	core\looper\inc\Mag_looper.h	/^typedef void (*fnOnMessageReceived)(const MagMessageHandle msg, void *priv);$/;"	t
getHandlerID	core\looper\inc\Mag_looper.h	/^    ui32 (*getHandlerID)(struct MagLooper *self);$/;"	m	struct:MagLooper
id	core\looper\inc\Mag_looper.h	/^    ui32 (*id)(struct MagHandler *h);$/;"	m	struct:MagHandler
int32Value	core\looper\inc\Mag_looper.h	/^        i32     int32Value;$/;"	m	union:mag_item::__anon39
int64Value	core\looper\inc\Mag_looper.h	/^        i64     int64Value;$/;"	m	union:mag_item::__anon39
mDelayEvtTreeRoot	core\looper\inc\Mag_looper.h	/^    RBTreeNodeHandle mDelayEvtTreeRoot;$/;"	m	struct:MagLooper
mDelayEvtWhenMS	core\looper\inc\Mag_looper.h	/^    i64 mDelayEvtWhenMS;$/;"	m	struct:MagLooper
mFreeEvtQueue	core\looper\inc\Mag_looper.h	/^    List_t mFreeEvtQueue;$/;"	m	struct:MagLooper
mFreeNodeNum	core\looper\inc\Mag_looper.h	/^    i32 mFreeNodeNum;$/;"	m	struct:MagLooper
mHandlerID	core\looper\inc\Mag_looper.h	/^    ui32 mHandlerID;$/;"	m	struct:MagLooper
mHandlerTreeRoot	core\looper\inc\Mag_looper.h	/^    RBTreeNodeHandle mHandlerTreeRoot;$/;"	m	struct:MagLooper
mItems	core\looper\inc\Mag_looper.h	/^    MagItem_t mItems[MAX_MSG_PAYLOAD_NUM];$/;"	m	struct:mag_message
mLock	core\looper\inc\Mag_looper.h	/^    MagMutexHandle mLock;$/;"	m	struct:MagLooper
mLooper	core\looper\inc\Mag_looper.h	/^    struct MagLooper *mLooper;$/;"	m	struct:mag_message	typeref:struct:mag_message::MagLooper
mLooperID	core\looper\inc\Mag_looper.h	/^    ui32 mLooperID;$/;"	m	struct:MagLooper
mLooperThread	core\looper\inc\Mag_looper.h	/^    MagThreadHandle mLooperThread;$/;"	m	struct:MagLooper
mMQEmptyPushEvt	core\looper\inc\Mag_looper.h	/^    MagEventHandle      mMQEmptyPushEvt;$/;"	m	struct:MagLooper
mMQPushEvtGroup	core\looper\inc\Mag_looper.h	/^    MagEventGroupHandle mMQPushEvtGroup;$/;"	m	struct:MagLooper
mMessage	core\looper\inc\Mag_looper.h	/^    struct mag_message *mMessage;$/;"	m	struct:Event	typeref:struct:Event::mag_message
mMsgProcessor	core\looper\inc\Mag_looper.h	/^    fnOnMessageReceived mMsgProcessor;$/;"	m	struct:MagHandler
mName	core\looper\inc\Mag_looper.h	/^    const char *mName;$/;"	m	struct:mag_item
mNoDelayEvtQueue	core\looper\inc\Mag_looper.h	/^    List_t mNoDelayEvtQueue;$/;"	m	struct:MagLooper
mNumItems	core\looper\inc\Mag_looper.h	/^    ui32 mNumItems;$/;"	m	struct:mag_message
mOwnedByMsg	core\looper\inc\Mag_looper.h	/^    boolean mOwnedByMsg;$/;"	m	struct:mag_item
mTarget	core\looper\inc\Mag_looper.h	/^    ui32 mTarget;$/;"	m	struct:mag_message
mType	core\looper\inc\Mag_looper.h	/^    enum MsgPayloadType mType;$/;"	m	struct:mag_item	typeref:enum:mag_item::MsgPayloadType
mWhat	core\looper\inc\Mag_looper.h	/^    ui32 mWhat;$/;"	m	struct:mag_message
mWhenMs	core\looper\inc\Mag_looper.h	/^    i64 mWhenMs;$/;"	m	struct:Event
mag_item	core\looper\inc\Mag_looper.h	/^typedef struct mag_item{$/;"	s
mag_message	core\looper\inc\Mag_looper.h	/^typedef struct mag_message{$/;"	s
messageValue	core\looper\inc\Mag_looper.h	/^        struct mag_message *messageValue;$/;"	m	union:mag_item::__anon39	typeref:struct:mag_item::__anon39::mag_message
mpName	core\looper\inc\Mag_looper.h	/^    ui8 *mpName;$/;"	m	struct:MagLooper
node	core\looper\inc\Mag_looper.h	/^    List_t node;$/;"	m	struct:Event
postMessage	core\looper\inc\Mag_looper.h	/^    boolean (*postMessage)(struct mag_message *msg, i64 delayMs);$/;"	m	struct:mag_message
postMessage	core\looper\inc\Mag_looper.h	/^    void (*postMessage)(struct MagLooper *self, MagMessage_t *msg, i64 delayUs);$/;"	m	struct:MagLooper
priv	core\looper\inc\Mag_looper.h	/^    void *priv; \/*the pointer to the concrete handler object*\/$/;"	m	struct:MagHandler
ptrValue	core\looper\inc\Mag_looper.h	/^        void    *ptrValue;$/;"	m	union:mag_item::__anon39
registerHandler	core\looper\inc\Mag_looper.h	/^    void (*registerHandler)(struct MagLooper *self, const MagHandler_t *handler);$/;"	m	struct:MagLooper
setDouble	core\looper\inc\Mag_looper.h	/^    void (*setDouble)(struct mag_message *msg, const char *name, fp64 value);$/;"	m	struct:mag_message
setFloat	core\looper\inc\Mag_looper.h	/^    void (*setFloat)(struct mag_message *msg, const char *name, fp32 value);$/;"	m	struct:mag_message
setInt32	core\looper\inc\Mag_looper.h	/^    void (*setInt32)(struct mag_message *msg, const char *name, i32 value);$/;"	m	struct:mag_message
setInt64	core\looper\inc\Mag_looper.h	/^    void (*setInt64)(struct mag_message *msg, const char *name, i64 value);$/;"	m	struct:mag_message
setMessage	core\looper\inc\Mag_looper.h	/^    void (*setMessage)(struct mag_message *msg, const char *name, struct mag_message *message, boolean owndedByMsg);$/;"	m	struct:mag_message
setPointer	core\looper\inc\Mag_looper.h	/^    void (*setPointer)(struct mag_message *msg, const char *name, void *value, boolean owndedByMsg);$/;"	m	struct:mag_message
setString	core\looper\inc\Mag_looper.h	/^    void (*setString)(struct mag_message *msg, const char *name, const char *s);$/;"	m	struct:mag_message
setUInt32	core\looper\inc\Mag_looper.h	/^    void (*setUInt32)(struct mag_message *msg, const char *name, ui32 value);$/;"	m	struct:mag_message
start	core\looper\inc\Mag_looper.h	/^    _status_t (*start)(struct MagLooper *self);$/;"	m	struct:MagLooper
stop	core\looper\inc\Mag_looper.h	/^    _status_t (*stop)(struct MagLooper *self);$/;"	m	struct:MagLooper
stringValue	core\looper\inc\Mag_looper.h	/^        char    *stringValue;$/;"	m	union:mag_item::__anon39
u	core\looper\inc\Mag_looper.h	/^    } u;$/;"	m	struct:mag_item	typeref:union:mag_item::__anon39
ui32Value	core\looper\inc\Mag_looper.h	/^        ui32    ui32Value;$/;"	m	union:mag_item::__anon39
uiID	core\looper\inc\Mag_looper.h	/^    ui32 uiID;$/;"	m	struct:MagHandler
unregisterHandler	core\looper\inc\Mag_looper.h	/^    _status_t (*unregisterHandler)(struct MagLooper *self, i32 handlerID);$/;"	m	struct:MagLooper
waitOnAllDone	core\looper\inc\Mag_looper.h	/^    _status_t (*waitOnAllDone)(struct MagLooper *self);$/;"	m	struct:MagLooper
what	core\looper\inc\Mag_looper.h	/^    ui32 (*what)(struct mag_message *msg);$/;"	m	struct:mag_message
LooperThreadEntry	core\looper\src\impl\Mag_looper.c	/^static boolean LooperThreadEntry(void *priv){$/;"	f	file:
LooperThreadReadyToRun	core\looper\src\impl\Mag_looper.c	/^static boolean LooperThreadReadyToRun(void *priv){$/;"	f	file:
MODULE_TAG	core\looper\src\impl\Mag_looper.c	5;"	d	file:
MODULE_TAG	core\looper\src\impl\Mag_looper.c	7;"	d	file:
MagEventQueueEmpty	core\looper\src\impl\Mag_looper.c	/^static boolean MagEventQueueEmpty(MagLooperHandle hLooper){$/;"	f	file:
MagHandler_id	core\looper\src\impl\Mag_looper.c	/^static ui32 MagHandler_id(MagHandlerHandle h){$/;"	f	file:
MagLooper_clear	core\looper\src\impl\Mag_looper.c	/^static void MagLooper_clear(MagLooperHandle hLooper){$/;"	f	file:
MagLooper_getHandlerID	core\looper\src\impl\Mag_looper.c	/^static ui32 MagLooper_getHandlerID(MagLooperHandle hLooper){$/;"	f	file:
MagLooper_postMessage	core\looper\src\impl\Mag_looper.c	/^static void MagLooper_postMessage(MagLooperHandle hLooper, MagMessage_t *msg, i64 delayMs){$/;"	f	file:
MagLooper_registerHandler	core\looper\src\impl\Mag_looper.c	/^static void MagLooper_registerHandler(MagLooperHandle hLooper, const MagHandler_t *handler){$/;"	f	file:
MagLooper_start	core\looper\src\impl\Mag_looper.c	/^static _status_t MagLooper_start(MagLooperHandle hLooper){$/;"	f	file:
MagLooper_stop	core\looper\src\impl\Mag_looper.c	/^static _status_t MagLooper_stop(MagLooperHandle hLooper){$/;"	f	file:
MagLooper_unregisterHandler	core\looper\src\impl\Mag_looper.c	/^static _status_t MagLooper_unregisterHandler(MagLooperHandle hLooper, i32 handlerID){$/;"	f	file:
MagLooper_waitOnAllDone	core\looper\src\impl\Mag_looper.c	/^static _status_t MagLooper_waitOnAllDone(MagLooperHandle hLooper){$/;"	f	file:
clearMessageQueue	core\looper\src\impl\Mag_looper.c	/^static void clearMessageQueue(MagLooperHandle hLooper){$/;"	f	file:
createHandler	core\looper\src\impl\Mag_looper.c	/^MagHandlerHandle createHandler(MagLooperHandle hLooper, fnOnMessageReceived cb, void *priv){$/;"	f
createLooper	core\looper\src\impl\Mag_looper.c	/^MagLooperHandle createLooper(const char *pName){$/;"	f
deliverMessage	core\looper\src\impl\Mag_looper.c	/^static boolean deliverMessage(MagLooperHandle hLooper, MagLooperEvent_t *evt){$/;"	f	file:
destroyHandler	core\looper\src\impl\Mag_looper.c	/^void destroyHandler(MagHandlerHandle hHandler){$/;"	f
destroyLooper	core\looper\src\impl\Mag_looper.c	/^void destroyLooper(MagLooperHandle hLooper){$/;"	f
gLooperId	core\looper\src\impl\Mag_looper.c	/^static ui32 gLooperId = 0;$/;"	v	file:
getFreeEvent	core\looper\src\impl\Mag_looper.c	/^static MagLooperEvent_t *getFreeEvent(MagLooperHandle hLooper){$/;"	f	file:
getHandler	core\looper\src\impl\Mag_looper.c	/^static MagHandlerHandle getHandler(MagLooperHandle hLooper, ui32 id){$/;"	f	file:
getNoDelayMessage	core\looper\src\impl\Mag_looper.c	/^static MagLooperEvent_t *getNoDelayMessage(MagLooperHandle hLooper){$/;"	f	file:
getNowMs	core\looper\src\impl\Mag_looper.c	/^static i64 getNowMs() {$/;"	f	file:
internal_copyMessage	core\looper\src\impl\Mag_looper.c	/^static void internal_copyMessage(MagMessage_t *to, MagMessage_t *from){$/;"	f	file:
putFreeEvent	core\looper\src\impl\Mag_looper.c	/^static void putFreeEvent(MagLooperHandle hLooper, MagLooperEvent_t *pEvent){$/;"	f	file:
MODULE_TAG	core\looper\src\impl\Mag_message.c	4;"	d	file:
MODULE_TAG	core\looper\src\impl\Mag_message.c	6;"	d	file:
MagMessage_findDouble	core\looper\src\impl\Mag_message.c	/^static boolean MagMessage_findDouble(MagMessage_t *msg, const char *name, fp64 *value){$/;"	f	file:
MagMessage_findFloat	core\looper\src\impl\Mag_message.c	/^static boolean MagMessage_findFloat(MagMessage_t *msg, const char *name, fp32 *value){$/;"	f	file:
MagMessage_findInt32	core\looper\src\impl\Mag_message.c	/^static boolean MagMessage_findInt32(MagMessage_t *msg, const char *name, i32 *value){$/;"	f	file:
MagMessage_findInt64	core\looper\src\impl\Mag_message.c	/^static boolean MagMessage_findInt64(MagMessage_t *msg, const char *name, i64 *value){$/;"	f	file:
MagMessage_findMessage	core\looper\src\impl\Mag_message.c	/^static boolean MagMessage_findMessage(MagMessage_t *msg, const char *name, struct mag_message **message){$/;"	f	file:
MagMessage_findPointer	core\looper\src\impl\Mag_message.c	/^static boolean MagMessage_findPointer(MagMessage_t *msg, const char *name, void **value){$/;"	f	file:
MagMessage_findString	core\looper\src\impl\Mag_message.c	/^static boolean MagMessage_findString(MagMessage_t *msg, const char *name, char **s){$/;"	f	file:
MagMessage_findUInt32	core\looper\src\impl\Mag_message.c	/^static boolean MagMessage_findUInt32(MagMessage_t *msg, const char *name, ui32 *value){$/;"	f	file:
MagMessage_postMessage	core\looper\src\impl\Mag_message.c	/^boolean MagMessage_postMessage(MagMessage_t *msg, i64 delayMs){$/;"	f
MagMessage_setDouble	core\looper\src\impl\Mag_message.c	/^static void MagMessage_setDouble(MagMessage_t *msg, const char *name, fp64 value){$/;"	f	file:
MagMessage_setFloat	core\looper\src\impl\Mag_message.c	/^static void MagMessage_setFloat(MagMessage_t *msg, const char *name, fp32 value){$/;"	f	file:
MagMessage_setInt32	core\looper\src\impl\Mag_message.c	/^static void MagMessage_setInt32(MagMessage_t *msg, const char *name, i32 value){$/;"	f	file:
MagMessage_setInt64	core\looper\src\impl\Mag_message.c	/^static void MagMessage_setInt64(MagMessage_t *msg, const char *name, i64 value){$/;"	f	file:
MagMessage_setMessage	core\looper\src\impl\Mag_message.c	/^static void MagMessage_setMessage(MagMessage_t *msg, const char *name, struct mag_message *message, boolean owndedByMsg){$/;"	f	file:
MagMessage_setPointer	core\looper\src\impl\Mag_message.c	/^static void MagMessage_setPointer(MagMessage_t *msg, const char *name, void *value, boolean owndedByMsg){$/;"	f	file:
MagMessage_setString	core\looper\src\impl\Mag_message.c	/^static void MagMessage_setString(MagMessage_t *msg, const char *name, const char *s){$/;"	f	file:
MagMessage_setUInt32	core\looper\src\impl\Mag_message.c	/^static void MagMessage_setUInt32(MagMessage_t *msg, const char *name, ui32 value){$/;"	f	file:
MagMessage_what	core\looper\src\impl\Mag_message.c	/^ui32 MagMessage_what(MagMessage_t *msg){$/;"	f
allocateItem	core\looper\src\impl\Mag_message.c	/^static MagItem_t *allocateItem(MagMessage_t *msg, const char *name){$/;"	f	file:
createMagMessage	core\looper\src\impl\Mag_message.c	/^MagMessageHandle createMagMessage(struct MagLooper *looper, ui32 what, ui32 target){$/;"	f
destroyMagMessage	core\looper\src\impl\Mag_message.c	/^void             destroyMagMessage(MagMessageHandle msg){$/;"	f
findItem	core\looper\src\impl\Mag_message.c	/^static MagItem_t *findItem(MagMessage_t *msg, const char *name, enum MsgPayloadType type){$/;"	f	file:
freeItem	core\looper\src\impl\Mag_message.c	/^static void freeItem(MagItem_t *item){$/;"	f	file:
Comp_A	core\looper\src\test\Mag_looperTest.cpp	/^Comp_A::Comp_A():$/;"	f	class:Comp_A
Comp_A	core\looper\src\test\Mag_looperTest.cpp	/^class Comp_A{$/;"	c	file:
Comp_B	core\looper\src\test\Mag_looperTest.cpp	/^Comp_B::Comp_B():$/;"	f	class:Comp_B
Comp_B	core\looper\src\test\Mag_looperTest.cpp	/^class Comp_B{$/;"	c	file:
HANDLER_MAX_NUM	core\looper\src\test\Mag_looperTest.cpp	8;"	d	file:
LOOPER_NAME	core\looper\src\test\Mag_looperTest.cpp	434;"	d	file:
LOOPER_NAME	core\looper\src\test\Mag_looperTest.cpp	6;"	d	file:
Msg_Test_1	core\looper\src\test\Mag_looperTest.cpp	/^        Msg_Test_1,$/;"	e	enum:Comp_A::__anon40	file:
Msg_Test_2	core\looper\src\test\Mag_looperTest.cpp	/^        Msg_Test_2,$/;"	e	enum:Comp_A::__anon40	file:
Msg_Test_3	core\looper\src\test\Mag_looperTest.cpp	/^        Msg_Test_3,$/;"	e	enum:Comp_A::__anon40	file:
Msg_Test_4	core\looper\src\test\Mag_looperTest.cpp	/^        Msg_Test_4,$/;"	e	enum:Comp_A::__anon40	file:
Msg_Test_5	core\looper\src\test\Mag_looperTest.cpp	/^        Msg_Test_5,$/;"	e	enum:Comp_A::__anon40	file:
Msg_reply	core\looper\src\test\Mag_looperTest.cpp	/^        Msg_reply,$/;"	e	enum:Comp_B::__anon41	file:
createMessage	core\looper\src\test\Mag_looperTest.cpp	/^MagMessageHandle Comp_A::createMessage(ui32 what, ui32 handlerID) {$/;"	f	class:Comp_A
createMessage	core\looper\src\test\Mag_looperTest.cpp	/^MagMessageHandle Comp_B::createMessage(ui32 what, ui32 handlerID) {$/;"	f	class:Comp_B
getLooper	core\looper\src\test\Mag_looperTest.cpp	/^_status_t Comp_A::getLooper(){$/;"	f	class:Comp_A
getLooper	core\looper\src\test\Mag_looperTest.cpp	/^_status_t Comp_B::getLooper(){$/;"	f	class:Comp_B
handler_index	core\looper\src\test\Mag_looperTest.cpp	/^static ui32 handler_index = 0;$/;"	v	file:
mLooper	core\looper\src\test\Mag_looperTest.cpp	/^    MagLooperHandle  mLooper;$/;"	m	class:Comp_A	file:
mLooper	core\looper\src\test\Mag_looperTest.cpp	/^    MagLooperHandle  mLooper;$/;"	m	class:Comp_B	file:
mMsgHandler	core\looper\src\test\Mag_looperTest.cpp	/^    MagHandlerHandle mMsgHandler;$/;"	m	class:Comp_B	file:
mMsgHandler	core\looper\src\test\Mag_looperTest.cpp	/^    MagHandlerHandle mMsgHandler[HANDLER_MAX_NUM];$/;"	m	class:Comp_A	file:
main	core\looper\src\test\Mag_looperTest.cpp	/^int main(){$/;"	f
onMessageReceived	core\looper\src\test\Mag_looperTest.cpp	/^void Comp_A::onMessageReceived(const MagMessageHandle msg, void *priv){$/;"	f	class:Comp_A
onMessageReceived	core\looper\src\test\Mag_looperTest.cpp	/^void Comp_B::onMessageReceived(const MagMessageHandle msg, void *priv){$/;"	f	class:Comp_B
onMsg_Test_1	core\looper\src\test\Mag_looperTest.cpp	/^void Comp_A::onMsg_Test_1(MagMessageHandle msg){$/;"	f	class:Comp_A
onMsg_Test_2	core\looper\src\test\Mag_looperTest.cpp	/^void Comp_A::onMsg_Test_2(MagMessageHandle msg){$/;"	f	class:Comp_A
onMsg_Test_3	core\looper\src\test\Mag_looperTest.cpp	/^void Comp_A::onMsg_Test_3(MagMessageHandle msg){$/;"	f	class:Comp_A
onMsg_Test_4	core\looper\src\test\Mag_looperTest.cpp	/^void Comp_A::onMsg_Test_4(MagMessageHandle msg){$/;"	f	class:Comp_A
onMsg_Test_5	core\looper\src\test\Mag_looperTest.cpp	/^void Comp_A::onMsg_Test_5(MagMessageHandle msg){$/;"	f	class:Comp_A
onMsg_reply	core\looper\src\test\Mag_looperTest.cpp	/^void Comp_B::onMsg_reply(MagMessageHandle msg){$/;"	f	class:Comp_B
start	core\looper\src\test\Mag_looperTest.cpp	/^_status_t Comp_A::start(){$/;"	f	class:Comp_A
start	core\looper\src\test\Mag_looperTest.cpp	/^_status_t Comp_B::start(){$/;"	f	class:Comp_B
waitOnAllDone	core\looper\src\test\Mag_looperTest.cpp	/^void Comp_A::waitOnAllDone(){$/;"	f	class:Comp_A
~Comp_A	core\looper\src\test\Mag_looperTest.cpp	/^Comp_A::~Comp_A(){$/;"	f	class:Comp_A
~Comp_B	core\looper\src\test\Mag_looperTest.cpp	/^Comp_B::~Comp_B(){$/;"	f	class:Comp_B
MSG_CTRL_RUN	core\message\inc\Mag_msg.h	/^    MSG_CTRL_RUN,$/;"	e	enum:__anon32
MSG_CTRL_STOP	core\message\inc\Mag_msg.h	/^    MSG_CTRL_STOP = 0,$/;"	e	enum:__anon32
MSG_DISCARD	core\message\inc\Mag_msg.h	/^    MSG_DISCARD = 0,  \/*discard all messages and stop immediately*\/$/;"	e	enum:__anon31
MSG_FLUSH	core\message\inc\Mag_msg.h	/^    MSG_FLUSH,        \/*finish all messages before stopping*\/$/;"	e	enum:__anon31
MagMsgChannelHandle	core\message\inc\Mag_msg.h	/^typedef Mag_MsgChannel_t* MagMsgChannelHandle;$/;"	t
Mag_Message_t	core\message\inc\Mag_msg.h	/^}Mag_Message_t;$/;"	t	typeref:struct:mag_msg_obj
Mag_MsgChannel_t	core\message\inc\Mag_msg.h	/^}Mag_MsgChannel_t;$/;"	t	typeref:struct:mag_msg_channel_obj
Mag_MsgCtrlType_t	core\message\inc\Mag_msg.h	/^}Mag_MsgCtrlType_t;$/;"	t	typeref:enum:__anon32
Mag_MsgDetachFlag_t	core\message\inc\Mag_msg.h	/^}Mag_MsgDetachFlag_t;$/;"	t	typeref:enum:__anon31
ReceiverThread	core\message\inc\Mag_msg.h	/^    pthread_t ReceiverThread;$/;"	m	struct:mag_msg_channel_obj
_MAG_MESSAGE_H__	core\message\inc\Mag_msg.h	2;"	d
ctrlType	core\message\inc\Mag_msg.h	/^    Mag_MsgCtrlType_t ctrlType;   $/;"	m	struct:mag_msg_obj
event	core\message\inc\Mag_msg.h	/^    MagEventHandle      event;$/;"	m	struct:mag_msg_channel_obj
evtGrp	core\message\inc\Mag_msg.h	/^    MagEventGroupHandle evtGrp;$/;"	m	struct:mag_msg_channel_obj
fnMsgChanReceiver	core\message\inc\Mag_msg.h	/^typedef void (*fnMsgChanReceiver)(void *msg, void *priv);$/;"	t
freeMsgListHead	core\message\inc\Mag_msg.h	/^    List_t freeMsgListHead;$/;"	m	struct:mag_msg_channel_obj
lock	core\message\inc\Mag_msg.h	/^    pthread_mutex_t lock;$/;"	m	struct:mag_msg_channel_obj
mag_msg_channel_obj	core\message\inc\Mag_msg.h	/^typedef struct mag_msg_channel_obj{$/;"	s
mag_msg_obj	core\message\inc\Mag_msg.h	/^typedef struct mag_msg_obj{$/;"	s
msgBody	core\message\inc\Mag_msg.h	/^    unsigned char *msgBody;$/;"	m	struct:mag_msg_obj
msgLen	core\message\inc\Mag_msg.h	/^    unsigned int  msgLen;$/;"	m	struct:mag_msg_obj
msgQueueHead	core\message\inc\Mag_msg.h	/^    List_t msgQueueHead;$/;"	m	struct:mag_msg_channel_obj
node	core\message\inc\Mag_msg.h	/^    List_t node;$/;"	m	struct:mag_msg_obj
privData	core\message\inc\Mag_msg.h	/^    void *privData;$/;"	m	struct:mag_msg_channel_obj
receiverFunc	core\message\inc\Mag_msg.h	/^    fnMsgChanReceiver receiverFunc;$/;"	m	struct:mag_msg_channel_obj
stopped	core\message\inc\Mag_msg.h	/^    MAG_BOOL_t stopped;$/;"	m	struct:mag_msg_channel_obj
MAG_MQ_REALLOCATED_NODES	core\message\inc\Mag_msgQueue.h	10;"	d
Mag_MsgQueueHandle	core\message\inc\Mag_msgQueue.h	/^typedef Mag_MsgQueue_t* Mag_MsgQueueHandle;$/;"	t
Mag_MsgQueueNode_t	core\message\inc\Mag_msgQueue.h	/^}Mag_MsgQueueNode_t;$/;"	t	typeref:struct:__anon33
Mag_MsgQueue_t	core\message\inc\Mag_msgQueue.h	/^}Mag_MsgQueue_t;$/;"	t	typeref:struct:mag_msg_queue
__MAG_MESSAGE_QUEUE_H__	core\message\inc\Mag_msgQueue.h	2;"	d
get	core\message\inc\Mag_msgQueue.h	/^    void (*get)(struct mag_msg_queue *h, MagMessageHandle *msg);$/;"	m	struct:mag_msg_queue
mFreeHead	core\message\inc\Mag_msgQueue.h	/^    List_t mFreeHead;$/;"	m	struct:mag_msg_queue
mLock	core\message\inc\Mag_msgQueue.h	/^    MagMutexHandle mLock;$/;"	m	struct:mag_msg_queue
mQueueHead	core\message\inc\Mag_msgQueue.h	/^    List_t mQueueHead;$/;"	m	struct:mag_msg_queue
mag_msg_queue	core\message\inc\Mag_msgQueue.h	/^typedef struct mag_msg_queue{$/;"	s
msg	core\message\inc\Mag_msgQueue.h	/^    MagMessageHandle msg;$/;"	m	struct:__anon33
node	core\message\inc\Mag_msgQueue.h	/^    List_t node;$/;"	m	struct:__anon33
put	core\message\inc\Mag_msgQueue.h	/^    void (*put)(struct mag_msg_queue *h, MagMessageHandle msg);$/;"	m	struct:mag_msg_queue
MODULE_TAG	core\message\src\impl\Mag_msg.c	7;"	d	file:
MODULE_TAG	core\message\src\impl\Mag_msg.c	9;"	d	file:
Mag_MsgChannelCreate	core\message\src\impl\Mag_msg.c	/^MagErr_t Mag_MsgChannelCreate(MagMsgChannelHandle *handle){$/;"	f
Mag_MsgChannelDestroy	core\message\src\impl\Mag_msg.c	/^MagErr_t Mag_MsgChannelDestroy(MagMsgChannelHandle handle){$/;"	f
Mag_MsgChannelProcessEntry	core\message\src\impl\Mag_msg.c	/^static void *Mag_MsgChannelProcessEntry(void *arg){$/;"	f	file:
Mag_MsgChannelReceiverAttach	core\message\src\impl\Mag_msg.c	/^MagErr_t Mag_MsgChannelReceiverAttach(MagMsgChannelHandle handle, fnMsgChanReceiver func, void *priv_data){$/;"	f
Mag_MsgChannelReceiverDettach	core\message\src\impl\Mag_msg.c	/^MagErr_t Mag_MsgChannelReceiverDettach(MagMsgChannelHandle handle, Mag_MsgDetachFlag_t flag){$/;"	f
Mag_MsgChannelSend	core\message\src\impl\Mag_msg.c	/^MagErr_t Mag_MsgChannelSend(MagMsgChannelHandle handle, const void *msg, const unsigned int msg_len){$/;"	f
Mag_MsgChannelStop	core\message\src\impl\Mag_msg.c	/^static MagErr_t Mag_MsgChannelStop(MagMsgChannelHandle handle, Mag_MsgDetachFlag_t flag){$/;"	f	file:
getMsgNode	core\message\src\impl\Mag_msg.c	/^static Mag_Message_t *getMsgNode(MagMsgChannelHandle handle){$/;"	f	file:
MODULE_TAG	core\message\src\impl\Mag_msgQueue.c	5;"	d	file:
MODULE_TAG	core\message\src\impl\Mag_msgQueue.c	7;"	d	file:
MagMsgQueue_get	core\message\src\impl\Mag_msgQueue.c	/^void MagMsgQueue_get(Mag_MsgQueueHandle h, MagMessageHandle *msg){$/;"	f
MagMsgQueue_put	core\message\src\impl\Mag_msgQueue.c	/^void MagMsgQueue_put(Mag_MsgQueueHandle h, MagMessageHandle msg){$/;"	f
Mag_CreateMsgQueue	core\message\src\impl\Mag_msgQueue.c	/^Mag_MsgQueueHandle Mag_CreateMsgQueue(){$/;"	f
Mag_DestroyMsgQueue	core\message\src\impl\Mag_msgQueue.c	/^void Mag_DestroyMsgQueue(Mag_MsgQueueHandle h){$/;"	f
getFreeMsg	core\message\src\impl\Mag_msgQueue.c	/^static Mag_MsgQueueNode_t *getFreeMsg(Mag_MsgQueueHandle h){$/;"	f	file:
MessageChannelReceiver	core\message\src\test\Mag_msgTest.c	/^void MessageChannelReceiver(void *msg, void *priv){$/;"	f
handle	core\message\src\test\Mag_msgTest.c	/^static MagMsgChannelHandle handle;$/;"	v	file:
loops	core\message\src\test\Mag_msgTest.c	/^static unsigned int loops = 100;$/;"	v	file:
main	core\message\src\test\Mag_msgTest.c	/^int main(){$/;"	f
msgContent	core\message\src\test\Mag_msgTest.c	/^    char msgContent[64];$/;"	m	struct:msgTest	file:
msgID	core\message\src\test\Mag_msgTest.c	/^    int msgID;$/;"	m	struct:msgTest	file:
msgTest	core\message\src\test\Mag_msgTest.c	/^struct msgTest{$/;"	s	file:
post_msg_thread	core\message\src\test\Mag_msgTest.c	/^void *post_msg_thread(void *arg){$/;"	f
thread_ids	core\message\src\test\Mag_msgTest.c	/^static int  thread_ids[3] = {1,2,3};$/;"	v	file:
AllocateClass	core\ooc\inc\Mag_ooc.h	237;"	d
BaseObject	core\ooc\inc\Mag_ooc.h	/^struct BaseObject											$/;"	s
BaseVtable	core\ooc\inc\Mag_ooc.h	/^typedef		struct BaseVtable_stru * BaseVtable;$/;"	t	typeref:struct:BaseVtable_stru
BaseVtable_stru	core\ooc\inc\Mag_ooc.h	/^struct BaseVtable_stru$/;"	s
Class	core\ooc\inc\Mag_ooc.h	/^typedef ROM struct ClassTable * Class;$/;"	t	typeref:struct:ClassTable
ClassCommons	core\ooc\inc\Mag_ooc.h	/^typedef ROM struct _ClassCommonsTable * ClassCommons;$/;"	t	typeref:struct:_ClassCommonsTable
ClassCommonsTable	core\ooc\inc\Mag_ooc.h	/^}	ClassCommonsTable;$/;"	t	typeref:struct:_ClassCommonsTable
ClassMembers	core\ooc\inc\Mag_ooc.h	160;"	d
ClassTable	core\ooc\inc\Mag_ooc.h	/^struct ClassTable$/;"	s
DeclareClass	core\ooc\inc\Mag_ooc.h	141;"	d
EndOfClassMembers	core\ooc\inc\Mag_ooc.h	169;"	d
EndOfVirtuals	core\ooc\inc\Mag_ooc.h	223;"	d
FALSE	core\ooc\inc\Mag_ooc.h	33;"	d
InterfaceID	core\ooc\inc\Mag_ooc.h	/^typedef ROM struct InterfaceID_struct * InterfaceID;$/;"	t	typeref:struct:InterfaceID_struct
InterfaceOffsets_struct	core\ooc\inc\Mag_ooc.h	/^struct InterfaceOffsets_struct$/;"	s
Itable	core\ooc\inc\Mag_ooc.h	/^typedef ROM struct InterfaceOffsets_struct * Itable;$/;"	t	typeref:struct:InterfaceOffsets_struct
OOC_IMPLEMENT_PTR_READ_AND_NULL	core\ooc\inc\Mag_ooc.h	334;"	d
Object	core\ooc\inc\Mag_ooc.h	/^typedef		struct BaseObject * Object;$/;"	t	typeref:struct:BaseObject
ROM	core\ooc\inc\Mag_ooc.h	41;"	d
ROM_ALLOC	core\ooc\inc\Mag_ooc.h	45;"	d
TRUE	core\ooc\inc\Mag_ooc.h	34;"	d
Virtuals	core\ooc\inc\Mag_ooc.h	208;"	d
Vtable	core\ooc\inc\Mag_ooc.h	/^typedef            BaseVtable    Vtable;$/;"	t
_ClassCommonsTable	core\ooc\inc\Mag_ooc.h	/^struct _ClassCommonsTable$/;"	s
_OOC_TYPE_CLASS	core\ooc\inc\Mag_ooc.h	/^enum ooc_TypeID { _OOC_TYPE_CLASS, _OOC_TYPE_INTERFACE, _OOC_TYPE_MIXIN };$/;"	e	enum:ooc_TypeID
_OOC_TYPE_INTERFACE	core\ooc\inc\Mag_ooc.h	/^enum ooc_TypeID { _OOC_TYPE_CLASS, _OOC_TYPE_INTERFACE, _OOC_TYPE_MIXIN };$/;"	e	enum:ooc_TypeID
_OOC_TYPE_MIXIN	core\ooc\inc\Mag_ooc.h	/^enum ooc_TypeID { _OOC_TYPE_CLASS, _OOC_TYPE_INTERFACE, _OOC_TYPE_MIXIN };$/;"	e	enum:ooc_TypeID
__MAG_OOC_H__	core\ooc\inc\Mag_ooc.h	25;"	d
_class	core\ooc\inc\Mag_ooc.h	/^	Class			_class;	$/;"	m	struct:BaseVtable_stru
_class_register_next	core\ooc\inc\Mag_ooc.h	/^	ClassCommons	_class_register_next;$/;"	m	struct:BaseVtable_stru
_class_register_prev	core\ooc\inc\Mag_ooc.h	/^	ClassCommons	_class_register_prev;$/;"	m	struct:BaseVtable_stru
_declare_vtab_access	core\ooc\inc\Mag_ooc.h	190;"	d
_destroy_check	core\ooc\inc\Mag_ooc.h	/^	int   			(* _destroy_check )( Object );$/;"	m	struct:BaseVtable_stru
_parent_vtab_access_fn	core\ooc\inc\Mag_ooc.h	184;"	d
_parent_vtab_access_prototype	core\ooc\inc\Mag_ooc.h	181;"	d
_vtab	core\ooc\inc\Mag_ooc.h	/^	Vtable	_vtab;$/;"	m	struct:BaseObject
_vtab_access_fn	core\ooc\inc\Mag_ooc.h	177;"	d
_vtab_access_prototype	core\ooc\inc\Mag_ooc.h	174;"	d
c	core\ooc\inc\Mag_ooc.h	/^	ClassCommonsTable	c;$/;"	m	struct:ClassTable
chain_constructor	core\ooc\inc\Mag_ooc.h	373;"	d
ctor	core\ooc\inc\Mag_ooc.h	/^	void				(* ctor) (Object self, const void * params );	\/* constructor *\/$/;"	m	struct:ClassTable
dtor	core\ooc\inc\Mag_ooc.h	/^	void				(* dtor) (Object self, Vtable vtab);			\/* destructor *\/$/;"	m	struct:ClassTable
id	core\ooc\inc\Mag_ooc.h	/^	InterfaceID		id;					\/* The interface ID of the implemented interface *\/$/;"	m	struct:InterfaceOffsets_struct
init	core\ooc\inc\Mag_ooc.h	/^	void				(* init) ( Class thiz );        				\/* class initializer *\/$/;"	m	struct:ClassTable
itab_size	core\ooc\inc\Mag_ooc.h	/^	const size_t		itab_size;			\/* the number of implemented Interfaces *\/$/;"	m	struct:ClassTable
itable	core\ooc\inc\Mag_ooc.h	/^	Itable				itable;				\/* the implemented interfaces' Itable *\/$/;"	m	struct:ClassTable
name	core\ooc\inc\Mag_ooc.h	/^	ROM char *			name;				\/* the name of the type (for information only) *\/$/;"	m	struct:__anon42
oocType	core\ooc\inc\Mag_ooc.h	/^oocType;$/;"	t	typeref:struct:__anon42
ooc_TypeID	core\ooc\inc\Mag_ooc.h	/^enum ooc_TypeID { _OOC_TYPE_CLASS, _OOC_TYPE_INTERFACE, _OOC_TYPE_MIXIN };$/;"	g
ooc_cast	core\ooc\inc\Mag_ooc.h	348;"	d
ooc_class_has_parent	core\ooc\inc\Mag_ooc.h	276;"	d
ooc_init_class	core\ooc\inc\Mag_ooc.h	285;"	d
ooc_isInitialized	core\ooc\inc\Mag_ooc.h	384;"	d
ooc_new	core\ooc\inc\Mag_ooc.h	305;"	d
parent	core\ooc\inc\Mag_ooc.h	/^	ROM   Class		 	parent;				\/* parent of the class *\/$/;"	m	struct:ClassTable
size	core\ooc\inc\Mag_ooc.h	/^	const size_t		size;				\/* size of the object *\/$/;"	m	struct:ClassTable
type	core\ooc\inc\Mag_ooc.h	/^	oocType				type;				\/* Type identifier *\/$/;"	m	struct:_ClassCommonsTable
value	core\ooc\inc\Mag_ooc.h	/^	enum ooc_TypeID		value;$/;"	m	struct:__anon42	typeref:enum:__anon42::ooc_TypeID
vtab_offset	core\ooc\inc\Mag_ooc.h	/^	size_t			vtab_offset;		\/* The offset of the interface in the class's virtual table *\/$/;"	m	struct:InterfaceOffsets_struct
vtab_size	core\ooc\inc\Mag_ooc.h	/^	const size_t		vtab_size;			\/* the size of the vtable *\/$/;"	m	struct:ClassTable
vtable	core\ooc\inc\Mag_ooc.h	/^	Vtable			    vtable;				\/* the pointer to the virtual function's table *\/$/;"	m	struct:_ClassCommonsTable
Base	core\ooc\src\impl\Mag_ooc.c	/^	struct	BaseVtable_stru	Base;$/;"	m	struct:_dummyVtable	typeref:struct:_dummyVtable::BaseVtable_stru	file:
BaseClass	core\ooc\src\impl\Mag_ooc.c	/^ROM_ALLOC struct ClassTable BaseClass;$/;"	v	typeref:struct:ClassTable
MODULE_TAG	core\ooc\src\impl\Mag_ooc.c	7;"	d	file:
MODULE_TAG	core\ooc\src\impl\Mag_ooc.c	9;"	d	file:
_dummyVtable	core\ooc\src\impl\Mag_ooc.c	/^struct _dummyVtable {$/;"	s	file:
_ooc_init_class	core\ooc\src\impl\Mag_ooc.c	/^_ooc_init_class( const Class self )$/;"	f
_ooc_isInitialized	core\ooc\src\impl\Mag_ooc.c	/^_ooc_isInitialized( const Class type )$/;"	f
_ooc_isInstanceOf	core\ooc\src\impl\Mag_ooc.c	/^_ooc_isInstanceOf( const Object self, const Class base )$/;"	f
first_virtual_function	core\ooc\src\impl\Mag_ooc.c	/^	void	(* first_virtual_function)( void );$/;"	m	struct:_dummyVtable	file:
inherit_vtable_from_parent	core\ooc\src\impl\Mag_ooc.c	/^inherit_vtable_from_parent( const Class self )$/;"	f	file:
invalid_virtual_function	core\ooc\src\impl\Mag_ooc.c	/^invalid_virtual_function( void )$/;"	f	file:
invalidate_vtable	core\ooc\src\impl\Mag_ooc.c	/^invalidate_vtable( const Class type )$/;"	f	file:
ooc_build_object	core\ooc\src\impl\Mag_ooc.c	/^ooc_build_object( Object object, const Class type, const void * params )$/;"	f	file:
ooc_calloc	core\ooc\src\impl\Mag_ooc.c	/^ooc_calloc( size_t num, size_t size )$/;"	f
ooc_check_cast	core\ooc\src\impl\Mag_ooc.c	/^ooc_check_cast( void * _self, const Class target )$/;"	f
ooc_delete	core\ooc\src\impl\Mag_ooc.c	/^ooc_delete( Object self )$/;"	f
ooc_delete_and_null	core\ooc\src\impl\Mag_ooc.c	/^ooc_delete_and_null( Object * obj_ptr )$/;"	f
ooc_destroy_object	core\ooc\src\impl\Mag_ooc.c	/^ooc_destroy_object( Object self )$/;"	f	file:
ooc_free	core\ooc\src\impl\Mag_ooc.c	/^ooc_free( void * mem )$/;"	f
ooc_isClassChildOf	core\ooc\src\impl\Mag_ooc.c	/^ooc_isClassChildOf( const Class checkable, const Class base )$/;"	f	file:
ooc_new_classptr	core\ooc\src\impl\Mag_ooc.c	/^ooc_new_classptr( const Class type, const void * params )$/;"	f
ooc_ptr_read_and_null	core\ooc\src\impl\Mag_ooc.c	/^ooc_ptr_read_and_null( void ** ptr_ptr )$/;"	f
virtual_function_alignment	core\ooc\src\impl\Mag_ooc.c	39;"	d	file:
Polygon_constructor	core\ooc\src\test\Mag_oocTest.c	/^static void Polygon_constructor(Polygon thiz, const void *params){$/;"	f	file:
Polygon_destructor	core\ooc\src\test\Mag_oocTest.c	/^static void Polygon_destructor(Polygon thiz, PolygonVtable vtab){$/;"	f	file:
Polygon_getColor	core\ooc\src\test\Mag_oocTest.c	/^int Polygon_getColor(Polygon thiz){$/;"	f
Polygon_getOwner	core\ooc\src\test\Mag_oocTest.c	/^char *Polygon_getOwner(Polygon thiz){$/;"	f
Polygon_initialize	core\ooc\src\test\Mag_oocTest.c	/^static void Polygon_initialize(Class this){$/;"	f	file:
Polygon_setColor	core\ooc\src\test\Mag_oocTest.c	/^int Polygon_setColor(Polygon thiz, int colour){$/;"	f
Polygon_setOwner	core\ooc\src\test\Mag_oocTest.c	/^void Polygon_setOwner(Polygon thiz, char *owner){$/;"	f
TriangleInGold_Create	core\ooc\src\test\Mag_oocTest.c	/^TriangleInGold TriangleInGold_Create(int edge, int color){$/;"	f
TriangleInGold_bidBasePrice	core\ooc\src\test\Mag_oocTest.c	/^int TriangleInGold_bidBasePrice(TriangleInGold thiz, int price){$/;"	f
TriangleInGold_constructor	core\ooc\src\test\Mag_oocTest.c	/^static void TriangleInGold_constructor(TriangleInGold thiz, const void *params){$/;"	f	file:
TriangleInGold_destructor	core\ooc\src\test\Mag_oocTest.c	/^static void TriangleInGold_destructor(TriangleInGold thiz, TriangleInGoldVtable vtab){$/;"	f	file:
TriangleInGold_initialize	core\ooc\src\test\Mag_oocTest.c	/^static void TriangleInGold_initialize(Class this){$/;"	f	file:
Triangle_bidBasePrice	core\ooc\src\test\Mag_oocTest.c	/^int Triangle_bidBasePrice(Triangle thiz, int price){$/;"	f
Triangle_constructor	core\ooc\src\test\Mag_oocTest.c	/^static void Triangle_constructor(Triangle thiz, const void *params){$/;"	f	file:
Triangle_destructor	core\ooc\src\test\Mag_oocTest.c	/^static void Triangle_destructor(Triangle thiz, TriangleVtable vtab){$/;"	f	file:
Triangle_initialize	core\ooc\src\test\Mag_oocTest.c	/^static void Triangle_initialize(Class this){$/;"	f	file:
main	core\ooc\src\test\Mag_oocTest.c	/^int main( int argc, char argv[] ){$/;"	f
virtual_triangleInGold_sellToCustomer	core\ooc\src\test\Mag_oocTest.c	/^int virtual_triangleInGold_sellToCustomer(Triangle thiz, int money){   $/;"	f
virtual_triangle_get_edges	core\ooc\src\test\Mag_oocTest.c	/^int virtual_triangle_get_edges(\/*Polygon*\/ void *thiz){$/;"	f
virtual_triangle_sellToCustomer	core\ooc\src\test\Mag_oocTest.c	/^int virtual_triangle_sellToCustomer(Triangle thiz, int money){   $/;"	f
__OOC_TEST_H__	core\ooc\src\test\Mag_oocTest.h	2;"	d
getEdges	core\ooc\src\test\Mag_oocTest.h	/^    int (*getEdges)(\/*Polygon*\/ void *thiz);$/;"	v
mBasePrice	core\ooc\src\test\Mag_oocTest.h	/^    int mBasePrice;$/;"	v
mColor	core\ooc\src\test\Mag_oocTest.h	/^    int mColor;$/;"	v
mEdgeNum	core\ooc\src\test\Mag_oocTest.h	/^    int mEdgeNum;$/;"	v
mTotalPrice	core\ooc\src\test\Mag_oocTest.h	/^    int mTotalPrice;$/;"	v
mpOwner	core\ooc\src\test\Mag_oocTest.h	/^    char *mpOwner;$/;"	v
sellToCustomer	core\ooc\src\test\Mag_oocTest.h	/^    int (*sellToCustomer)(Triangle thiz, int money);$/;"	v
__MAGFRAMEWORK_H__	inc\MagFramework.h	2;"	d
MAG_ALREADY_EXISTS	inc\Mag_pub_def.h	/^    MAG_ALREADY_EXISTS      = -EEXIST,$/;"	e	enum:__anon45
MAG_AssertFault	inc\Mag_pub_def.h	/^    MAG_AssertFault,$/;"	e	enum:__anon44
MAG_BAD_INDEX	inc\Mag_pub_def.h	/^    MAG_BAD_INDEX           = -EOVERFLOW,$/;"	e	enum:__anon45
MAG_BAD_TYPE	inc\Mag_pub_def.h	/^    MAG_BAD_TYPE            = 0x80000001,$/;"	e	enum:__anon45
MAG_BAD_VALUE	inc\Mag_pub_def.h	/^    MAG_BAD_VALUE           = -EINVAL,$/;"	e	enum:__anon45
MAG_BadEvtWait	inc\Mag_pub_def.h	/^    MAG_BadEvtWait,$/;"	e	enum:__anon44
MAG_BadParameter	inc\Mag_pub_def.h	/^    MAG_BadParameter,$/;"	e	enum:__anon44
MAG_DEAD_OBJECT	inc\Mag_pub_def.h	/^    MAG_DEAD_OBJECT         = -EPIPE,$/;"	e	enum:__anon45
MAG_ErrCondCreate	inc\Mag_pub_def.h	/^    MAG_ErrCondCreate,$/;"	e	enum:__anon44
MAG_ErrEvtSetOp	inc\Mag_pub_def.h	/^    MAG_ErrEvtSetOp,$/;"	e	enum:__anon44
MAG_ErrGetTime	inc\Mag_pub_def.h	/^    MAG_ErrGetTime,$/;"	e	enum:__anon44
MAG_ErrMaxEventNum	inc\Mag_pub_def.h	/^    MAG_ErrMaxEventNum,$/;"	e	enum:__anon44
MAG_ErrMutexCreate	inc\Mag_pub_def.h	/^    MAG_ErrMutexCreate,$/;"	e	enum:__anon44
MAG_ErrNone	inc\Mag_pub_def.h	/^    MAG_ErrNone = 0,$/;"	e	enum:__anon44
MAG_ErrThreadCreate	inc\Mag_pub_def.h	/^    MAG_ErrThreadCreate,$/;"	e	enum:__anon44
MAG_EventStatusErr	inc\Mag_pub_def.h	/^    MAG_EventStatusErr,$/;"	e	enum:__anon44
MAG_EventStatusMeet	inc\Mag_pub_def.h	/^    MAG_EventStatusMeet,$/;"	e	enum:__anon44
MAG_FAILED_TRANSACTION	inc\Mag_pub_def.h	/^    MAG_FAILED_TRANSACTION  = 0x80000002,$/;"	e	enum:__anon45
MAG_Failure	inc\Mag_pub_def.h	/^    MAG_Failure,$/;"	e	enum:__anon44
MAG_GCC_VERSION_AT_LEAST	inc\Mag_pub_def.h	7;"	d
MAG_GCC_VERSION_AT_LEAST	inc\Mag_pub_def.h	9;"	d
MAG_INVALID_OPERATION	inc\Mag_pub_def.h	/^    MAG_INVALID_OPERATION   = -ENOSYS,$/;"	e	enum:__anon45
MAG_InvalidOperation	inc\Mag_pub_def.h	/^    MAG_InvalidOperation,$/;"	e	enum:__anon44
MAG_InvalidPointer	inc\Mag_pub_def.h	/^    MAG_InvalidPointer,$/;"	e	enum:__anon44
MAG_NAME_NOT_FOUND	inc\Mag_pub_def.h	/^    MAG_NAME_NOT_FOUND      = -ENOENT,$/;"	e	enum:__anon45
MAG_NOT_ENOUGH_DATA	inc\Mag_pub_def.h	/^    MAG_NOT_ENOUGH_DATA     = -ENODATA,$/;"	e	enum:__anon45
MAG_NO_ERROR	inc\Mag_pub_def.h	/^    MAG_NO_ERROR            = 0,    \/\/ No errors.$/;"	e	enum:__anon45
MAG_NO_INIT	inc\Mag_pub_def.h	/^    MAG_NO_INIT             = -ENODEV,$/;"	e	enum:__anon45
MAG_NO_MEMORY	inc\Mag_pub_def.h	/^    MAG_NO_MEMORY           = -ENOMEM,$/;"	e	enum:__anon45
MAG_NoMemory	inc\Mag_pub_def.h	/^    MAG_NoMemory,$/;"	e	enum:__anon44
MAG_OK	inc\Mag_pub_def.h	/^    MAG_OK                  = 0,    \/\/ Everything's swell.$/;"	e	enum:__anon45
MAG_PERMISSION_DENIED	inc\Mag_pub_def.h	/^    MAG_PERMISSION_DENIED   = -EPERM,$/;"	e	enum:__anon45
MAG_STATUS_EXTENSION	inc\Mag_pub_def.h	/^    MAG_STATUS_EXTENSION    = 0x80000010,$/;"	e	enum:__anon45
MAG_TIMED_OUT	inc\Mag_pub_def.h	/^    MAG_TIMED_OUT           = -ETIMEDOUT,$/;"	e	enum:__anon45
MAG_TIMEOUT_INFINITE	inc\Mag_pub_def.h	57;"	d
MAG_TimeOut	inc\Mag_pub_def.h	/^    MAG_TimeOut,$/;"	e	enum:__anon44
MAG_UNKNOWN_ERROR	inc\Mag_pub_def.h	/^    MAG_UNKNOWN_ERROR       = 0x80000000,$/;"	e	enum:__anon45
MAG_UNKNOWN_TRANSACTION	inc\Mag_pub_def.h	/^    MAG_UNKNOWN_TRANSACTION = -EBADMSG,$/;"	e	enum:__anon45
MAG_WOULD_BLOCK	inc\Mag_pub_def.h	/^    MAG_WOULD_BLOCK         = -EWOULDBLOCK, $/;"	e	enum:__anon45
MagErr_t	inc\Mag_pub_def.h	/^}MagErr_t;$/;"	t	typeref:enum:__anon44
_MAG_PUB_DEF_H__	inc\Mag_pub_def.h	2;"	d
MAG_BOOL_t	inc\Mag_pub_type.h	/^}MAG_BOOL_t;$/;"	t	typeref:enum:__anon43
MAG_FALSE	inc\Mag_pub_type.h	/^    MAG_FALSE = 0,$/;"	e	enum:__anon43
MAG_TRUE	inc\Mag_pub_type.h	/^    MAG_TRUE = 1$/;"	e	enum:__anon43
__MAG_PUB_TYPE_H__	inc\Mag_pub_type.h	2;"	d
_size_t	inc\Mag_pub_type.h	/^typedef size_t             _size_t;$/;"	t
_size_t	inc\Mag_pub_type.h	/^typedef ui32               _size_t;    $/;"	t
_status_t	inc\Mag_pub_type.h	/^typedef i32                _status_t;$/;"	t
_status_t	inc\Mag_pub_type.h	/^typedef int32_t            _status_t;$/;"	t
b32	inc\Mag_pub_type.h	/^typedef ui32               b32;        \/\/\/< 32-bit boolean value$/;"	t
b8	inc\Mag_pub_type.h	/^typedef ui8                b8;         \/\/\/< 8-bit boolean value$/;"	t
boolean	inc\Mag_pub_type.h	/^typedef MAG_BOOL_t         boolean;    \/\/\/< 'bool' for C-language$/;"	t
fp32	inc\Mag_pub_type.h	/^typedef float              fp32;       \/\/\/< 32-bit floating point number$/;"	t
fp64	inc\Mag_pub_type.h	/^typedef double             fp64;       \/\/\/< 64-bit floating point number$/;"	t
i16	inc\Mag_pub_type.h	/^typedef int16_t            i16;        \/\/\/< Signed 16-bit integer$/;"	t
i16	inc\Mag_pub_type.h	/^typedef signed short       i16;        \/\/\/< Signed 16-bit integer$/;"	t
i32	inc\Mag_pub_type.h	/^typedef int32_t            i32;        \/\/\/< Signed 32-bit integer$/;"	t
i32	inc\Mag_pub_type.h	/^typedef signed int         i32;        \/\/\/< Signed 32-bit integer$/;"	t
i64	inc\Mag_pub_type.h	/^typedef int64_t            i64;        \/\/\/< Signed 64-bit integer$/;"	t
i64	inc\Mag_pub_type.h	/^typedef signed long long   i64;        \/\/\/< Signed 64-bit integer$/;"	t
i8	inc\Mag_pub_type.h	/^typedef char               i8;         \/\/\/< Signed 8-bit integer$/;"	t
i8	inc\Mag_pub_type.h	/^typedef int8_t             i8;         \/\/\/< Signed 8-bit integer$/;"	t
io16	inc\Mag_pub_type.h	/^typedef volatile ui16      io16;       \/\/\/< 16-bit I\/O Port$/;"	t
io32	inc\Mag_pub_type.h	/^typedef volatile ui32      io32;       \/\/\/< 32-bit I\/O Port$/;"	t
io64	inc\Mag_pub_type.h	/^typedef volatile ui64      io64;       \/\/\/< 64-bit I\/O Port$/;"	t
io8	inc\Mag_pub_type.h	/^typedef volatile ui8       io8;        \/\/\/< 8-bit I\/O Port$/;"	t
ui16	inc\Mag_pub_type.h	/^typedef uint16_t           ui16;       \/\/\/< Unsigned 16-bit integer$/;"	t
ui16	inc\Mag_pub_type.h	/^typedef unsigned short     ui16;       \/\/\/< Unsigned 16-bit integer$/;"	t
ui32	inc\Mag_pub_type.h	/^typedef uint32_t           ui32;       \/\/\/< Unsigned 32-bit integer$/;"	t
ui32	inc\Mag_pub_type.h	/^typedef unsigned int       ui32;       \/\/\/< Unsigned 32-bit integer$/;"	t
ui64	inc\Mag_pub_type.h	/^typedef uint64_t           ui64;       \/\/\/< Unsigned 64-bit integer$/;"	t
ui64	inc\Mag_pub_type.h	/^typedef unsigned long long ui64;       \/\/\/< Unsigned 64-bit integer$/;"	t
ui8	inc\Mag_pub_type.h	/^typedef uint8_t            ui8;$/;"	t
ui8	inc\Mag_pub_type.h	/^typedef unsigned char      ui8;        \/\/\/< Unsigned 8-bit integer$/;"	t
HAVE_POSIX_CLOCKS	platform\hal\inc\Mag_hal.h	9;"	d
MAG_ASSERT	platform\hal\inc\Mag_hal.h	28;"	d
MAG_MutexObj	platform\hal\inc\Mag_hal.h	/^struct MAG_MutexObj{$/;"	s
MAG_STATIC_MUTEX_Acquire	platform\hal\inc\Mag_hal.h	44;"	d
MAG_STATIC_MUTEX_INITIALIZER	platform\hal\inc\Mag_hal.h	41;"	d
MAG_STATIC_MUTEX_Release	platform\hal\inc\Mag_hal.h	47;"	d
MAG_SYSTEM_TIME_BOOTTIME	platform\hal\inc\Mag_hal.h	/^    MAG_SYSTEM_TIME_BOOTTIME = 4   \/\/ same as SYSTEM_TIME_MONOTONIC, but including CPU suspend time$/;"	e	enum:__anon49
MAG_SYSTEM_TIME_MONOTONIC	platform\hal\inc\Mag_hal.h	/^    MAG_SYSTEM_TIME_MONOTONIC = 1, \/\/ monotonic time since unspecified starting point$/;"	e	enum:__anon49
MAG_SYSTEM_TIME_PROCESS	platform\hal\inc\Mag_hal.h	/^    MAG_SYSTEM_TIME_PROCESS = 2,   \/\/ high-resolution per-process clock$/;"	e	enum:__anon49
MAG_SYSTEM_TIME_REALTIME	platform\hal\inc\Mag_hal.h	/^    MAG_SYSTEM_TIME_REALTIME = 0,  \/\/ system-wide realtime clock$/;"	e	enum:__anon49
MAG_SYSTEM_TIME_THREAD	platform\hal\inc\Mag_hal.h	/^    MAG_SYSTEM_TIME_THREAD = 3,    \/\/ high-resolution per-thread clock$/;"	e	enum:__anon49
MagMutexHandle	platform\hal\inc\Mag_hal.h	/^typedef struct MAG_MutexObj *MagMutexHandle;$/;"	t	typeref:struct:MAG_MutexObj
MagStaticMutex	platform\hal\inc\Mag_hal.h	/^typedef pthread_mutex_t MagStaticMutex;$/;"	t
_MAG_BASE_H__	platform\hal\inc\Mag_hal.h	2;"	d
mutex	platform\hal\inc\Mag_hal.h	/^    pthread_mutex_t mutex;$/;"	m	struct:MAG_MutexObj
MAG_GCC_VERSION_AT_LEAST	platform\hal\inc\Mag_mem.h	13;"	d
MAG_GCC_VERSION_AT_LEAST	platform\hal\inc\Mag_mem.h	15;"	d
__MAG_MEM_H__	platform\hal\inc\Mag_mem.h	2;"	d
mag_alloc_size	platform\hal\inc\Mag_mem.h	26;"	d
mag_alloc_size	platform\hal\inc\Mag_mem.h	28;"	d
mag_malloc_attrib	platform\hal\inc\Mag_mem.h	20;"	d
mag_malloc_attrib	platform\hal\inc\Mag_mem.h	22;"	d
MODULE_TAG	platform\hal\src\Mag_hal.c	10;"	d	file:
MODULE_TAG	platform\hal\src\Mag_hal.c	8;"	d	file:
Mag_AcquireMutex	platform\hal\src\Mag_hal.c	/^MagErr_t Mag_AcquireMutex(MagMutexHandle handler){$/;"	f
Mag_AssertFailed	platform\hal\src\Mag_hal.c	/^void Mag_AssertFailed(const char *expr, const char *file, unsigned int line){$/;"	f
Mag_CreateMutex	platform\hal\src\Mag_hal.c	/^MagErr_t Mag_CreateMutex(MagMutexHandle *handler){$/;"	f
Mag_DestroyMutex	platform\hal\src\Mag_hal.c	/^MagErr_t Mag_DestroyMutex(MagMutexHandle handler){$/;"	f
Mag_GetSystemTime	platform\hal\src\Mag_hal.c	/^ui64 Mag_GetSystemTime(i32 clock)$/;"	f
Mag_ReleaseMutex	platform\hal\src\Mag_hal.c	/^MagErr_t Mag_ReleaseMutex(MagMutexHandle handler){$/;"	f
Mag_TryAcquireMutex	platform\hal\src\Mag_hal.c	/^MagErr_t Mag_TryAcquireMutex(MagMutexHandle handler){$/;"	f
MODULE_TAG	platform\hal\src\Mag_mem.c	6;"	d	file:
MODULE_TAG	platform\hal\src\Mag_mem.c	8;"	d	file:
mag_free	platform\hal\src\Mag_mem.c	/^void mag_free(void *ptr){$/;"	f
mag_freep	platform\hal\src\Mag_mem.c	/^void mag_freep(void **arg){$/;"	f
mag_malloc	platform\hal\src\Mag_mem.c	/^void *mag_malloc(size_t size){$/;"	f
mag_mallocz	platform\hal\src\Mag_mem.c	/^void *mag_mallocz(size_t size){$/;"	f
mag_memdup	platform\hal\src\Mag_mem.c	/^void *mag_memdup(const void *p, size_t size){$/;"	f
mag_realloc	platform\hal\src\Mag_mem.c	/^void *mag_realloc(void *ptr, size_t size){$/;"	f
mag_strdup	platform\hal\src\Mag_mem.c	/^char *mag_strdup(const char *s){$/;"	f
max_alloc_size	platform\hal\src\Mag_mem.c	/^static size_t max_alloc_size= INT_MAX;$/;"	v	file:
BUF_ALIGN	platform\memory\inc\Mag_mempool.h	14;"	d
MemPoolTotal	platform\memory\inc\Mag_mempool.h	/^    unsigned int MemPoolTotal;  \/* the total number of the mempools *\/$/;"	m	struct:__anon46
__MAG_MEM_POOL_H__	platform\memory\inc\Mag_mempool.h	2;"	d
activeMBNode	platform\memory\inc\Mag_mempool.h	/^    List_t *activeMBNode;       \/*point to the MB that hit the allocation in the nearest time*\/$/;"	m	struct:magMempoolInternal_t
allocatedMBListHead	platform\memory\inc\Mag_mempool.h	/^    List_t allocatedMBListHead; \/*organized as FIFO*\/$/;"	m	struct:__anon46
end	platform\memory\inc\Mag_mempool.h	/^    unsigned int end;$/;"	m	struct:__anon47
freeMBListHead	platform\memory\inc\Mag_mempool.h	/^    List_t freeMBListHead;      \/*the free MB nearest to the Mem Pool is always the first node in the list*\/   $/;"	m	struct:magMempoolInternal_t
index	platform\memory\inc\Mag_mempool.h	/^    unsigned int index;         \/* the index of the mempool in terms of the creation time*\/$/;"	m	struct:magMempoolInternal_t
magMemBlock_t	platform\memory\inc\Mag_mempool.h	/^}magMemBlock_t;$/;"	t	typeref:struct:__anon47
magMemPoolMgr_t	platform\memory\inc\Mag_mempool.h	/^}magMemPoolMgr_t;$/;"	t	typeref:struct:__anon46
magMempoolHandle	platform\memory\inc\Mag_mempool.h	/^typedef magMemPoolMgr_t* magMempoolHandle;$/;"	t
magMempoolInternal_t	platform\memory\inc\Mag_mempool.h	/^typedef struct magMempoolInternal_t{$/;"	s
magMempoolInternal_t	platform\memory\inc\Mag_mempool.h	/^}magMempoolInternal_t;$/;"	t	typeref:struct:magMempoolInternal_t
memPoolListHead	platform\memory\inc\Mag_mempool.h	/^    List_t memPoolListHead;     \/*link the magMempoolInternal_t nodes*\/$/;"	m	struct:__anon46
memPoolSize	platform\memory\inc\Mag_mempool.h	/^    unsigned int memPoolSize;$/;"	m	struct:magMempoolInternal_t
mutex	platform\memory\inc\Mag_mempool.h	/^    pthread_mutex_t mutex;$/;"	m	struct:__anon46
node	platform\memory\inc\Mag_mempool.h	/^    List_t node;$/;"	m	struct:__anon47
node	platform\memory\inc\Mag_mempool.h	/^    List_t node;$/;"	m	struct:magMempoolInternal_t
pBuf	platform\memory\inc\Mag_mempool.h	/^    unsigned char *pBuf;$/;"	m	struct:__anon47
pMemPool	platform\memory\inc\Mag_mempool.h	/^    magMempoolInternal_t *pMemPool;$/;"	m	struct:__anon47
pMemPoolBuf	platform\memory\inc\Mag_mempool.h	/^    unsigned char *pMemPoolBuf;$/;"	m	struct:magMempoolInternal_t
start	platform\memory\inc\Mag_mempool.h	/^    unsigned int start;$/;"	m	struct:__anon47
unusedMBListHead	platform\memory\inc\Mag_mempool.h	/^    List_t unusedMBListHead;    \/*no order. used to list the unused magMemBlock_t for later using*\/$/;"	m	struct:__anon46
MODULE_TAG	platform\memory\src\impl\Mag_mempool.c	5;"	d	file:
MODULE_TAG	platform\memory\src\impl\Mag_mempool.c	7;"	d	file:
allocateBuffer	platform\memory\src\impl\Mag_mempool.c	/^static MagErr_t allocateBuffer(magMempoolHandle hMemPool, magMempoolInternal_t *mpInter, unsigned int bytes, unsigned char **getBuffer){$/;"	f	file:
createMemBlock	platform\memory\src\impl\Mag_mempool.c	/^static magMemBlock_t *createMemBlock(magMempoolHandle hMemPool, magMempoolInternal_t *parent, unsigned int start, unsigned int end, unsigned char *p){$/;"	f	file:
createMemPoolInter	platform\memory\src\impl\Mag_mempool.c	/^static magMempoolInternal_t *createMemPoolInter(magMempoolHandle hMemPool, unsigned int bytes){$/;"	f	file:
findAllocMemBlock	platform\memory\src\impl\Mag_mempool.c	/^static magMemBlock_t *findAllocMemBlock(magMempoolHandle hMemPool, void *pBuf){$/;"	f	file:
magMemPoolCreate	platform\memory\src\impl\Mag_mempool.c	/^magMempoolHandle magMemPoolCreate(unsigned int bytes){$/;"	f
magMemPoolDestroy	platform\memory\src\impl\Mag_mempool.c	/^void magMemPoolDestroy(magMempoolHandle hMemPool){$/;"	f
magMemPoolDump	platform\memory\src\impl\Mag_mempool.c	/^void magMemPoolDump(magMempoolHandle hMemPool){$/;"	f
magMemPoolGetBuffer	platform\memory\src\impl\Mag_mempool.c	/^void *magMemPoolGetBuffer(magMempoolHandle hMemPool, unsigned int bytes){$/;"	f
magMemPoolPutBuffer	platform\memory\src\impl\Mag_mempool.c	/^MagErr_t magMemPoolPutBuffer(magMempoolHandle hMemPool, void *pBuf){$/;"	f
magMemPoolReset	platform\memory\src\impl\Mag_mempool.c	/^MagErr_t magMemPoolReset(magMempoolHandle hMemPool){$/;"	f
sortMemPoolList	platform\memory\src\impl\Mag_mempool.c	/^static void sortMemPoolList(magMempoolHandle hMemPool){$/;"	f	file:
BASE_BYTES	platform\memory\src\test\Mag_mempoolTest.c	16;"	d	file:
TESTING_LOOPS	platform\memory\src\test\Mag_mempoolTest.c	13;"	d	file:
buffer	platform\memory\src\test\Mag_mempoolTest.c	/^    void *buffer;$/;"	m	struct:msgMemPool	file:
count	platform\memory\src\test\Mag_mempoolTest.c	/^    int count;$/;"	m	struct:msgMemPool	file:
emptyBufferReceiver	platform\memory\src\test\Mag_mempoolTest.c	/^void emptyBufferReceiver(void *msg, void *priv){$/;"	f
fillBufferEntry	platform\memory\src\test\Mag_mempoolTest.c	/^void *fillBufferEntry(void *arg){$/;"	f
gLoop	platform\memory\src\test\Mag_mempoolTest.c	/^static int gLoop = 0;$/;"	v	file:
hMsgChanl	platform\memory\src\test\Mag_mempoolTest.c	/^static MagMsgChannelHandle hMsgChanl;$/;"	v	file:
main	platform\memory\src\test\Mag_mempoolTest.c	/^int main(){$/;"	f
msgMemPool	platform\memory\src\test\Mag_mempoolTest.c	/^struct msgMemPool{$/;"	s	file:
MAGTHREAD_PRIORITY_HIGH	platform\thread\inc\Mag_thread.h	/^    MAGTHREAD_PRIORITY_HIGH           = -16,$/;"	e	enum:__anon48
MAGTHREAD_PRIORITY_HIGHEST	platform\thread\inc\Mag_thread.h	/^    MAGTHREAD_PRIORITY_HIGHEST        = -20,$/;"	e	enum:__anon48
MAGTHREAD_PRIORITY_LOW	platform\thread\inc\Mag_thread.h	/^    MAGTHREAD_PRIORITY_LOW            = 10,$/;"	e	enum:__anon48
MAGTHREAD_PRIORITY_LOWEST	platform\thread\inc\Mag_thread.h	/^    MAGTHREAD_PRIORITY_LOWEST         = 19,$/;"	e	enum:__anon48
MAGTHREAD_PRIORITY_NORMAL	platform\thread\inc\Mag_thread.h	/^    MAGTHREAD_PRIORITY_NORMAL         = 0,$/;"	e	enum:__anon48
MagThreadHandle	platform\thread\inc\Mag_thread.h	/^typedef MagThread_t*   MagThreadHandle;$/;"	t
MagThread_Priority_t	platform\thread\inc\Mag_thread.h	/^}MagThread_Priority_t;$/;"	t	typeref:enum:__anon48
MagThread_t	platform\thread\inc\Mag_thread.h	/^}MagThread_t;$/;"	t	typeref:struct:mag_thread
__MAG_THREAD_H__	platform\thread\inc\Mag_thread.h	2;"	d
fnReadyToRun	platform\thread\inc\Mag_thread.h	/^typedef boolean (*fnReadyToRun)(void *priv);$/;"	t
fnThreadLoop	platform\thread\inc\Mag_thread.h	/^typedef boolean (*fnThreadLoop)(void *priv);$/;"	t
mExitEvt	platform\thread\inc\Mag_thread.h	/^    MagEventHandle      mExitEvt;$/;"	m	struct:mag_thread
mExitEvtGroup	platform\thread\inc\Mag_thread.h	/^    MagEventGroupHandle mExitEvtGroup;$/;"	m	struct:mag_thread
mExitPending	platform\thread\inc\Mag_thread.h	/^    boolean   mExitPending;$/;"	m	struct:mag_thread
mLock	platform\thread\inc\Mag_thread.h	/^    MagMutexHandle mLock;$/;"	m	struct:mag_thread
mName	platform\thread\inc\Mag_thread.h	/^    char *mName;$/;"	m	struct:mag_thread
mPriority	platform\thread\inc\Mag_thread.h	/^    i32  mPriority;$/;"	m	struct:mag_thread
mPriv	platform\thread\inc\Mag_thread.h	/^    void *mPriv;$/;"	m	struct:mag_thread
mRunning	platform\thread\inc\Mag_thread.h	/^    boolean   mRunning;$/;"	m	struct:mag_thread
mStackSize	platform\thread\inc\Mag_thread.h	/^    ui32 mStackSize;$/;"	m	struct:mag_thread
mThread	platform\thread\inc\Mag_thread.h	/^    void      *mThread;$/;"	m	struct:mag_thread
mag_thread	platform\thread\inc\Mag_thread.h	/^typedef struct mag_thread{$/;"	s
mfnReadyToRun	platform\thread\inc\Mag_thread.h	/^    fnReadyToRun mfnReadyToRun;$/;"	m	struct:mag_thread
mfnTheadLoop	platform\thread\inc\Mag_thread.h	/^    fnThreadLoop mfnTheadLoop;$/;"	m	struct:mag_thread
requestExit	platform\thread\inc\Mag_thread.h	/^    _status_t (*requestExit)(struct mag_thread *self);$/;"	m	struct:mag_thread
requestExitAndWait	platform\thread\inc\Mag_thread.h	/^    _status_t (*requestExitAndWait)(struct mag_thread *self, i32 timeout);$/;"	m	struct:mag_thread
run	platform\thread\inc\Mag_thread.h	/^    _status_t (*run)(struct mag_thread *self);$/;"	m	struct:mag_thread
setFunc_readyToRun	platform\thread\inc\Mag_thread.h	/^    _status_t (*setFunc_readyToRun)(struct mag_thread *self, fnReadyToRun fn);$/;"	m	struct:mag_thread
setParm_Priority	platform\thread\inc\Mag_thread.h	/^    _status_t (*setParm_Priority)(struct mag_thread *self, MagThread_Priority_t priority);$/;"	m	struct:mag_thread
setParm_StackSize	platform\thread\inc\Mag_thread.h	/^    _status_t (*setParm_StackSize)(struct mag_thread *self, _size_t stackSize);$/;"	m	struct:mag_thread
MODULE_TAG	platform\thread\src\impl\Mag_thread.c	11;"	d	file:
MODULE_TAG	platform\thread\src\impl\Mag_thread.c	13;"	d	file:
MagThread_Run	platform\thread\src\impl\Mag_thread.c	/^static _status_t MagThread_Run(MagThread_t *self){$/;"	f	file:
MagThread_readyToRun	platform\thread\src\impl\Mag_thread.c	/^_status_t MagThread_readyToRun(MagThread_t *self, fnReadyToRun fn){$/;"	f
MagThread_requestExit	platform\thread\src\impl\Mag_thread.c	/^_status_t  MagThread_requestExit(MagThread_t *self){$/;"	f
MagThread_requestExitAndWait	platform\thread\src\impl\Mag_thread.c	/^_status_t MagThread_requestExitAndWait(MagThread_t *self, i32 timeout){$/;"	f
MagThread_setParm_Priority	platform\thread\src\impl\Mag_thread.c	/^_status_t MagThread_setParm_Priority(MagThread_t *self, MagThread_Priority_t priority){$/;"	f
MagThread_setParm_StackSize	platform\thread\src\impl\Mag_thread.c	/^_status_t MagThread_setParm_StackSize(MagThread_t *self, _size_t stackSize){$/;"	f
Mag_CreateThread	platform\thread\src\impl\Mag_thread.c	/^MagThreadHandle Mag_CreateThread(const char* name, fnThreadLoop fn, void *priv){$/;"	f
Mag_DestroyThread	platform\thread\src\impl\Mag_thread.c	/^void Mag_DestroyThread(MagThreadHandle self){$/;"	f
createThread	platform\thread\src\impl\Mag_thread.c	/^static _status_t createThread(MagThread_t *self){$/;"	f	file:
loopEntry	platform\thread\src\impl\Mag_thread.c	/^static void *loopEntry(void *priv){$/;"	f	file:
loopEntryWrapper	platform\thread\src\impl\Mag_thread.c	/^static _status_t loopEntryWrapper(void *userData){$/;"	f	file:
EatThreadEntry	platform\thread\src\test\Mag_threadTest.c	/^boolean EatThreadEntry(void *priv){$/;"	f
EatThread_ReadyToRun	platform\thread\src\test\Mag_threadTest.c	/^boolean EatThread_ReadyToRun(void *priv){$/;"	f
SleepThreadEntry	platform\thread\src\test\Mag_threadTest.c	/^boolean SleepThreadEntry(void *priv){$/;"	f
WorkThreadEntry	platform\thread\src\test\Mag_threadTest.c	/^boolean WorkThreadEntry(void *priv){$/;"	f
age	platform\thread\src\test\Mag_threadTest.c	/^    i32  age;$/;"	m	struct:person	file:
child	platform\thread\src\test\Mag_threadTest.c	/^struct person child;$/;"	v	typeref:struct:person
father	platform\thread\src\test\Mag_threadTest.c	/^struct person father;$/;"	v	typeref:struct:person
gThreads_eat	platform\thread\src\test\Mag_threadTest.c	/^MagThreadHandle gThreads_eat;$/;"	v
gThreads_sleep	platform\thread\src\test\Mag_threadTest.c	/^MagThreadHandle gThreads_sleep;$/;"	v
gThreads_work	platform\thread\src\test\Mag_threadTest.c	/^MagThreadHandle gThreads_work;$/;"	v
id	platform\thread\src\test\Mag_threadTest.c	/^    i32 id;$/;"	m	struct:person	file:
main	platform\thread\src\test\Mag_threadTest.c	/^int main(){$/;"	f
mother	platform\thread\src\test\Mag_threadTest.c	/^struct person mother;$/;"	v	typeref:struct:person
name	platform\thread\src\test\Mag_threadTest.c	/^    char *name;$/;"	m	struct:person	file:
person	platform\thread\src\test\Mag_threadTest.c	/^struct person{$/;"	s	file:
times	platform\thread\src\test\Mag_threadTest.c	/^    i32 times;$/;"	m	struct:person	file:
Mag_getFrameWorkVer	version\Mag_FrameworkVer.c	/^void Mag_getFrameWorkVer(char **ppVer){$/;"	f
kFrameworkVersion	version\Mag_FrameworkVer.c	4;"	d	file:
__MAG_FRAMEWORK_VERSION_H__	version\Mag_FrameworkVer.h	2;"	d
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.8	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
